ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Modbus.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	holdingReg,100,4
  18              		.comm	coils,50,4
  19              		.comm	received,125,4
  20              		.comm	response,125,4
  21              		.global	newMessage
  22              		.data
  23              		.type	newMessage, %object
  24              		.size	newMessage, 1
  25              	newMessage:
  26 0000 01       		.byte	1
  27              		.global	middleOfMessage
  28              		.bss
  29              		.type	middleOfMessage, %object
  30              		.size	middleOfMessage, 1
  31              	middleOfMessage:
  32 0000 00       		.space	1
  33              		.global	z
  34              		.type	z, %object
  35              		.size	z, 1
  36              	z:
  37 0001 00       		.space	1
  38              		.global	messageLengthNotChanged
  39              		.type	messageLengthNotChanged, %object
  40              		.size	messageLengthNotChanged, 1
  41              	messageLengthNotChanged:
  42 0002 00       		.space	1
  43              		.global	messageLength
  44              		.type	messageLength, %object
  45              		.size	messageLength, 1
  46              	messageLength:
  47 0003 00       		.space	1
  48              		.global	oldMessageLength
  49              		.type	oldMessageLength, %object
  50              		.size	oldMessageLength, 1
  51              	oldMessageLength:
  52 0004 00       		.space	1
  53              		.global	timerCount
  54              		.type	timerCount, %object
  55              		.size	timerCount, 1
  56              	timerCount:
  57 0005 00       		.space	1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 2


  58              		.global	middleMessageCount
  59              		.type	middleMessageCount, %object
  60              		.size	middleMessageCount, 1
  61              	middleMessageCount:
  62 0006 00       		.space	1
  63              		.global	newMessageCount
  64              		.type	newMessageCount, %object
  65              		.size	newMessageCount, 1
  66              	newMessageCount:
  67 0007 00       		.space	1
  68              		.global	oldPin
  69              		.type	oldPin, %object
  70              		.size	oldPin, 1
  71              	oldPin:
  72 0008 00       		.space	1
  73              		.global	modbusMessage
  74              		.type	modbusMessage, %object
  75              		.size	modbusMessage, 1
  76              	modbusMessage:
  77 0009 00       		.space	1
  78              		.global	turnLineAround
  79              		.type	turnLineAround, %object
  80              		.size	turnLineAround, 1
  81              	turnLineAround:
  82 000a 00       		.space	1
  83              		.section	.text.decodeMessage,"ax",%progbits
  84              		.align	2
  85              		.global	decodeMessage
  86              		.code	16
  87              		.thumb_func
  88              		.type	decodeMessage, %function
  89              	decodeMessage:
  90              	.LFB33:
  91              		.file 1 ".\\Modbus.c"
   1:.\Modbus.c    **** /* ========================================
   2:.\Modbus.c    ****  *
   3:.\Modbus.c    ****  * Copyright Sam Walsh, 2014
   4:.\Modbus.c    ****  * All Rights Reserved.
   5:.\Modbus.c    ****  *
   6:.\Modbus.c    ****  * Modbus.c all of the modbus and communication functions
   7:.\Modbus.c    ****  *
   8:.\Modbus.c    ****  * ========================================
   9:.\Modbus.c    **** */
  10:.\Modbus.c    **** #include <project.h>
  11:.\Modbus.c    **** #include <cydevice_trm.h>
  12:.\Modbus.c    **** #include <CyLib.h>
  13:.\Modbus.c    **** #include <interrupts.h>
  14:.\Modbus.c    **** #include <ModbusUART.h>
  15:.\Modbus.c    **** #include <MessageTimer.h>
  16:.\Modbus.c    **** #include <Modbus.h>
  17:.\Modbus.c    **** 
  18:.\Modbus.c    **** #define SlaveAddress 5 //Change this to whatever you want
  19:.\Modbus.c    **** #define CHECK_BIT(var,pos) !!((var) & (1 << (pos)))
  20:.\Modbus.c    **** 
  21:.\Modbus.c    **** uint16  holdingReg[50];                                                                            
  22:.\Modbus.c    **** unsigned char coils[50];
  23:.\Modbus.c    **** unsigned char received[125];
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 3


  24:.\Modbus.c    **** unsigned char response[125]; //Enough to return all holding-r's
  25:.\Modbus.c    **** 
  26:.\Modbus.c    **** //Global variables (going to definitely use these)//
  27:.\Modbus.c    **** volatile uint8 newMessage = 1;
  28:.\Modbus.c    **** volatile uint8 middleOfMessage = 0;
  29:.\Modbus.c    **** volatile uint8 z = 0;
  30:.\Modbus.c    **** volatile uint8 messageLengthNotChanged = 0;
  31:.\Modbus.c    **** volatile uint8 messageLength = 0;
  32:.\Modbus.c    **** volatile uint8 oldMessageLength = 0;
  33:.\Modbus.c    **** volatile uint8 timerCount = 0;
  34:.\Modbus.c    **** volatile uint8 middleMessageCount = 0;
  35:.\Modbus.c    **** volatile uint8 newMessageCount = 0;
  36:.\Modbus.c    **** volatile uint8 oldPin = 0;
  37:.\Modbus.c    **** volatile uint8 modbusMessage = 0;
  38:.\Modbus.c    **** volatile uint8 turnLineAround = 0;
  39:.\Modbus.c    **** 
  40:.\Modbus.c    **** void decodeMessage(void)
  41:.\Modbus.c    **** {
  92              		.loc 1 41 0
  93              		.cfi_startproc
  94 0000 98B5     		push	{r3, r4, r7, lr}
  95              		.cfi_def_cfa_offset 16
  96              		.cfi_offset 3, -16
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
  42:.\Modbus.c    ****     if(middleOfMessage)
 102              		.loc 1 42 0
 103 0004 2B4B     		ldr	r3, .L4
 104 0006 1B78     		ldrb	r3, [r3]
 105 0008 DBB2     		uxtb	r3, r3
 106 000a 002B     		cmp	r3, #0
 107 000c 1FD0     		beq	.L2
  43:.\Modbus.c    ****     {
  44:.\Modbus.c    ****         received[z] = ModbusUART_UartGetChar();
 108              		.loc 1 44 0
 109 000e 2A4B     		ldr	r3, .L4+4
 110 0010 1B78     		ldrb	r3, [r3]
 111 0012 DBB2     		uxtb	r3, r3
 112 0014 1C1C     		mov	r4, r3
 113 0016 FFF7FEFF 		bl	ModbusUART_UartGetChar
 114 001a 031C     		mov	r3, r0
 115 001c DAB2     		uxtb	r2, r3
 116 001e 274B     		ldr	r3, .L4+8
 117 0020 1A55     		strb	r2, [r3, r4]
  45:.\Modbus.c    ****         z++;
 118              		.loc 1 45 0
 119 0022 254B     		ldr	r3, .L4+4
 120 0024 1B78     		ldrb	r3, [r3]
 121 0026 DBB2     		uxtb	r3, r3
 122 0028 0133     		add	r3, r3, #1
 123 002a DAB2     		uxtb	r2, r3
 124 002c 224B     		ldr	r3, .L4+4
 125 002e 1A70     		strb	r2, [r3]
  46:.\Modbus.c    ****         middleMessageCount ++;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 4


 126              		.loc 1 46 0
 127 0030 234B     		ldr	r3, .L4+12
 128 0032 1B78     		ldrb	r3, [r3]
 129 0034 DBB2     		uxtb	r3, r3
 130 0036 0133     		add	r3, r3, #1
 131 0038 DAB2     		uxtb	r2, r3
 132 003a 214B     		ldr	r3, .L4+12
 133 003c 1A70     		strb	r2, [r3]
  47:.\Modbus.c    ****         messageLengthNotChanged = 0;
 134              		.loc 1 47 0
 135 003e 214B     		ldr	r3, .L4+16
 136 0040 0022     		mov	r2, #0
 137 0042 1A70     		strb	r2, [r3]
  48:.\Modbus.c    ****         messageLength = z;
 138              		.loc 1 48 0
 139 0044 1C4B     		ldr	r3, .L4+4
 140 0046 1B78     		ldrb	r3, [r3]
 141 0048 DAB2     		uxtb	r2, r3
 142 004a 1F4B     		ldr	r3, .L4+20
 143 004c 1A70     		strb	r2, [r3]
 144              	.L2:
  49:.\Modbus.c    ****     }
  50:.\Modbus.c    ****     
  51:.\Modbus.c    ****     if(newMessage)
 145              		.loc 1 51 0
 146 004e 1F4B     		ldr	r3, .L4+24
 147 0050 1B78     		ldrb	r3, [r3]
 148 0052 DBB2     		uxtb	r3, r3
 149 0054 002B     		cmp	r3, #0
 150 0056 2BD0     		beq	.L1
  52:.\Modbus.c    ****     {
  53:.\Modbus.c    ****         received[z] = ModbusUART_UartGetChar();
 151              		.loc 1 53 0
 152 0058 174B     		ldr	r3, .L4+4
 153 005a 1B78     		ldrb	r3, [r3]
 154 005c DBB2     		uxtb	r3, r3
 155 005e 1C1C     		mov	r4, r3
 156 0060 FFF7FEFF 		bl	ModbusUART_UartGetChar
 157 0064 031C     		mov	r3, r0
 158 0066 DAB2     		uxtb	r2, r3
 159 0068 144B     		ldr	r3, .L4+8
 160 006a 1A55     		strb	r2, [r3, r4]
  54:.\Modbus.c    ****         z++;
 161              		.loc 1 54 0
 162 006c 124B     		ldr	r3, .L4+4
 163 006e 1B78     		ldrb	r3, [r3]
 164 0070 DBB2     		uxtb	r3, r3
 165 0072 0133     		add	r3, r3, #1
 166 0074 DAB2     		uxtb	r2, r3
 167 0076 104B     		ldr	r3, .L4+4
 168 0078 1A70     		strb	r2, [r3]
  55:.\Modbus.c    ****         messageLength = z;
 169              		.loc 1 55 0
 170 007a 0F4B     		ldr	r3, .L4+4
 171 007c 1B78     		ldrb	r3, [r3]
 172 007e DAB2     		uxtb	r2, r3
 173 0080 114B     		ldr	r3, .L4+20
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 5


 174 0082 1A70     		strb	r2, [r3]
  56:.\Modbus.c    ****         middleOfMessage = 1;
 175              		.loc 1 56 0
 176 0084 0B4B     		ldr	r3, .L4
 177 0086 0122     		mov	r2, #1
 178 0088 1A70     		strb	r2, [r3]
  57:.\Modbus.c    ****         newMessage = 0;
 179              		.loc 1 57 0
 180 008a 104B     		ldr	r3, .L4+24
 181 008c 0022     		mov	r2, #0
 182 008e 1A70     		strb	r2, [r3]
  58:.\Modbus.c    ****         MessageTimer_Start();
 183              		.loc 1 58 0
 184 0090 FFF7FEFF 		bl	MessageTimer_Start
  59:.\Modbus.c    ****         EndOfMessage_StartEx(endOfMessage_isr);
 185              		.loc 1 59 0
 186 0094 0E4B     		ldr	r3, .L4+28
 187 0096 181C     		mov	r0, r3
 188 0098 FFF7FEFF 		bl	EndOfMessage_StartEx
  60:.\Modbus.c    ****         newMessageCount ++;
 189              		.loc 1 60 0
 190 009c 0D4B     		ldr	r3, .L4+32
 191 009e 1B78     		ldrb	r3, [r3]
 192 00a0 DBB2     		uxtb	r3, r3
 193 00a2 0133     		add	r3, r3, #1
 194 00a4 DAB2     		uxtb	r2, r3
 195 00a6 0B4B     		ldr	r3, .L4+32
 196 00a8 1A70     		strb	r2, [r3]
  61:.\Modbus.c    ****         messageLengthNotChanged = 0;
 197              		.loc 1 61 0
 198 00aa 064B     		ldr	r3, .L4+16
 199 00ac 0022     		mov	r2, #0
 200 00ae 1A70     		strb	r2, [r3]
 201              	.L1:
  62:.\Modbus.c    **** 
  63:.\Modbus.c    ****     }
  64:.\Modbus.c    **** }
 202              		.loc 1 64 0
 203 00b0 BD46     		mov	sp, r7
 204              		@ sp needed
 205 00b2 98BD     		pop	{r3, r4, r7, pc}
 206              	.L5:
 207              		.align	2
 208              	.L4:
 209 00b4 00000000 		.word	middleOfMessage
 210 00b8 00000000 		.word	z
 211 00bc 00000000 		.word	received
 212 00c0 00000000 		.word	middleMessageCount
 213 00c4 00000000 		.word	messageLengthNotChanged
 214 00c8 00000000 		.word	messageLength
 215 00cc 00000000 		.word	newMessage
 216 00d0 00000000 		.word	endOfMessage_isr
 217 00d4 00000000 		.word	newMessageCount
 218              		.cfi_endproc
 219              	.LFE33:
 220              		.size	decodeMessage, .-decodeMessage
 221              		.section	.text.checkIfEndOfMessage,"ax",%progbits
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 6


 222              		.align	2
 223              		.global	checkIfEndOfMessage
 224              		.code	16
 225              		.thumb_func
 226              		.type	checkIfEndOfMessage, %function
 227              	checkIfEndOfMessage:
 228              	.LFB34:
  65:.\Modbus.c    **** 
  66:.\Modbus.c    **** void checkIfEndOfMessage(void)
  67:.\Modbus.c    **** {
 229              		.loc 1 67 0
 230              		.cfi_startproc
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
  68:.\Modbus.c    ****     if(turnLineAround > 0)
 237              		.loc 1 68 0
 238 0004 334B     		ldr	r3, .L12
 239 0006 1B78     		ldrb	r3, [r3]
 240 0008 DBB2     		uxtb	r3, r3
 241 000a 002B     		cmp	r3, #0
 242 000c 1CD0     		beq	.L7
  69:.\Modbus.c    ****     {
  70:.\Modbus.c    ****         turnLineAround -= 1;
 243              		.loc 1 70 0
 244 000e 314B     		ldr	r3, .L12
 245 0010 1B78     		ldrb	r3, [r3]
 246 0012 DBB2     		uxtb	r3, r3
 247 0014 013B     		sub	r3, r3, #1
 248 0016 DAB2     		uxtb	r2, r3
 249 0018 2E4B     		ldr	r3, .L12
 250 001a 1A70     		strb	r2, [r3]
  71:.\Modbus.c    ****         if(turnLineAround == 0)
 251              		.loc 1 71 0
 252 001c 2D4B     		ldr	r3, .L12
 253 001e 1B78     		ldrb	r3, [r3]
 254 0020 DBB2     		uxtb	r3, r3
 255 0022 002B     		cmp	r3, #0
 256 0024 0AD1     		bne	.L8
  72:.\Modbus.c    ****         {
  73:.\Modbus.c    ****           MessageTimer_Stop();
 257              		.loc 1 73 0
 258 0026 FFF7FEFF 		bl	MessageTimer_Stop
  74:.\Modbus.c    ****           EndOfMessage_Stop();
 259              		.loc 1 74 0
 260 002a FFF7FEFF 		bl	EndOfMessage_Stop
  75:.\Modbus.c    ****           writeEnable_Write(0); //turn line around
 261              		.loc 1 75 0
 262 002e 0020     		mov	r0, #0
 263 0030 FFF7FEFF 		bl	writeEnable_Write
  76:.\Modbus.c    ****           turnLineAround = 0;
 264              		.loc 1 76 0
 265 0034 274B     		ldr	r3, .L12
 266 0036 0022     		mov	r2, #0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 7


 267 0038 1A70     		strb	r2, [r3]
 268 003a 05E0     		b	.L7
 269              	.L8:
  77:.\Modbus.c    ****         }
  78:.\Modbus.c    ****         else
  79:.\Modbus.c    ****         {
  80:.\Modbus.c    ****             MessageTimer_Start();
 270              		.loc 1 80 0
 271 003c FFF7FEFF 		bl	MessageTimer_Start
  81:.\Modbus.c    ****             EndOfMessage_StartEx(endOfMessage_isr);   
 272              		.loc 1 81 0
 273 0040 254B     		ldr	r3, .L12+4
 274 0042 181C     		mov	r0, r3
 275 0044 FFF7FEFF 		bl	EndOfMessage_StartEx
 276              	.L7:
  82:.\Modbus.c    ****         }      
  83:.\Modbus.c    ****     }
  84:.\Modbus.c    ****     if(turnLineAround == 0)
 277              		.loc 1 84 0
 278 0048 224B     		ldr	r3, .L12
 279 004a 1B78     		ldrb	r3, [r3]
 280 004c DBB2     		uxtb	r3, r3
 281 004e 002B     		cmp	r3, #0
 282 0050 32D1     		bne	.L9
  85:.\Modbus.c    ****     if(middleOfMessage)
 283              		.loc 1 85 0
 284 0052 224B     		ldr	r3, .L12+8
 285 0054 1B78     		ldrb	r3, [r3]
 286 0056 DBB2     		uxtb	r3, r3
 287 0058 002B     		cmp	r3, #0
 288 005a 2DD0     		beq	.L9
  86:.\Modbus.c    ****     {
  87:.\Modbus.c    ****         if(oldMessageLength == messageLength)
 289              		.loc 1 87 0
 290 005c 204B     		ldr	r3, .L12+12
 291 005e 1B78     		ldrb	r3, [r3]
 292 0060 DAB2     		uxtb	r2, r3
 293 0062 204B     		ldr	r3, .L12+16
 294 0064 1B78     		ldrb	r3, [r3]
 295 0066 DBB2     		uxtb	r3, r3
 296 0068 9A42     		cmp	r2, r3
 297 006a 06D1     		bne	.L10
  88:.\Modbus.c    ****         {
  89:.\Modbus.c    ****             messageLengthNotChanged++;
 298              		.loc 1 89 0
 299 006c 1E4B     		ldr	r3, .L12+20
 300 006e 1B78     		ldrb	r3, [r3]
 301 0070 DBB2     		uxtb	r3, r3
 302 0072 0133     		add	r3, r3, #1
 303 0074 DAB2     		uxtb	r2, r3
 304 0076 1C4B     		ldr	r3, .L12+20
 305 0078 1A70     		strb	r2, [r3]
 306              	.L10:
  90:.\Modbus.c    ****         }
  91:.\Modbus.c    ****         if(messageLengthNotChanged == 5)
 307              		.loc 1 91 0
 308 007a 1B4B     		ldr	r3, .L12+20
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 8


 309 007c 1B78     		ldrb	r3, [r3]
 310 007e DBB2     		uxtb	r3, r3
 311 0080 052B     		cmp	r3, #5
 312 0082 13D1     		bne	.L11
  92:.\Modbus.c    ****         {
  93:.\Modbus.c    ****             //We are at the end of the message
  94:.\Modbus.c    ****             newMessage = 1;
 313              		.loc 1 94 0
 314 0084 194B     		ldr	r3, .L12+24
 315 0086 0122     		mov	r2, #1
 316 0088 1A70     		strb	r2, [r3]
  95:.\Modbus.c    ****             modbusMessage = 1; //for main loop
 317              		.loc 1 95 0
 318 008a 194B     		ldr	r3, .L12+28
 319 008c 0122     		mov	r2, #1
 320 008e 1A70     		strb	r2, [r3]
  96:.\Modbus.c    ****             middleOfMessage = 0;
 321              		.loc 1 96 0
 322 0090 124B     		ldr	r3, .L12+8
 323 0092 0022     		mov	r2, #0
 324 0094 1A70     		strb	r2, [r3]
  97:.\Modbus.c    ****             messageLengthNotChanged = 0;
 325              		.loc 1 97 0
 326 0096 144B     		ldr	r3, .L12+20
 327 0098 0022     		mov	r2, #0
 328 009a 1A70     		strb	r2, [r3]
  98:.\Modbus.c    ****             z=0;
 329              		.loc 1 98 0
 330 009c 154B     		ldr	r3, .L12+32
 331 009e 0022     		mov	r2, #0
 332 00a0 1A70     		strb	r2, [r3]
  99:.\Modbus.c    ****             MessageTimer_Stop();
 333              		.loc 1 99 0
 334 00a2 FFF7FEFF 		bl	MessageTimer_Stop
 100:.\Modbus.c    ****             EndOfMessage_Stop();
 335              		.loc 1 100 0
 336 00a6 FFF7FEFF 		bl	EndOfMessage_Stop
 337 00aa 05E0     		b	.L9
 338              	.L11:
 101:.\Modbus.c    ****             /*Clear received array */
 102:.\Modbus.c    ****             //memset(&received[0], 0, sizeof(received));
 103:.\Modbus.c    ****         }
 104:.\Modbus.c    ****         else
 105:.\Modbus.c    ****         {
 106:.\Modbus.c    ****             MessageTimer_Start();
 339              		.loc 1 106 0
 340 00ac FFF7FEFF 		bl	MessageTimer_Start
 107:.\Modbus.c    ****             EndOfMessage_StartEx(endOfMessage_isr); 
 341              		.loc 1 107 0
 342 00b0 094B     		ldr	r3, .L12+4
 343 00b2 181C     		mov	r0, r3
 344 00b4 FFF7FEFF 		bl	EndOfMessage_StartEx
 345              	.L9:
 108:.\Modbus.c    ****         }
 109:.\Modbus.c    ****     }
 110:.\Modbus.c    ****         oldMessageLength = messageLength; 
 346              		.loc 1 110 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 9


 347 00b8 0A4B     		ldr	r3, .L12+16
 348 00ba 1B78     		ldrb	r3, [r3]
 349 00bc DAB2     		uxtb	r2, r3
 350 00be 084B     		ldr	r3, .L12+12
 351 00c0 1A70     		strb	r2, [r3]
 111:.\Modbus.c    ****         timerCount ++; //debugging counter to find out how many times the loop occurred.
 352              		.loc 1 111 0
 353 00c2 0D4B     		ldr	r3, .L12+36
 354 00c4 1B78     		ldrb	r3, [r3]
 355 00c6 DBB2     		uxtb	r3, r3
 356 00c8 0133     		add	r3, r3, #1
 357 00ca DAB2     		uxtb	r2, r3
 358 00cc 0A4B     		ldr	r3, .L12+36
 359 00ce 1A70     		strb	r2, [r3]
 112:.\Modbus.c    **** }
 360              		.loc 1 112 0
 361 00d0 BD46     		mov	sp, r7
 362              		@ sp needed
 363 00d2 80BD     		pop	{r7, pc}
 364              	.L13:
 365              		.align	2
 366              	.L12:
 367 00d4 00000000 		.word	turnLineAround
 368 00d8 00000000 		.word	endOfMessage_isr
 369 00dc 00000000 		.word	middleOfMessage
 370 00e0 00000000 		.word	oldMessageLength
 371 00e4 00000000 		.word	messageLength
 372 00e8 00000000 		.word	messageLengthNotChanged
 373 00ec 00000000 		.word	newMessage
 374 00f0 00000000 		.word	modbusMessage
 375 00f4 00000000 		.word	z
 376 00f8 00000000 		.word	timerCount
 377              		.cfi_endproc
 378              	.LFE34:
 379              		.size	checkIfEndOfMessage, .-checkIfEndOfMessage
 380              		.section	.text.processMessage,"ax",%progbits
 381              		.align	2
 382              		.global	processMessage
 383              		.code	16
 384              		.thumb_func
 385              		.type	processMessage, %function
 386              	processMessage:
 387              	.LFB35:
 113:.\Modbus.c    **** 
 114:.\Modbus.c    **** void processMessage(void)
 115:.\Modbus.c    **** {
 388              		.loc 1 115 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 116:.\Modbus.c    ****     if(received[0] == SlaveAddress){
 396              		.loc 1 116 0
 397 0004 224B     		ldr	r3, .L23
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 10


 398 0006 1B78     		ldrb	r3, [r3]
 399 0008 052B     		cmp	r3, #5
 400 000a 3BD1     		bne	.L15
 117:.\Modbus.c    ****         if(checkCRC() == 1){        
 401              		.loc 1 117 0
 402 000c FFF7FEFF 		bl	checkCRC
 403 0010 031C     		mov	r3, r0
 404 0012 012B     		cmp	r3, #1
 405 0014 36D1     		bne	.L15
 118:.\Modbus.c    **** 		if(received[1] == 0x01){
 406              		.loc 1 118 0
 407 0016 1E4B     		ldr	r3, .L23
 408 0018 5B78     		ldrb	r3, [r3, #1]
 409 001a 012B     		cmp	r3, #1
 410 001c 02D1     		bne	.L16
 119:.\Modbus.c    ****             readCoil();
 411              		.loc 1 119 0
 412 001e FFF7FEFF 		bl	readCoil
 413 0022 2FE0     		b	.L15
 414              	.L16:
 120:.\Modbus.c    ****         }
 121:.\Modbus.c    ****         else if(received[1] == 0x02){
 415              		.loc 1 121 0
 416 0024 1A4B     		ldr	r3, .L23
 417 0026 5B78     		ldrb	r3, [r3, #1]
 418 0028 022B     		cmp	r3, #2
 419 002a 02D1     		bne	.L17
 122:.\Modbus.c    ****             readInputCoil();
 420              		.loc 1 122 0
 421 002c FFF7FEFF 		bl	readInputCoil
 422 0030 28E0     		b	.L15
 423              	.L17:
 123:.\Modbus.c    ****         }
 124:.\Modbus.c    ****         else if(received[1] == 0x03){
 424              		.loc 1 124 0
 425 0032 174B     		ldr	r3, .L23
 426 0034 5B78     		ldrb	r3, [r3, #1]
 427 0036 032B     		cmp	r3, #3
 428 0038 02D1     		bne	.L18
 125:.\Modbus.c    ****             readReg();
 429              		.loc 1 125 0
 430 003a FFF7FEFF 		bl	readReg
 431 003e 21E0     		b	.L15
 432              	.L18:
 126:.\Modbus.c    ****         }
 127:.\Modbus.c    ****         else if(received[1] == 0x04){
 433              		.loc 1 127 0
 434 0040 134B     		ldr	r3, .L23
 435 0042 5B78     		ldrb	r3, [r3, #1]
 436 0044 042B     		cmp	r3, #4
 437 0046 02D1     		bne	.L19
 128:.\Modbus.c    ****             readInputReg();
 438              		.loc 1 128 0
 439 0048 FFF7FEFF 		bl	readInputReg
 440 004c 1AE0     		b	.L15
 441              	.L19:
 129:.\Modbus.c    ****         }
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 11


 130:.\Modbus.c    ****         else if(received[1] == 0x05){
 442              		.loc 1 130 0
 443 004e 104B     		ldr	r3, .L23
 444 0050 5B78     		ldrb	r3, [r3, #1]
 445 0052 052B     		cmp	r3, #5
 446 0054 02D1     		bne	.L20
 131:.\Modbus.c    ****             writeCoil();
 447              		.loc 1 131 0
 448 0056 FFF7FEFF 		bl	writeCoil
 449 005a 13E0     		b	.L15
 450              	.L20:
 132:.\Modbus.c    ****         }	  
 133:.\Modbus.c    ****         else if(received[1] == 0x06){
 451              		.loc 1 133 0
 452 005c 0C4B     		ldr	r3, .L23
 453 005e 5B78     		ldrb	r3, [r3, #1]
 454 0060 062B     		cmp	r3, #6
 455 0062 02D1     		bne	.L21
 134:.\Modbus.c    ****             writeReg();
 456              		.loc 1 134 0
 457 0064 FFF7FEFF 		bl	writeReg
 458 0068 0CE0     		b	.L15
 459              	.L21:
 135:.\Modbus.c    ****         }
 136:.\Modbus.c    ****         else if(received[1] == 0x10){
 460              		.loc 1 136 0
 461 006a 094B     		ldr	r3, .L23
 462 006c 5B78     		ldrb	r3, [r3, #1]
 463 006e 102B     		cmp	r3, #16
 464 0070 02D1     		bne	.L22
 137:.\Modbus.c    ****             writeMultipleRegs();
 465              		.loc 1 137 0
 466 0072 FFF7FEFF 		bl	writeMultipleRegs
 467 0076 05E0     		b	.L15
 468              	.L22:
 138:.\Modbus.c    ****         }
 139:.\Modbus.c    ****         else if(received[1] == 0x0F){
 469              		.loc 1 139 0
 470 0078 054B     		ldr	r3, .L23
 471 007a 5B78     		ldrb	r3, [r3, #1]
 472 007c 0F2B     		cmp	r3, #15
 473 007e 01D1     		bne	.L15
 140:.\Modbus.c    ****             writeMultipleCoils();
 474              		.loc 1 140 0
 475 0080 FFF7FEFF 		bl	writeMultipleCoils
 476              	.L15:
 141:.\Modbus.c    ****         }
 142:.\Modbus.c    ****         else{
 143:.\Modbus.c    ****          //   response[0] = 0; //error this does nothing though..
 144:.\Modbus.c    ****         }
 145:.\Modbus.c    ****     }
 146:.\Modbus.c    ****   }
 147:.\Modbus.c    ****   modbusMessage = 0;
 477              		.loc 1 147 0
 478 0084 034B     		ldr	r3, .L23+4
 479 0086 0022     		mov	r2, #0
 480 0088 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 12


 148:.\Modbus.c    **** }
 481              		.loc 1 148 0
 482 008a BD46     		mov	sp, r7
 483              		@ sp needed
 484 008c 80BD     		pop	{r7, pc}
 485              	.L24:
 486 008e C046     		.align	2
 487              	.L23:
 488 0090 00000000 		.word	received
 489 0094 00000000 		.word	modbusMessage
 490              		.cfi_endproc
 491              	.LFE35:
 492              		.size	processMessage, .-processMessage
 493              		.section	.text.readCoil,"ax",%progbits
 494              		.align	2
 495              		.global	readCoil
 496              		.code	16
 497              		.thumb_func
 498              		.type	readCoil, %function
 499              	readCoil:
 500              	.LFB36:
 149:.\Modbus.c    **** 
 150:.\Modbus.c    **** void readCoil(void)
 151:.\Modbus.c    **** {
 501              		.loc 1 151 0
 502              		.cfi_startproc
 503 0000 90B5     		push	{r4, r7, lr}
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 87B0     		sub	sp, sp, #28
 509              		.cfi_def_cfa_offset 40
 510 0004 00AF     		add	r7, sp, #0
 511              		.cfi_def_cfa_register 7
 152:.\Modbus.c    **** /******************************************************************************/
 153:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 154:.\Modbus.c    **** /******************************************************************************/
 155:.\Modbus.c    ****   unsigned int rc_Address = 0;
 512              		.loc 1 155 0
 513 0006 0023     		mov	r3, #0
 514 0008 FB60     		str	r3, [r7, #12]
 156:.\Modbus.c    ****   unsigned int rc_numCoils = 0;
 515              		.loc 1 156 0
 516 000a 0023     		mov	r3, #0
 517 000c BB60     		str	r3, [r7, #8]
 157:.\Modbus.c    ****   unsigned int crc = 0;
 518              		.loc 1 157 0
 519 000e 0023     		mov	r3, #0
 520 0010 7B60     		str	r3, [r7, #4]
 158:.\Modbus.c    **** 
 159:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 521              		.loc 1 159 0
 522 0012 3B1C     		mov	r3, r7
 523 0014 1733     		add	r3, r3, #23
 524 0016 0022     		mov	r2, #0
 525 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 13


 160:.\Modbus.c    ****   unsigned char remainder = 0;
 526              		.loc 1 160 0
 527 001a FB1C     		add	r3, r7, #3
 528 001c 0022     		mov	r2, #0
 529 001e 1A70     		strb	r2, [r3]
 161:.\Modbus.c    ****   unsigned char lsb = 0;
 530              		.loc 1 161 0
 531 0020 3B1C     		mov	r3, r7
 532 0022 1633     		add	r3, r3, #22
 533 0024 0022     		mov	r2, #0
 534 0026 1A70     		strb	r2, [r3]
 162:.\Modbus.c    ****   unsigned char i,j,k,l = 0;
 535              		.loc 1 162 0
 536 0028 3B1C     		mov	r3, r7
 537 002a 1233     		add	r3, r3, #18
 538 002c 0022     		mov	r2, #0
 539 002e 1A70     		strb	r2, [r3]
 163:.\Modbus.c    **** 
 164:.\Modbus.c    ****   //Combine address bytes
 165:.\Modbus.c    ****   rc_Address = received[2];
 540              		.loc 1 165 0
 541 0030 964B     		ldr	r3, .L41
 542 0032 9B78     		ldrb	r3, [r3, #2]
 543 0034 FB60     		str	r3, [r7, #12]
 166:.\Modbus.c    ****   rc_Address <<=8;
 544              		.loc 1 166 0
 545 0036 FB68     		ldr	r3, [r7, #12]
 546 0038 1B02     		lsl	r3, r3, #8
 547 003a FB60     		str	r3, [r7, #12]
 167:.\Modbus.c    ****   rc_Address |= received[3];
 548              		.loc 1 167 0
 549 003c 934B     		ldr	r3, .L41
 550 003e DB78     		ldrb	r3, [r3, #3]
 551 0040 FA68     		ldr	r2, [r7, #12]
 552 0042 1343     		orr	r3, r2
 553 0044 FB60     		str	r3, [r7, #12]
 168:.\Modbus.c    **** 
 169:.\Modbus.c    ****   //Combine number of coils bytes
 170:.\Modbus.c    ****   rc_numCoils = received[4];
 554              		.loc 1 170 0
 555 0046 914B     		ldr	r3, .L41
 556 0048 1B79     		ldrb	r3, [r3, #4]
 557 004a BB60     		str	r3, [r7, #8]
 171:.\Modbus.c    ****   rc_numCoils <<= 8;
 558              		.loc 1 171 0
 559 004c BB68     		ldr	r3, [r7, #8]
 560 004e 1B02     		lsl	r3, r3, #8
 561 0050 BB60     		str	r3, [r7, #8]
 172:.\Modbus.c    ****   rc_numCoils |= received[5];
 562              		.loc 1 172 0
 563 0052 8E4B     		ldr	r3, .L41
 564 0054 5B79     		ldrb	r3, [r3, #5]
 565 0056 BA68     		ldr	r2, [r7, #8]
 566 0058 1343     		orr	r3, r2
 567 005a BB60     		str	r3, [r7, #8]
 173:.\Modbus.c    **** 
 174:.\Modbus.c    ****   response[0] = SlaveAddress;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 14


 568              		.loc 1 174 0
 569 005c 8C4B     		ldr	r3, .L41+4
 570 005e 0522     		mov	r2, #5
 571 0060 1A70     		strb	r2, [r3]
 175:.\Modbus.c    ****   response[1] = 0x01;
 572              		.loc 1 175 0
 573 0062 8B4B     		ldr	r3, .L41+4
 574 0064 0122     		mov	r2, #1
 575 0066 5A70     		strb	r2, [r3, #1]
 176:.\Modbus.c    **** 
 177:.\Modbus.c    ****   howManyBytes = rc_numCoils/8;
 576              		.loc 1 177 0
 577 0068 BB68     		ldr	r3, [r7, #8]
 578 006a DA08     		lsr	r2, r3, #3
 579 006c 3B1C     		mov	r3, r7
 580 006e 1733     		add	r3, r3, #23
 581 0070 1A70     		strb	r2, [r3]
 178:.\Modbus.c    ****   remainder = rc_numCoils % 8;
 582              		.loc 1 178 0
 583 0072 BB68     		ldr	r3, [r7, #8]
 584 0074 D9B2     		uxtb	r1, r3
 585 0076 FB1C     		add	r3, r7, #3
 586 0078 0722     		mov	r2, #7
 587 007a 0A40     		and	r2, r1
 588 007c 1A70     		strb	r2, [r3]
 179:.\Modbus.c    **** 
 180:.\Modbus.c    ****   if(remainder){
 589              		.loc 1 180 0
 590 007e FB1C     		add	r3, r7, #3
 591 0080 1B78     		ldrb	r3, [r3]
 592 0082 002B     		cmp	r3, #0
 593 0084 06D0     		beq	.L26
 181:.\Modbus.c    ****     howManyBytes += 1;
 594              		.loc 1 181 0
 595 0086 3B1C     		mov	r3, r7
 596 0088 1733     		add	r3, r3, #23
 597 008a 3A1C     		mov	r2, r7
 598 008c 1732     		add	r2, r2, #23
 599 008e 1278     		ldrb	r2, [r2]
 600 0090 0132     		add	r2, r2, #1
 601 0092 1A70     		strb	r2, [r3]
 602              	.L26:
 182:.\Modbus.c    ****   }
 183:.\Modbus.c    ****   response[2] = howManyBytes;
 603              		.loc 1 183 0
 604 0094 7E4B     		ldr	r3, .L41+4
 605 0096 3A1C     		mov	r2, r7
 606 0098 1732     		add	r2, r2, #23
 607 009a 1278     		ldrb	r2, [r2]
 608 009c 9A70     		strb	r2, [r3, #2]
 184:.\Modbus.c    **** 
 185:.\Modbus.c    ****   l = rc_Address;
 609              		.loc 1 185 0
 610 009e 3B1C     		mov	r3, r7
 611 00a0 1233     		add	r3, r3, #18
 612 00a2 FA68     		ldr	r2, [r7, #12]
 613 00a4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 15


 186:.\Modbus.c    ****   k = 3; //start at response 3
 614              		.loc 1 186 0
 615 00a6 3B1C     		mov	r3, r7
 616 00a8 1333     		add	r3, r3, #19
 617 00aa 0322     		mov	r2, #3
 618 00ac 1A70     		strb	r2, [r3]
 187:.\Modbus.c    **** 
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 619              		.loc 1 188 0
 620 00ae 3B1C     		mov	r3, r7
 621 00b0 1533     		add	r3, r3, #21
 622 00b2 3A1C     		mov	r2, r7
 623 00b4 1732     		add	r2, r2, #23
 624 00b6 1278     		ldrb	r2, [r2]
 625 00b8 1A70     		strb	r2, [r3]
 626 00ba 9CE0     		b	.L27
 627              	.L38:
 189:.\Modbus.c    ****     if(i>1){
 628              		.loc 1 189 0
 629 00bc 3B1C     		mov	r3, r7
 630 00be 1533     		add	r3, r3, #21
 631 00c0 1B78     		ldrb	r3, [r3]
 632 00c2 012B     		cmp	r3, #1
 633 00c4 47D9     		bls	.L28
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 634              		.loc 1 190 0
 635 00c6 3B1C     		mov	r3, r7
 636 00c8 1433     		add	r3, r3, #20
 637 00ca 0022     		mov	r2, #0
 638 00cc 1A70     		strb	r2, [r3]
 639 00ce 35E0     		b	.L29
 640              	.L32:
 191:.\Modbus.c    **** 	if(coils[l]){
 641              		.loc 1 191 0
 642 00d0 3B1C     		mov	r3, r7
 643 00d2 1233     		add	r3, r3, #18
 644 00d4 1B78     		ldrb	r3, [r3]
 645 00d6 6F4A     		ldr	r2, .L41+8
 646 00d8 D35C     		ldrb	r3, [r2, r3]
 647 00da 002B     		cmp	r3, #0
 648 00dc 04D0     		beq	.L30
 192:.\Modbus.c    ****           lsb = 1;
 649              		.loc 1 192 0
 650 00de 3B1C     		mov	r3, r7
 651 00e0 1633     		add	r3, r3, #22
 652 00e2 0122     		mov	r2, #1
 653 00e4 1A70     		strb	r2, [r3]
 654 00e6 03E0     		b	.L31
 655              	.L30:
 193:.\Modbus.c    **** 	}
 194:.\Modbus.c    **** 	else{
 195:.\Modbus.c    ****           lsb = 0;
 656              		.loc 1 195 0
 657 00e8 3B1C     		mov	r3, r7
 658 00ea 1633     		add	r3, r3, #22
 659 00ec 0022     		mov	r2, #0
 660 00ee 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 16


 661              	.L31:
 196:.\Modbus.c    **** 	}
 197:.\Modbus.c    **** 	response[k] ^= (lsb << j);
 662              		.loc 1 197 0
 663 00f0 3B1C     		mov	r3, r7
 664 00f2 1333     		add	r3, r3, #19
 665 00f4 1B78     		ldrb	r3, [r3]
 666 00f6 3A1C     		mov	r2, r7
 667 00f8 1332     		add	r2, r2, #19
 668 00fa 1278     		ldrb	r2, [r2]
 669 00fc 6449     		ldr	r1, .L41+4
 670 00fe 8A5C     		ldrb	r2, [r1, r2]
 671 0100 D1B2     		uxtb	r1, r2
 672 0102 3A1C     		mov	r2, r7
 673 0104 1632     		add	r2, r2, #22
 674 0106 1078     		ldrb	r0, [r2]
 675 0108 3A1C     		mov	r2, r7
 676 010a 1432     		add	r2, r2, #20
 677 010c 1278     		ldrb	r2, [r2]
 678 010e 041C     		mov	r4, r0
 679 0110 9440     		lsl	r4, r4, r2
 680 0112 221C     		mov	r2, r4
 681 0114 D2B2     		uxtb	r2, r2
 682 0116 4A40     		eor	r2, r1
 683 0118 D2B2     		uxtb	r2, r2
 684 011a D1B2     		uxtb	r1, r2
 685 011c 5C4A     		ldr	r2, .L41+4
 686 011e D154     		strb	r1, [r2, r3]
 198:.\Modbus.c    **** 	l++;
 687              		.loc 1 198 0
 688 0120 3B1C     		mov	r3, r7
 689 0122 1233     		add	r3, r3, #18
 690 0124 1A78     		ldrb	r2, [r3]
 691 0126 3B1C     		mov	r3, r7
 692 0128 1233     		add	r3, r3, #18
 693 012a 0132     		add	r2, r2, #1
 694 012c 1A70     		strb	r2, [r3]
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 695              		.loc 1 190 0
 696 012e 3B1C     		mov	r3, r7
 697 0130 1433     		add	r3, r3, #20
 698 0132 1A78     		ldrb	r2, [r3]
 699 0134 3B1C     		mov	r3, r7
 700 0136 1433     		add	r3, r3, #20
 701 0138 0132     		add	r2, r2, #1
 702 013a 1A70     		strb	r2, [r3]
 703              	.L29:
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 704              		.loc 1 190 0 is_stmt 0 discriminator 1
 705 013c 3B1C     		mov	r3, r7
 706 013e 1433     		add	r3, r3, #20
 707 0140 1B78     		ldrb	r3, [r3]
 708 0142 082B     		cmp	r3, #8
 709 0144 C4D1     		bne	.L32
 199:.\Modbus.c    ****       }
 200:.\Modbus.c    ****       k++;
 710              		.loc 1 200 0 is_stmt 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 17


 711 0146 3B1C     		mov	r3, r7
 712 0148 1333     		add	r3, r3, #19
 713 014a 1A78     		ldrb	r2, [r3]
 714 014c 3B1C     		mov	r3, r7
 715 014e 1333     		add	r3, r3, #19
 716 0150 0132     		add	r2, r2, #1
 717 0152 1A70     		strb	r2, [r3]
 718 0154 48E0     		b	.L33
 719              	.L28:
 201:.\Modbus.c    ****     }
 202:.\Modbus.c    ****     else{
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 720              		.loc 1 203 0
 721 0156 3B1C     		mov	r3, r7
 722 0158 1433     		add	r3, r3, #20
 723 015a 0022     		mov	r2, #0
 724 015c 1A70     		strb	r2, [r3]
 725 015e 35E0     		b	.L34
 726              	.L37:
 204:.\Modbus.c    ****       if(coils[l]){
 727              		.loc 1 204 0
 728 0160 3B1C     		mov	r3, r7
 729 0162 1233     		add	r3, r3, #18
 730 0164 1B78     		ldrb	r3, [r3]
 731 0166 4B4A     		ldr	r2, .L41+8
 732 0168 D35C     		ldrb	r3, [r2, r3]
 733 016a 002B     		cmp	r3, #0
 734 016c 04D0     		beq	.L35
 205:.\Modbus.c    ****         lsb = 1;
 735              		.loc 1 205 0
 736 016e 3B1C     		mov	r3, r7
 737 0170 1633     		add	r3, r3, #22
 738 0172 0122     		mov	r2, #1
 739 0174 1A70     		strb	r2, [r3]
 740 0176 03E0     		b	.L36
 741              	.L35:
 206:.\Modbus.c    ****       }
 207:.\Modbus.c    ****       else{
 208:.\Modbus.c    ****         lsb = 0;
 742              		.loc 1 208 0
 743 0178 3B1C     		mov	r3, r7
 744 017a 1633     		add	r3, r3, #22
 745 017c 0022     		mov	r2, #0
 746 017e 1A70     		strb	r2, [r3]
 747              	.L36:
 209:.\Modbus.c    ****       }
 210:.\Modbus.c    ****       response[k] ^= (lsb << j);
 748              		.loc 1 210 0
 749 0180 3B1C     		mov	r3, r7
 750 0182 1333     		add	r3, r3, #19
 751 0184 1B78     		ldrb	r3, [r3]
 752 0186 3A1C     		mov	r2, r7
 753 0188 1332     		add	r2, r2, #19
 754 018a 1278     		ldrb	r2, [r2]
 755 018c 4049     		ldr	r1, .L41+4
 756 018e 8A5C     		ldrb	r2, [r1, r2]
 757 0190 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 18


 758 0192 3A1C     		mov	r2, r7
 759 0194 1632     		add	r2, r2, #22
 760 0196 1078     		ldrb	r0, [r2]
 761 0198 3A1C     		mov	r2, r7
 762 019a 1432     		add	r2, r2, #20
 763 019c 1278     		ldrb	r2, [r2]
 764 019e 041C     		mov	r4, r0
 765 01a0 9440     		lsl	r4, r4, r2
 766 01a2 221C     		mov	r2, r4
 767 01a4 D2B2     		uxtb	r2, r2
 768 01a6 4A40     		eor	r2, r1
 769 01a8 D2B2     		uxtb	r2, r2
 770 01aa D1B2     		uxtb	r1, r2
 771 01ac 384A     		ldr	r2, .L41+4
 772 01ae D154     		strb	r1, [r2, r3]
 211:.\Modbus.c    ****       l++;
 773              		.loc 1 211 0
 774 01b0 3B1C     		mov	r3, r7
 775 01b2 1233     		add	r3, r3, #18
 776 01b4 1A78     		ldrb	r2, [r3]
 777 01b6 3B1C     		mov	r3, r7
 778 01b8 1233     		add	r3, r3, #18
 779 01ba 0132     		add	r2, r2, #1
 780 01bc 1A70     		strb	r2, [r3]
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 781              		.loc 1 203 0
 782 01be 3B1C     		mov	r3, r7
 783 01c0 1433     		add	r3, r3, #20
 784 01c2 1A78     		ldrb	r2, [r3]
 785 01c4 3B1C     		mov	r3, r7
 786 01c6 1433     		add	r3, r3, #20
 787 01c8 0132     		add	r2, r2, #1
 788 01ca 1A70     		strb	r2, [r3]
 789              	.L34:
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 790              		.loc 1 203 0 is_stmt 0 discriminator 1
 791 01cc 3A1C     		mov	r2, r7
 792 01ce 1432     		add	r2, r2, #20
 793 01d0 FB1C     		add	r3, r7, #3
 794 01d2 1278     		ldrb	r2, [r2]
 795 01d4 1B78     		ldrb	r3, [r3]
 796 01d6 9A42     		cmp	r2, r3
 797 01d8 C2D1     		bne	.L37
 212:.\Modbus.c    ****       }
 213:.\Modbus.c    ****       k++;
 798              		.loc 1 213 0 is_stmt 1
 799 01da 3B1C     		mov	r3, r7
 800 01dc 1333     		add	r3, r3, #19
 801 01de 1A78     		ldrb	r2, [r3]
 802 01e0 3B1C     		mov	r3, r7
 803 01e2 1333     		add	r3, r3, #19
 804 01e4 0132     		add	r2, r2, #1
 805 01e6 1A70     		strb	r2, [r3]
 806              	.L33:
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 807              		.loc 1 188 0
 808 01e8 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 19


 809 01ea 1533     		add	r3, r3, #21
 810 01ec 1A78     		ldrb	r2, [r3]
 811 01ee 3B1C     		mov	r3, r7
 812 01f0 1533     		add	r3, r3, #21
 813 01f2 013A     		sub	r2, r2, #1
 814 01f4 1A70     		strb	r2, [r3]
 815              	.L27:
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 816              		.loc 1 188 0 is_stmt 0 discriminator 1
 817 01f6 3B1C     		mov	r3, r7
 818 01f8 1533     		add	r3, r3, #21
 819 01fa 1B78     		ldrb	r3, [r3]
 820 01fc 002B     		cmp	r3, #0
 821 01fe 00D0     		beq	.LCB659
 822 0200 5CE7     		b	.L38	@long jump
 823              	.LCB659:
 214:.\Modbus.c    ****     }
 215:.\Modbus.c    ****   }
 216:.\Modbus.c    ****   crc = generateCRC(k+2);
 824              		.loc 1 216 0 is_stmt 1
 825 0202 3B1C     		mov	r3, r7
 826 0204 1333     		add	r3, r3, #19
 827 0206 1B78     		ldrb	r3, [r3]
 828 0208 0233     		add	r3, r3, #2
 829 020a DBB2     		uxtb	r3, r3
 830 020c 181C     		mov	r0, r3
 831 020e FFF7FEFF 		bl	generateCRC
 832 0212 031C     		mov	r3, r0
 833 0214 7B60     		str	r3, [r7, #4]
 217:.\Modbus.c    **** 
 218:.\Modbus.c    ****   response[k] = crc >> 8;
 834              		.loc 1 218 0
 835 0216 3B1C     		mov	r3, r7
 836 0218 1333     		add	r3, r3, #19
 837 021a 1B78     		ldrb	r3, [r3]
 838 021c 7A68     		ldr	r2, [r7, #4]
 839 021e 120A     		lsr	r2, r2, #8
 840 0220 D1B2     		uxtb	r1, r2
 841 0222 1B4A     		ldr	r2, .L41+4
 842 0224 D154     		strb	r1, [r2, r3]
 219:.\Modbus.c    ****   response[k+1] = crc;
 843              		.loc 1 219 0
 844 0226 3B1C     		mov	r3, r7
 845 0228 1333     		add	r3, r3, #19
 846 022a 1B78     		ldrb	r3, [r3]
 847 022c 0133     		add	r3, r3, #1
 848 022e 7A68     		ldr	r2, [r7, #4]
 849 0230 D1B2     		uxtb	r1, r2
 850 0232 174A     		ldr	r2, .L41+4
 851 0234 D154     		strb	r1, [r2, r3]
 220:.\Modbus.c    **** 
 221:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 852              		.loc 1 221 0
 853 0236 0120     		mov	r0, #1
 854 0238 FFF7FEFF 		bl	writeEnable_Write
 222:.\Modbus.c    **** 
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 20


 855              		.loc 1 223 0
 856 023c 3B1C     		mov	r3, r7
 857 023e 1533     		add	r3, r3, #21
 858 0240 0022     		mov	r2, #0
 859 0242 1A70     		strb	r2, [r3]
 860 0244 0EE0     		b	.L39
 861              	.L40:
 224:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 862              		.loc 1 224 0 discriminator 2
 863 0246 3B1C     		mov	r3, r7
 864 0248 1533     		add	r3, r3, #21
 865 024a 1B78     		ldrb	r3, [r3]
 866 024c 104A     		ldr	r2, .L41+4
 867 024e D35C     		ldrb	r3, [r2, r3]
 868 0250 181C     		mov	r0, r3
 869 0252 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 870              		.loc 1 223 0 discriminator 2
 871 0256 3B1C     		mov	r3, r7
 872 0258 1533     		add	r3, r3, #21
 873 025a 1A78     		ldrb	r2, [r3]
 874 025c 3B1C     		mov	r3, r7
 875 025e 1533     		add	r3, r3, #21
 876 0260 0132     		add	r2, r2, #1
 877 0262 1A70     		strb	r2, [r3]
 878              	.L39:
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 879              		.loc 1 223 0 is_stmt 0 discriminator 1
 880 0264 3B1C     		mov	r3, r7
 881 0266 1533     		add	r3, r3, #21
 882 0268 1A78     		ldrb	r2, [r3]
 883 026a 3B1C     		mov	r3, r7
 884 026c 1333     		add	r3, r3, #19
 885 026e 1B78     		ldrb	r3, [r3]
 886 0270 0333     		add	r3, r3, #3
 887 0272 9A42     		cmp	r2, r3
 888 0274 E7D1     		bne	.L40
 225:.\Modbus.c    ****   }
 226:.\Modbus.c    ****   responseFinished(k+3);
 889              		.loc 1 226 0 is_stmt 1
 890 0276 3B1C     		mov	r3, r7
 891 0278 1333     		add	r3, r3, #19
 892 027a 1B78     		ldrb	r3, [r3]
 893 027c 0333     		add	r3, r3, #3
 894 027e 181C     		mov	r0, r3
 895 0280 FFF7FEFF 		bl	responseFinished
 227:.\Modbus.c    **** }
 896              		.loc 1 227 0
 897 0284 BD46     		mov	sp, r7
 898 0286 07B0     		add	sp, sp, #28
 899              		@ sp needed
 900 0288 90BD     		pop	{r4, r7, pc}
 901              	.L42:
 902 028a C046     		.align	2
 903              	.L41:
 904 028c 00000000 		.word	received
 905 0290 00000000 		.word	response
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 21


 906 0294 00000000 		.word	coils
 907              		.cfi_endproc
 908              	.LFE36:
 909              		.size	readCoil, .-readCoil
 910              		.section	.text.readInputCoil,"ax",%progbits
 911              		.align	2
 912              		.global	readInputCoil
 913              		.code	16
 914              		.thumb_func
 915              		.type	readInputCoil, %function
 916              	readInputCoil:
 917              	.LFB37:
 228:.\Modbus.c    **** 
 229:.\Modbus.c    **** void readInputCoil(void)
 230:.\Modbus.c    **** {
 918              		.loc 1 230 0
 919              		.cfi_startproc
 920 0000 90B5     		push	{r4, r7, lr}
 921              		.cfi_def_cfa_offset 12
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 87B0     		sub	sp, sp, #28
 926              		.cfi_def_cfa_offset 40
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 231:.\Modbus.c    **** /******************************************************************************/
 232:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 233:.\Modbus.c    **** /******************************************************************************/
 234:.\Modbus.c    ****   unsigned int rc_Address = 0;
 929              		.loc 1 234 0
 930 0006 0023     		mov	r3, #0
 931 0008 FB60     		str	r3, [r7, #12]
 235:.\Modbus.c    ****   unsigned int rc_numCoils = 0;
 932              		.loc 1 235 0
 933 000a 0023     		mov	r3, #0
 934 000c BB60     		str	r3, [r7, #8]
 236:.\Modbus.c    ****   unsigned int crc = 0;
 935              		.loc 1 236 0
 936 000e 0023     		mov	r3, #0
 937 0010 7B60     		str	r3, [r7, #4]
 237:.\Modbus.c    **** 
 238:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 938              		.loc 1 238 0
 939 0012 3B1C     		mov	r3, r7
 940 0014 1733     		add	r3, r3, #23
 941 0016 0022     		mov	r2, #0
 942 0018 1A70     		strb	r2, [r3]
 239:.\Modbus.c    ****   unsigned char remainder = 0;
 943              		.loc 1 239 0
 944 001a FB1C     		add	r3, r7, #3
 945 001c 0022     		mov	r2, #0
 946 001e 1A70     		strb	r2, [r3]
 240:.\Modbus.c    ****   unsigned char lsb = 0;
 947              		.loc 1 240 0
 948 0020 3B1C     		mov	r3, r7
 949 0022 1633     		add	r3, r3, #22
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 22


 950 0024 0022     		mov	r2, #0
 951 0026 1A70     		strb	r2, [r3]
 241:.\Modbus.c    ****   unsigned char i,j,k,l = 0;
 952              		.loc 1 241 0
 953 0028 3B1C     		mov	r3, r7
 954 002a 1233     		add	r3, r3, #18
 955 002c 0022     		mov	r2, #0
 956 002e 1A70     		strb	r2, [r3]
 242:.\Modbus.c    **** 
 243:.\Modbus.c    ****   //Combine address bytes
 244:.\Modbus.c    ****   rc_Address = received[2];
 957              		.loc 1 244 0
 958 0030 964B     		ldr	r3, .L59
 959 0032 9B78     		ldrb	r3, [r3, #2]
 960 0034 FB60     		str	r3, [r7, #12]
 245:.\Modbus.c    ****   rc_Address <<=8;
 961              		.loc 1 245 0
 962 0036 FB68     		ldr	r3, [r7, #12]
 963 0038 1B02     		lsl	r3, r3, #8
 964 003a FB60     		str	r3, [r7, #12]
 246:.\Modbus.c    ****   rc_Address |= received[3];
 965              		.loc 1 246 0
 966 003c 934B     		ldr	r3, .L59
 967 003e DB78     		ldrb	r3, [r3, #3]
 968 0040 FA68     		ldr	r2, [r7, #12]
 969 0042 1343     		orr	r3, r2
 970 0044 FB60     		str	r3, [r7, #12]
 247:.\Modbus.c    **** 
 248:.\Modbus.c    ****   //Combine number of coils bytes
 249:.\Modbus.c    ****   rc_numCoils = received[4];
 971              		.loc 1 249 0
 972 0046 914B     		ldr	r3, .L59
 973 0048 1B79     		ldrb	r3, [r3, #4]
 974 004a BB60     		str	r3, [r7, #8]
 250:.\Modbus.c    ****   rc_numCoils <<= 8;
 975              		.loc 1 250 0
 976 004c BB68     		ldr	r3, [r7, #8]
 977 004e 1B02     		lsl	r3, r3, #8
 978 0050 BB60     		str	r3, [r7, #8]
 251:.\Modbus.c    ****   rc_numCoils |= received[5];
 979              		.loc 1 251 0
 980 0052 8E4B     		ldr	r3, .L59
 981 0054 5B79     		ldrb	r3, [r3, #5]
 982 0056 BA68     		ldr	r2, [r7, #8]
 983 0058 1343     		orr	r3, r2
 984 005a BB60     		str	r3, [r7, #8]
 252:.\Modbus.c    **** 
 253:.\Modbus.c    ****   response[0] = SlaveAddress;
 985              		.loc 1 253 0
 986 005c 8C4B     		ldr	r3, .L59+4
 987 005e 0522     		mov	r2, #5
 988 0060 1A70     		strb	r2, [r3]
 254:.\Modbus.c    ****   response[1] = 0x02;
 989              		.loc 1 254 0
 990 0062 8B4B     		ldr	r3, .L59+4
 991 0064 0222     		mov	r2, #2
 992 0066 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 23


 255:.\Modbus.c    **** 
 256:.\Modbus.c    ****   howManyBytes = rc_numCoils/8;
 993              		.loc 1 256 0
 994 0068 BB68     		ldr	r3, [r7, #8]
 995 006a DA08     		lsr	r2, r3, #3
 996 006c 3B1C     		mov	r3, r7
 997 006e 1733     		add	r3, r3, #23
 998 0070 1A70     		strb	r2, [r3]
 257:.\Modbus.c    ****   remainder = rc_numCoils % 8;
 999              		.loc 1 257 0
 1000 0072 BB68     		ldr	r3, [r7, #8]
 1001 0074 D9B2     		uxtb	r1, r3
 1002 0076 FB1C     		add	r3, r7, #3
 1003 0078 0722     		mov	r2, #7
 1004 007a 0A40     		and	r2, r1
 1005 007c 1A70     		strb	r2, [r3]
 258:.\Modbus.c    **** 
 259:.\Modbus.c    ****   if(remainder){
 1006              		.loc 1 259 0
 1007 007e FB1C     		add	r3, r7, #3
 1008 0080 1B78     		ldrb	r3, [r3]
 1009 0082 002B     		cmp	r3, #0
 1010 0084 06D0     		beq	.L44
 260:.\Modbus.c    ****     howManyBytes += 1;
 1011              		.loc 1 260 0
 1012 0086 3B1C     		mov	r3, r7
 1013 0088 1733     		add	r3, r3, #23
 1014 008a 3A1C     		mov	r2, r7
 1015 008c 1732     		add	r2, r2, #23
 1016 008e 1278     		ldrb	r2, [r2]
 1017 0090 0132     		add	r2, r2, #1
 1018 0092 1A70     		strb	r2, [r3]
 1019              	.L44:
 261:.\Modbus.c    ****   }
 262:.\Modbus.c    ****   response[2] = howManyBytes;
 1020              		.loc 1 262 0
 1021 0094 7E4B     		ldr	r3, .L59+4
 1022 0096 3A1C     		mov	r2, r7
 1023 0098 1732     		add	r2, r2, #23
 1024 009a 1278     		ldrb	r2, [r2]
 1025 009c 9A70     		strb	r2, [r3, #2]
 263:.\Modbus.c    **** 
 264:.\Modbus.c    ****   l = rc_Address;
 1026              		.loc 1 264 0
 1027 009e 3B1C     		mov	r3, r7
 1028 00a0 1233     		add	r3, r3, #18
 1029 00a2 FA68     		ldr	r2, [r7, #12]
 1030 00a4 1A70     		strb	r2, [r3]
 265:.\Modbus.c    ****   k = 3; //start at response 3
 1031              		.loc 1 265 0
 1032 00a6 3B1C     		mov	r3, r7
 1033 00a8 1333     		add	r3, r3, #19
 1034 00aa 0322     		mov	r2, #3
 1035 00ac 1A70     		strb	r2, [r3]
 266:.\Modbus.c    **** 
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1036              		.loc 1 267 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 24


 1037 00ae 3B1C     		mov	r3, r7
 1038 00b0 1533     		add	r3, r3, #21
 1039 00b2 3A1C     		mov	r2, r7
 1040 00b4 1732     		add	r2, r2, #23
 1041 00b6 1278     		ldrb	r2, [r2]
 1042 00b8 1A70     		strb	r2, [r3]
 1043 00ba 9CE0     		b	.L45
 1044              	.L56:
 268:.\Modbus.c    **** 		if(i>1){
 1045              		.loc 1 268 0
 1046 00bc 3B1C     		mov	r3, r7
 1047 00be 1533     		add	r3, r3, #21
 1048 00c0 1B78     		ldrb	r3, [r3]
 1049 00c2 012B     		cmp	r3, #1
 1050 00c4 47D9     		bls	.L46
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1051              		.loc 1 269 0
 1052 00c6 3B1C     		mov	r3, r7
 1053 00c8 1433     		add	r3, r3, #20
 1054 00ca 0022     		mov	r2, #0
 1055 00cc 1A70     		strb	r2, [r3]
 1056 00ce 35E0     		b	.L47
 1057              	.L50:
 270:.\Modbus.c    **** 				if(coils[l]){
 1058              		.loc 1 270 0
 1059 00d0 3B1C     		mov	r3, r7
 1060 00d2 1233     		add	r3, r3, #18
 1061 00d4 1B78     		ldrb	r3, [r3]
 1062 00d6 6F4A     		ldr	r2, .L59+8
 1063 00d8 D35C     		ldrb	r3, [r2, r3]
 1064 00da 002B     		cmp	r3, #0
 1065 00dc 04D0     		beq	.L48
 271:.\Modbus.c    **** 					lsb = 1;
 1066              		.loc 1 271 0
 1067 00de 3B1C     		mov	r3, r7
 1068 00e0 1633     		add	r3, r3, #22
 1069 00e2 0122     		mov	r2, #1
 1070 00e4 1A70     		strb	r2, [r3]
 1071 00e6 03E0     		b	.L49
 1072              	.L48:
 272:.\Modbus.c    **** 				}
 273:.\Modbus.c    **** 				else{
 274:.\Modbus.c    ****           lsb = 0;
 1073              		.loc 1 274 0
 1074 00e8 3B1C     		mov	r3, r7
 1075 00ea 1633     		add	r3, r3, #22
 1076 00ec 0022     		mov	r2, #0
 1077 00ee 1A70     		strb	r2, [r3]
 1078              	.L49:
 275:.\Modbus.c    **** 				}
 276:.\Modbus.c    **** 				response[k] ^= (lsb << j);
 1079              		.loc 1 276 0
 1080 00f0 3B1C     		mov	r3, r7
 1081 00f2 1333     		add	r3, r3, #19
 1082 00f4 1B78     		ldrb	r3, [r3]
 1083 00f6 3A1C     		mov	r2, r7
 1084 00f8 1332     		add	r2, r2, #19
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 25


 1085 00fa 1278     		ldrb	r2, [r2]
 1086 00fc 6449     		ldr	r1, .L59+4
 1087 00fe 8A5C     		ldrb	r2, [r1, r2]
 1088 0100 D1B2     		uxtb	r1, r2
 1089 0102 3A1C     		mov	r2, r7
 1090 0104 1632     		add	r2, r2, #22
 1091 0106 1078     		ldrb	r0, [r2]
 1092 0108 3A1C     		mov	r2, r7
 1093 010a 1432     		add	r2, r2, #20
 1094 010c 1278     		ldrb	r2, [r2]
 1095 010e 041C     		mov	r4, r0
 1096 0110 9440     		lsl	r4, r4, r2
 1097 0112 221C     		mov	r2, r4
 1098 0114 D2B2     		uxtb	r2, r2
 1099 0116 4A40     		eor	r2, r1
 1100 0118 D2B2     		uxtb	r2, r2
 1101 011a D1B2     		uxtb	r1, r2
 1102 011c 5C4A     		ldr	r2, .L59+4
 1103 011e D154     		strb	r1, [r2, r3]
 277:.\Modbus.c    **** 				l++;
 1104              		.loc 1 277 0
 1105 0120 3B1C     		mov	r3, r7
 1106 0122 1233     		add	r3, r3, #18
 1107 0124 1A78     		ldrb	r2, [r3]
 1108 0126 3B1C     		mov	r3, r7
 1109 0128 1233     		add	r3, r3, #18
 1110 012a 0132     		add	r2, r2, #1
 1111 012c 1A70     		strb	r2, [r3]
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1112              		.loc 1 269 0
 1113 012e 3B1C     		mov	r3, r7
 1114 0130 1433     		add	r3, r3, #20
 1115 0132 1A78     		ldrb	r2, [r3]
 1116 0134 3B1C     		mov	r3, r7
 1117 0136 1433     		add	r3, r3, #20
 1118 0138 0132     		add	r2, r2, #1
 1119 013a 1A70     		strb	r2, [r3]
 1120              	.L47:
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1121              		.loc 1 269 0 is_stmt 0 discriminator 1
 1122 013c 3B1C     		mov	r3, r7
 1123 013e 1433     		add	r3, r3, #20
 1124 0140 1B78     		ldrb	r3, [r3]
 1125 0142 082B     		cmp	r3, #8
 1126 0144 C4D1     		bne	.L50
 278:.\Modbus.c    **** 	    }
 279:.\Modbus.c    **** 			k++;
 1127              		.loc 1 279 0 is_stmt 1
 1128 0146 3B1C     		mov	r3, r7
 1129 0148 1333     		add	r3, r3, #19
 1130 014a 1A78     		ldrb	r2, [r3]
 1131 014c 3B1C     		mov	r3, r7
 1132 014e 1333     		add	r3, r3, #19
 1133 0150 0132     		add	r2, r2, #1
 1134 0152 1A70     		strb	r2, [r3]
 1135 0154 48E0     		b	.L51
 1136              	.L46:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 26


 280:.\Modbus.c    **** 	  }
 281:.\Modbus.c    **** 		else{
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1137              		.loc 1 282 0
 1138 0156 3B1C     		mov	r3, r7
 1139 0158 1433     		add	r3, r3, #20
 1140 015a 0022     		mov	r2, #0
 1141 015c 1A70     		strb	r2, [r3]
 1142 015e 35E0     		b	.L52
 1143              	.L55:
 283:.\Modbus.c    **** 				if(coils[l]){
 1144              		.loc 1 283 0
 1145 0160 3B1C     		mov	r3, r7
 1146 0162 1233     		add	r3, r3, #18
 1147 0164 1B78     		ldrb	r3, [r3]
 1148 0166 4B4A     		ldr	r2, .L59+8
 1149 0168 D35C     		ldrb	r3, [r2, r3]
 1150 016a 002B     		cmp	r3, #0
 1151 016c 04D0     		beq	.L53
 284:.\Modbus.c    **** 					lsb = 1;
 1152              		.loc 1 284 0
 1153 016e 3B1C     		mov	r3, r7
 1154 0170 1633     		add	r3, r3, #22
 1155 0172 0122     		mov	r2, #1
 1156 0174 1A70     		strb	r2, [r3]
 1157 0176 03E0     		b	.L54
 1158              	.L53:
 285:.\Modbus.c    **** 				}
 286:.\Modbus.c    **** 				else{
 287:.\Modbus.c    ****           lsb = 0;
 1159              		.loc 1 287 0
 1160 0178 3B1C     		mov	r3, r7
 1161 017a 1633     		add	r3, r3, #22
 1162 017c 0022     		mov	r2, #0
 1163 017e 1A70     		strb	r2, [r3]
 1164              	.L54:
 288:.\Modbus.c    **** 				}
 289:.\Modbus.c    ****         response[k] ^= (lsb << j);
 1165              		.loc 1 289 0
 1166 0180 3B1C     		mov	r3, r7
 1167 0182 1333     		add	r3, r3, #19
 1168 0184 1B78     		ldrb	r3, [r3]
 1169 0186 3A1C     		mov	r2, r7
 1170 0188 1332     		add	r2, r2, #19
 1171 018a 1278     		ldrb	r2, [r2]
 1172 018c 4049     		ldr	r1, .L59+4
 1173 018e 8A5C     		ldrb	r2, [r1, r2]
 1174 0190 D1B2     		uxtb	r1, r2
 1175 0192 3A1C     		mov	r2, r7
 1176 0194 1632     		add	r2, r2, #22
 1177 0196 1078     		ldrb	r0, [r2]
 1178 0198 3A1C     		mov	r2, r7
 1179 019a 1432     		add	r2, r2, #20
 1180 019c 1278     		ldrb	r2, [r2]
 1181 019e 041C     		mov	r4, r0
 1182 01a0 9440     		lsl	r4, r4, r2
 1183 01a2 221C     		mov	r2, r4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 27


 1184 01a4 D2B2     		uxtb	r2, r2
 1185 01a6 4A40     		eor	r2, r1
 1186 01a8 D2B2     		uxtb	r2, r2
 1187 01aa D1B2     		uxtb	r1, r2
 1188 01ac 384A     		ldr	r2, .L59+4
 1189 01ae D154     		strb	r1, [r2, r3]
 290:.\Modbus.c    **** 				l++;
 1190              		.loc 1 290 0
 1191 01b0 3B1C     		mov	r3, r7
 1192 01b2 1233     		add	r3, r3, #18
 1193 01b4 1A78     		ldrb	r2, [r3]
 1194 01b6 3B1C     		mov	r3, r7
 1195 01b8 1233     		add	r3, r3, #18
 1196 01ba 0132     		add	r2, r2, #1
 1197 01bc 1A70     		strb	r2, [r3]
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1198              		.loc 1 282 0
 1199 01be 3B1C     		mov	r3, r7
 1200 01c0 1433     		add	r3, r3, #20
 1201 01c2 1A78     		ldrb	r2, [r3]
 1202 01c4 3B1C     		mov	r3, r7
 1203 01c6 1433     		add	r3, r3, #20
 1204 01c8 0132     		add	r2, r2, #1
 1205 01ca 1A70     		strb	r2, [r3]
 1206              	.L52:
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1207              		.loc 1 282 0 is_stmt 0 discriminator 1
 1208 01cc 3A1C     		mov	r2, r7
 1209 01ce 1432     		add	r2, r2, #20
 1210 01d0 FB1C     		add	r3, r7, #3
 1211 01d2 1278     		ldrb	r2, [r2]
 1212 01d4 1B78     		ldrb	r3, [r3]
 1213 01d6 9A42     		cmp	r2, r3
 1214 01d8 C2D1     		bne	.L55
 291:.\Modbus.c    **** 			}
 292:.\Modbus.c    **** 			k++;
 1215              		.loc 1 292 0 is_stmt 1
 1216 01da 3B1C     		mov	r3, r7
 1217 01dc 1333     		add	r3, r3, #19
 1218 01de 1A78     		ldrb	r2, [r3]
 1219 01e0 3B1C     		mov	r3, r7
 1220 01e2 1333     		add	r3, r3, #19
 1221 01e4 0132     		add	r2, r2, #1
 1222 01e6 1A70     		strb	r2, [r3]
 1223              	.L51:
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1224              		.loc 1 267 0
 1225 01e8 3B1C     		mov	r3, r7
 1226 01ea 1533     		add	r3, r3, #21
 1227 01ec 1A78     		ldrb	r2, [r3]
 1228 01ee 3B1C     		mov	r3, r7
 1229 01f0 1533     		add	r3, r3, #21
 1230 01f2 013A     		sub	r2, r2, #1
 1231 01f4 1A70     		strb	r2, [r3]
 1232              	.L45:
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1233              		.loc 1 267 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 28


 1234 01f6 3B1C     		mov	r3, r7
 1235 01f8 1533     		add	r3, r3, #21
 1236 01fa 1B78     		ldrb	r3, [r3]
 1237 01fc 002B     		cmp	r3, #0
 1238 01fe 00D0     		beq	.LCB1041
 1239 0200 5CE7     		b	.L56	@long jump
 1240              	.LCB1041:
 293:.\Modbus.c    **** 		}
 294:.\Modbus.c    ****   }
 295:.\Modbus.c    ****   crc = generateCRC(k+2);
 1241              		.loc 1 295 0 is_stmt 1
 1242 0202 3B1C     		mov	r3, r7
 1243 0204 1333     		add	r3, r3, #19
 1244 0206 1B78     		ldrb	r3, [r3]
 1245 0208 0233     		add	r3, r3, #2
 1246 020a DBB2     		uxtb	r3, r3
 1247 020c 181C     		mov	r0, r3
 1248 020e FFF7FEFF 		bl	generateCRC
 1249 0212 031C     		mov	r3, r0
 1250 0214 7B60     		str	r3, [r7, #4]
 296:.\Modbus.c    **** 
 297:.\Modbus.c    ****   response[k] = crc >> 8;
 1251              		.loc 1 297 0
 1252 0216 3B1C     		mov	r3, r7
 1253 0218 1333     		add	r3, r3, #19
 1254 021a 1B78     		ldrb	r3, [r3]
 1255 021c 7A68     		ldr	r2, [r7, #4]
 1256 021e 120A     		lsr	r2, r2, #8
 1257 0220 D1B2     		uxtb	r1, r2
 1258 0222 1B4A     		ldr	r2, .L59+4
 1259 0224 D154     		strb	r1, [r2, r3]
 298:.\Modbus.c    ****   response[k+1] = crc;
 1260              		.loc 1 298 0
 1261 0226 3B1C     		mov	r3, r7
 1262 0228 1333     		add	r3, r3, #19
 1263 022a 1B78     		ldrb	r3, [r3]
 1264 022c 0133     		add	r3, r3, #1
 1265 022e 7A68     		ldr	r2, [r7, #4]
 1266 0230 D1B2     		uxtb	r1, r2
 1267 0232 174A     		ldr	r2, .L59+4
 1268 0234 D154     		strb	r1, [r2, r3]
 299:.\Modbus.c    **** 
 300:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1269              		.loc 1 300 0
 1270 0236 0120     		mov	r0, #1
 1271 0238 FFF7FEFF 		bl	writeEnable_Write
 301:.\Modbus.c    **** 
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1272              		.loc 1 302 0
 1273 023c 3B1C     		mov	r3, r7
 1274 023e 1533     		add	r3, r3, #21
 1275 0240 0022     		mov	r2, #0
 1276 0242 1A70     		strb	r2, [r3]
 1277 0244 0EE0     		b	.L57
 1278              	.L58:
 303:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1279              		.loc 1 303 0 discriminator 2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 29


 1280 0246 3B1C     		mov	r3, r7
 1281 0248 1533     		add	r3, r3, #21
 1282 024a 1B78     		ldrb	r3, [r3]
 1283 024c 104A     		ldr	r2, .L59+4
 1284 024e D35C     		ldrb	r3, [r2, r3]
 1285 0250 181C     		mov	r0, r3
 1286 0252 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1287              		.loc 1 302 0 discriminator 2
 1288 0256 3B1C     		mov	r3, r7
 1289 0258 1533     		add	r3, r3, #21
 1290 025a 1A78     		ldrb	r2, [r3]
 1291 025c 3B1C     		mov	r3, r7
 1292 025e 1533     		add	r3, r3, #21
 1293 0260 0132     		add	r2, r2, #1
 1294 0262 1A70     		strb	r2, [r3]
 1295              	.L57:
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1296              		.loc 1 302 0 is_stmt 0 discriminator 1
 1297 0264 3B1C     		mov	r3, r7
 1298 0266 1533     		add	r3, r3, #21
 1299 0268 1A78     		ldrb	r2, [r3]
 1300 026a 3B1C     		mov	r3, r7
 1301 026c 1333     		add	r3, r3, #19
 1302 026e 1B78     		ldrb	r3, [r3]
 1303 0270 0333     		add	r3, r3, #3
 1304 0272 9A42     		cmp	r2, r3
 1305 0274 E7D1     		bne	.L58
 304:.\Modbus.c    ****   }
 305:.\Modbus.c    ****   responseFinished(k+3);
 1306              		.loc 1 305 0 is_stmt 1
 1307 0276 3B1C     		mov	r3, r7
 1308 0278 1333     		add	r3, r3, #19
 1309 027a 1B78     		ldrb	r3, [r3]
 1310 027c 0333     		add	r3, r3, #3
 1311 027e 181C     		mov	r0, r3
 1312 0280 FFF7FEFF 		bl	responseFinished
 306:.\Modbus.c    **** 
 307:.\Modbus.c    **** }
 1313              		.loc 1 307 0
 1314 0284 BD46     		mov	sp, r7
 1315 0286 07B0     		add	sp, sp, #28
 1316              		@ sp needed
 1317 0288 90BD     		pop	{r4, r7, pc}
 1318              	.L60:
 1319 028a C046     		.align	2
 1320              	.L59:
 1321 028c 00000000 		.word	received
 1322 0290 00000000 		.word	response
 1323 0294 00000000 		.word	coils
 1324              		.cfi_endproc
 1325              	.LFE37:
 1326              		.size	readInputCoil, .-readInputCoil
 1327              		.section	.text.readInputReg,"ax",%progbits
 1328              		.align	2
 1329              		.global	readInputReg
 1330              		.code	16
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 30


 1331              		.thumb_func
 1332              		.type	readInputReg, %function
 1333              	readInputReg:
 1334              	.LFB38:
 308:.\Modbus.c    **** 
 309:.\Modbus.c    **** void readInputReg(void)
 310:.\Modbus.c    **** {
 1335              		.loc 1 310 0
 1336              		.cfi_startproc
 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 86B0     		sub	sp, sp, #24
 1342              		.cfi_def_cfa_offset 32
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 311:.\Modbus.c    ****   unsigned int rr_Address = 0;
 1345              		.loc 1 311 0
 1346 0006 0023     		mov	r3, #0
 1347 0008 FB60     		str	r3, [r7, #12]
 312:.\Modbus.c    ****   unsigned int rr_numRegs = 0;
 1348              		.loc 1 312 0
 1349 000a 0023     		mov	r3, #0
 1350 000c BB60     		str	r3, [r7, #8]
 313:.\Modbus.c    ****   unsigned char j = 3;
 1351              		.loc 1 313 0
 1352 000e 3B1C     		mov	r3, r7
 1353 0010 1733     		add	r3, r3, #23
 1354 0012 0322     		mov	r2, #3
 1355 0014 1A70     		strb	r2, [r3]
 314:.\Modbus.c    ****   unsigned int crc = 0;
 1356              		.loc 1 314 0
 1357 0016 0023     		mov	r3, #0
 1358 0018 7B60     		str	r3, [r7, #4]
 315:.\Modbus.c    ****   unsigned int i = 0;
 1359              		.loc 1 315 0
 1360 001a 0023     		mov	r3, #0
 1361 001c 3B61     		str	r3, [r7, #16]
 316:.\Modbus.c    **** 
 317:.\Modbus.c    ****   //Combine address bytes
 318:.\Modbus.c    ****   rr_Address = received[2];
 1362              		.loc 1 318 0
 1363 001e 604B     		ldr	r3, .L68
 1364 0020 9B78     		ldrb	r3, [r3, #2]
 1365 0022 FB60     		str	r3, [r7, #12]
 319:.\Modbus.c    ****   rr_Address <<= 8;
 1366              		.loc 1 319 0
 1367 0024 FB68     		ldr	r3, [r7, #12]
 1368 0026 1B02     		lsl	r3, r3, #8
 1369 0028 FB60     		str	r3, [r7, #12]
 320:.\Modbus.c    ****   rr_Address |= received[3];
 1370              		.loc 1 320 0
 1371 002a 5D4B     		ldr	r3, .L68
 1372 002c DB78     		ldrb	r3, [r3, #3]
 1373 002e FA68     		ldr	r2, [r7, #12]
 1374 0030 1343     		orr	r3, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 31


 1375 0032 FB60     		str	r3, [r7, #12]
 321:.\Modbus.c    **** 
 322:.\Modbus.c    ****   //Combine number of regs bytes
 323:.\Modbus.c    ****   rr_numRegs = received[4];
 1376              		.loc 1 323 0
 1377 0034 5A4B     		ldr	r3, .L68
 1378 0036 1B79     		ldrb	r3, [r3, #4]
 1379 0038 BB60     		str	r3, [r7, #8]
 324:.\Modbus.c    ****   rr_numRegs <<= 8;
 1380              		.loc 1 324 0
 1381 003a BB68     		ldr	r3, [r7, #8]
 1382 003c 1B02     		lsl	r3, r3, #8
 1383 003e BB60     		str	r3, [r7, #8]
 325:.\Modbus.c    ****   rr_numRegs |= received[5];
 1384              		.loc 1 325 0
 1385 0040 574B     		ldr	r3, .L68
 1386 0042 5B79     		ldrb	r3, [r3, #5]
 1387 0044 BA68     		ldr	r2, [r7, #8]
 1388 0046 1343     		orr	r3, r2
 1389 0048 BB60     		str	r3, [r7, #8]
 326:.\Modbus.c    **** 
 327:.\Modbus.c    ****   response[0] = SlaveAddress;
 1390              		.loc 1 327 0
 1391 004a 564B     		ldr	r3, .L68+4
 1392 004c 0522     		mov	r2, #5
 1393 004e 1A70     		strb	r2, [r3]
 328:.\Modbus.c    ****   response[1] = 0x04;
 1394              		.loc 1 328 0
 1395 0050 544B     		ldr	r3, .L68+4
 1396 0052 0422     		mov	r2, #4
 1397 0054 5A70     		strb	r2, [r3, #1]
 329:.\Modbus.c    ****   response[2] = rr_numRegs*2; //2 bytes per reg
 1398              		.loc 1 329 0
 1399 0056 BB68     		ldr	r3, [r7, #8]
 1400 0058 DBB2     		uxtb	r3, r3
 1401 005a DB18     		add	r3, r3, r3
 1402 005c DAB2     		uxtb	r2, r3
 1403 005e 514B     		ldr	r3, .L68+4
 1404 0060 9A70     		strb	r2, [r3, #2]
 330:.\Modbus.c    **** 
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1405              		.loc 1 331 0
 1406 0062 FB68     		ldr	r3, [r7, #12]
 1407 0064 3B61     		str	r3, [r7, #16]
 1408 0066 4BE0     		b	.L62
 1409              	.L65:
 332:.\Modbus.c    ****     if(holdingReg[i] > 255){
 1410              		.loc 1 332 0
 1411 0068 4F4B     		ldr	r3, .L68+8
 1412 006a 3A69     		ldr	r2, [r7, #16]
 1413 006c 5200     		lsl	r2, r2, #1
 1414 006e D35A     		ldrh	r3, [r2, r3]
 1415 0070 FF2B     		cmp	r3, #255
 1416 0072 24D9     		bls	.L63
 333:.\Modbus.c    ****       //Need to split it up into 2 bytes
 334:.\Modbus.c    ****       response[j] = holdingReg[i] >> 8;
 1417              		.loc 1 334 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 32


 1418 0074 3B1C     		mov	r3, r7
 1419 0076 1733     		add	r3, r3, #23
 1420 0078 1B78     		ldrb	r3, [r3]
 1421 007a 4B4A     		ldr	r2, .L68+8
 1422 007c 3969     		ldr	r1, [r7, #16]
 1423 007e 4900     		lsl	r1, r1, #1
 1424 0080 8A5A     		ldrh	r2, [r1, r2]
 1425 0082 120A     		lsr	r2, r2, #8
 1426 0084 92B2     		uxth	r2, r2
 1427 0086 D1B2     		uxtb	r1, r2
 1428 0088 464A     		ldr	r2, .L68+4
 1429 008a D154     		strb	r1, [r2, r3]
 335:.\Modbus.c    ****       j++;
 1430              		.loc 1 335 0
 1431 008c 3B1C     		mov	r3, r7
 1432 008e 1733     		add	r3, r3, #23
 1433 0090 1A78     		ldrb	r2, [r3]
 1434 0092 3B1C     		mov	r3, r7
 1435 0094 1733     		add	r3, r3, #23
 1436 0096 0132     		add	r2, r2, #1
 1437 0098 1A70     		strb	r2, [r3]
 336:.\Modbus.c    ****       response[j] = holdingReg[i];
 1438              		.loc 1 336 0
 1439 009a 3B1C     		mov	r3, r7
 1440 009c 1733     		add	r3, r3, #23
 1441 009e 1B78     		ldrb	r3, [r3]
 1442 00a0 414A     		ldr	r2, .L68+8
 1443 00a2 3969     		ldr	r1, [r7, #16]
 1444 00a4 4900     		lsl	r1, r1, #1
 1445 00a6 8A5A     		ldrh	r2, [r1, r2]
 1446 00a8 D1B2     		uxtb	r1, r2
 1447 00aa 3E4A     		ldr	r2, .L68+4
 1448 00ac D154     		strb	r1, [r2, r3]
 337:.\Modbus.c    ****       j++;
 1449              		.loc 1 337 0
 1450 00ae 3B1C     		mov	r3, r7
 1451 00b0 1733     		add	r3, r3, #23
 1452 00b2 1A78     		ldrb	r2, [r3]
 1453 00b4 3B1C     		mov	r3, r7
 1454 00b6 1733     		add	r3, r3, #23
 1455 00b8 0132     		add	r2, r2, #1
 1456 00ba 1A70     		strb	r2, [r3]
 1457 00bc 1DE0     		b	.L64
 1458              	.L63:
 338:.\Modbus.c    ****     }
 339:.\Modbus.c    ****     else{
 340:.\Modbus.c    ****       response[j] = 0x00;
 1459              		.loc 1 340 0
 1460 00be 3B1C     		mov	r3, r7
 1461 00c0 1733     		add	r3, r3, #23
 1462 00c2 1B78     		ldrb	r3, [r3]
 1463 00c4 374A     		ldr	r2, .L68+4
 1464 00c6 0021     		mov	r1, #0
 1465 00c8 D154     		strb	r1, [r2, r3]
 341:.\Modbus.c    ****       j++;
 1466              		.loc 1 341 0
 1467 00ca 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 33


 1468 00cc 1733     		add	r3, r3, #23
 1469 00ce 1A78     		ldrb	r2, [r3]
 1470 00d0 3B1C     		mov	r3, r7
 1471 00d2 1733     		add	r3, r3, #23
 1472 00d4 0132     		add	r2, r2, #1
 1473 00d6 1A70     		strb	r2, [r3]
 342:.\Modbus.c    ****       response[j] = holdingReg[i];
 1474              		.loc 1 342 0
 1475 00d8 3B1C     		mov	r3, r7
 1476 00da 1733     		add	r3, r3, #23
 1477 00dc 1B78     		ldrb	r3, [r3]
 1478 00de 324A     		ldr	r2, .L68+8
 1479 00e0 3969     		ldr	r1, [r7, #16]
 1480 00e2 4900     		lsl	r1, r1, #1
 1481 00e4 8A5A     		ldrh	r2, [r1, r2]
 1482 00e6 D1B2     		uxtb	r1, r2
 1483 00e8 2E4A     		ldr	r2, .L68+4
 1484 00ea D154     		strb	r1, [r2, r3]
 343:.\Modbus.c    ****       j++;
 1485              		.loc 1 343 0
 1486 00ec 3B1C     		mov	r3, r7
 1487 00ee 1733     		add	r3, r3, #23
 1488 00f0 1A78     		ldrb	r2, [r3]
 1489 00f2 3B1C     		mov	r3, r7
 1490 00f4 1733     		add	r3, r3, #23
 1491 00f6 0132     		add	r2, r2, #1
 1492 00f8 1A70     		strb	r2, [r3]
 1493              	.L64:
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1494              		.loc 1 331 0
 1495 00fa 3B69     		ldr	r3, [r7, #16]
 1496 00fc 0133     		add	r3, r3, #1
 1497 00fe 3B61     		str	r3, [r7, #16]
 1498              	.L62:
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1499              		.loc 1 331 0 is_stmt 0 discriminator 1
 1500 0100 FA68     		ldr	r2, [r7, #12]
 1501 0102 BB68     		ldr	r3, [r7, #8]
 1502 0104 D218     		add	r2, r2, r3
 1503 0106 3B69     		ldr	r3, [r7, #16]
 1504 0108 9A42     		cmp	r2, r3
 1505 010a ADD8     		bhi	.L65
 344:.\Modbus.c    ****     }
 345:.\Modbus.c    ****   }
 346:.\Modbus.c    ****   crc = generateCRC(j+2);
 1506              		.loc 1 346 0 is_stmt 1
 1507 010c 3B1C     		mov	r3, r7
 1508 010e 1733     		add	r3, r3, #23
 1509 0110 1B78     		ldrb	r3, [r3]
 1510 0112 0233     		add	r3, r3, #2
 1511 0114 DBB2     		uxtb	r3, r3
 1512 0116 181C     		mov	r0, r3
 1513 0118 FFF7FEFF 		bl	generateCRC
 1514 011c 031C     		mov	r3, r0
 1515 011e 7B60     		str	r3, [r7, #4]
 347:.\Modbus.c    ****   response[j] = crc >> 8;
 1516              		.loc 1 347 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 34


 1517 0120 3B1C     		mov	r3, r7
 1518 0122 1733     		add	r3, r3, #23
 1519 0124 1B78     		ldrb	r3, [r3]
 1520 0126 7A68     		ldr	r2, [r7, #4]
 1521 0128 120A     		lsr	r2, r2, #8
 1522 012a D1B2     		uxtb	r1, r2
 1523 012c 1D4A     		ldr	r2, .L68+4
 1524 012e D154     		strb	r1, [r2, r3]
 348:.\Modbus.c    ****   j++;
 1525              		.loc 1 348 0
 1526 0130 3B1C     		mov	r3, r7
 1527 0132 1733     		add	r3, r3, #23
 1528 0134 1A78     		ldrb	r2, [r3]
 1529 0136 3B1C     		mov	r3, r7
 1530 0138 1733     		add	r3, r3, #23
 1531 013a 0132     		add	r2, r2, #1
 1532 013c 1A70     		strb	r2, [r3]
 349:.\Modbus.c    ****   response[j] = crc;
 1533              		.loc 1 349 0
 1534 013e 3B1C     		mov	r3, r7
 1535 0140 1733     		add	r3, r3, #23
 1536 0142 1B78     		ldrb	r3, [r3]
 1537 0144 7A68     		ldr	r2, [r7, #4]
 1538 0146 D1B2     		uxtb	r1, r2
 1539 0148 164A     		ldr	r2, .L68+4
 1540 014a D154     		strb	r1, [r2, r3]
 350:.\Modbus.c    ****   j+=2;
 1541              		.loc 1 350 0
 1542 014c 3B1C     		mov	r3, r7
 1543 014e 1733     		add	r3, r3, #23
 1544 0150 3A1C     		mov	r2, r7
 1545 0152 1732     		add	r2, r2, #23
 1546 0154 1278     		ldrb	r2, [r2]
 1547 0156 0232     		add	r2, r2, #2
 1548 0158 1A70     		strb	r2, [r3]
 351:.\Modbus.c    **** 
 352:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1549              		.loc 1 352 0
 1550 015a 0120     		mov	r0, #1
 1551 015c FFF7FEFF 		bl	writeEnable_Write
 353:.\Modbus.c    **** 
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1552              		.loc 1 354 0
 1553 0160 0023     		mov	r3, #0
 1554 0162 3B61     		str	r3, [r7, #16]
 1555 0164 09E0     		b	.L66
 1556              	.L67:
 355:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1557              		.loc 1 355 0 discriminator 2
 1558 0166 0F4A     		ldr	r2, .L68+4
 1559 0168 3B69     		ldr	r3, [r7, #16]
 1560 016a D318     		add	r3, r2, r3
 1561 016c 1B78     		ldrb	r3, [r3]
 1562 016e 181C     		mov	r0, r3
 1563 0170 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1564              		.loc 1 354 0 discriminator 2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 35


 1565 0174 3B69     		ldr	r3, [r7, #16]
 1566 0176 0133     		add	r3, r3, #1
 1567 0178 3B61     		str	r3, [r7, #16]
 1568              	.L66:
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1569              		.loc 1 354 0 is_stmt 0 discriminator 1
 1570 017a 3B1C     		mov	r3, r7
 1571 017c 1733     		add	r3, r3, #23
 1572 017e 1A78     		ldrb	r2, [r3]
 1573 0180 3B69     		ldr	r3, [r7, #16]
 1574 0182 9A42     		cmp	r2, r3
 1575 0184 EFD1     		bne	.L67
 356:.\Modbus.c    ****   }
 357:.\Modbus.c    ****   responseFinished(9);
 1576              		.loc 1 357 0 is_stmt 1
 1577 0186 0920     		mov	r0, #9
 1578 0188 FFF7FEFF 		bl	responseFinished
 358:.\Modbus.c    ****   i=0;  
 1579              		.loc 1 358 0
 1580 018c 0023     		mov	r3, #0
 1581 018e 3B61     		str	r3, [r7, #16]
 359:.\Modbus.c    ****   j=0;
 1582              		.loc 1 359 0
 1583 0190 3B1C     		mov	r3, r7
 1584 0192 1733     		add	r3, r3, #23
 1585 0194 0022     		mov	r2, #0
 1586 0196 1A70     		strb	r2, [r3]
 360:.\Modbus.c    **** }
 1587              		.loc 1 360 0
 1588 0198 BD46     		mov	sp, r7
 1589 019a 06B0     		add	sp, sp, #24
 1590              		@ sp needed
 1591 019c 80BD     		pop	{r7, pc}
 1592              	.L69:
 1593 019e C046     		.align	2
 1594              	.L68:
 1595 01a0 00000000 		.word	received
 1596 01a4 00000000 		.word	response
 1597 01a8 00000000 		.word	holdingReg
 1598              		.cfi_endproc
 1599              	.LFE38:
 1600              		.size	readInputReg, .-readInputReg
 1601              		.section	.text.readReg,"ax",%progbits
 1602              		.align	2
 1603              		.global	readReg
 1604              		.code	16
 1605              		.thumb_func
 1606              		.type	readReg, %function
 1607              	readReg:
 1608              	.LFB39:
 361:.\Modbus.c    **** 
 362:.\Modbus.c    **** 
 363:.\Modbus.c    **** void readReg(void)
 364:.\Modbus.c    **** {
 1609              		.loc 1 364 0
 1610              		.cfi_startproc
 1611 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 36


 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 7, -8
 1614              		.cfi_offset 14, -4
 1615 0002 86B0     		sub	sp, sp, #24
 1616              		.cfi_def_cfa_offset 32
 1617 0004 00AF     		add	r7, sp, #0
 1618              		.cfi_def_cfa_register 7
 365:.\Modbus.c    ****   unsigned int rr_Address = 0;
 1619              		.loc 1 365 0
 1620 0006 0023     		mov	r3, #0
 1621 0008 FB60     		str	r3, [r7, #12]
 366:.\Modbus.c    ****   unsigned int rr_numRegs = 0;
 1622              		.loc 1 366 0
 1623 000a 0023     		mov	r3, #0
 1624 000c BB60     		str	r3, [r7, #8]
 367:.\Modbus.c    ****   unsigned char j = 3;
 1625              		.loc 1 367 0
 1626 000e 3B1C     		mov	r3, r7
 1627 0010 1733     		add	r3, r3, #23
 1628 0012 0322     		mov	r2, #3
 1629 0014 1A70     		strb	r2, [r3]
 368:.\Modbus.c    ****   unsigned int crc = 0;
 1630              		.loc 1 368 0
 1631 0016 0023     		mov	r3, #0
 1632 0018 7B60     		str	r3, [r7, #4]
 369:.\Modbus.c    ****   unsigned int i = 0;
 1633              		.loc 1 369 0
 1634 001a 0023     		mov	r3, #0
 1635 001c 3B61     		str	r3, [r7, #16]
 370:.\Modbus.c    **** 
 371:.\Modbus.c    ****   //Combine address bytes
 372:.\Modbus.c    ****   rr_Address = received[2];
 1636              		.loc 1 372 0
 1637 001e 604B     		ldr	r3, .L77
 1638 0020 9B78     		ldrb	r3, [r3, #2]
 1639 0022 FB60     		str	r3, [r7, #12]
 373:.\Modbus.c    ****   rr_Address <<= 8;
 1640              		.loc 1 373 0
 1641 0024 FB68     		ldr	r3, [r7, #12]
 1642 0026 1B02     		lsl	r3, r3, #8
 1643 0028 FB60     		str	r3, [r7, #12]
 374:.\Modbus.c    ****   rr_Address |= received[3];
 1644              		.loc 1 374 0
 1645 002a 5D4B     		ldr	r3, .L77
 1646 002c DB78     		ldrb	r3, [r3, #3]
 1647 002e FA68     		ldr	r2, [r7, #12]
 1648 0030 1343     		orr	r3, r2
 1649 0032 FB60     		str	r3, [r7, #12]
 375:.\Modbus.c    **** 
 376:.\Modbus.c    ****   //Combine number of regs bytes
 377:.\Modbus.c    ****   rr_numRegs = received[4];
 1650              		.loc 1 377 0
 1651 0034 5A4B     		ldr	r3, .L77
 1652 0036 1B79     		ldrb	r3, [r3, #4]
 1653 0038 BB60     		str	r3, [r7, #8]
 378:.\Modbus.c    ****   rr_numRegs <<= 8;
 1654              		.loc 1 378 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 37


 1655 003a BB68     		ldr	r3, [r7, #8]
 1656 003c 1B02     		lsl	r3, r3, #8
 1657 003e BB60     		str	r3, [r7, #8]
 379:.\Modbus.c    ****   rr_numRegs |= received[5];
 1658              		.loc 1 379 0
 1659 0040 574B     		ldr	r3, .L77
 1660 0042 5B79     		ldrb	r3, [r3, #5]
 1661 0044 BA68     		ldr	r2, [r7, #8]
 1662 0046 1343     		orr	r3, r2
 1663 0048 BB60     		str	r3, [r7, #8]
 380:.\Modbus.c    **** 
 381:.\Modbus.c    ****   response[0] = SlaveAddress;
 1664              		.loc 1 381 0
 1665 004a 564B     		ldr	r3, .L77+4
 1666 004c 0522     		mov	r2, #5
 1667 004e 1A70     		strb	r2, [r3]
 382:.\Modbus.c    ****   response[1] = 0x03;
 1668              		.loc 1 382 0
 1669 0050 544B     		ldr	r3, .L77+4
 1670 0052 0322     		mov	r2, #3
 1671 0054 5A70     		strb	r2, [r3, #1]
 383:.\Modbus.c    ****   response[2] = rr_numRegs*2; //2 bytes per reg
 1672              		.loc 1 383 0
 1673 0056 BB68     		ldr	r3, [r7, #8]
 1674 0058 DBB2     		uxtb	r3, r3
 1675 005a DB18     		add	r3, r3, r3
 1676 005c DAB2     		uxtb	r2, r3
 1677 005e 514B     		ldr	r3, .L77+4
 1678 0060 9A70     		strb	r2, [r3, #2]
 384:.\Modbus.c    **** 
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1679              		.loc 1 385 0
 1680 0062 FB68     		ldr	r3, [r7, #12]
 1681 0064 3B61     		str	r3, [r7, #16]
 1682 0066 4BE0     		b	.L71
 1683              	.L74:
 386:.\Modbus.c    ****     if(holdingReg[i] > 255){
 1684              		.loc 1 386 0
 1685 0068 4F4B     		ldr	r3, .L77+8
 1686 006a 3A69     		ldr	r2, [r7, #16]
 1687 006c 5200     		lsl	r2, r2, #1
 1688 006e D35A     		ldrh	r3, [r2, r3]
 1689 0070 FF2B     		cmp	r3, #255
 1690 0072 24D9     		bls	.L72
 387:.\Modbus.c    ****       //Need to split it up into 2 bytes
 388:.\Modbus.c    ****       response[j] = holdingReg[i] >> 8;
 1691              		.loc 1 388 0
 1692 0074 3B1C     		mov	r3, r7
 1693 0076 1733     		add	r3, r3, #23
 1694 0078 1B78     		ldrb	r3, [r3]
 1695 007a 4B4A     		ldr	r2, .L77+8
 1696 007c 3969     		ldr	r1, [r7, #16]
 1697 007e 4900     		lsl	r1, r1, #1
 1698 0080 8A5A     		ldrh	r2, [r1, r2]
 1699 0082 120A     		lsr	r2, r2, #8
 1700 0084 92B2     		uxth	r2, r2
 1701 0086 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 38


 1702 0088 464A     		ldr	r2, .L77+4
 1703 008a D154     		strb	r1, [r2, r3]
 389:.\Modbus.c    ****       j++;
 1704              		.loc 1 389 0
 1705 008c 3B1C     		mov	r3, r7
 1706 008e 1733     		add	r3, r3, #23
 1707 0090 1A78     		ldrb	r2, [r3]
 1708 0092 3B1C     		mov	r3, r7
 1709 0094 1733     		add	r3, r3, #23
 1710 0096 0132     		add	r2, r2, #1
 1711 0098 1A70     		strb	r2, [r3]
 390:.\Modbus.c    ****       response[j] = holdingReg[i];
 1712              		.loc 1 390 0
 1713 009a 3B1C     		mov	r3, r7
 1714 009c 1733     		add	r3, r3, #23
 1715 009e 1B78     		ldrb	r3, [r3]
 1716 00a0 414A     		ldr	r2, .L77+8
 1717 00a2 3969     		ldr	r1, [r7, #16]
 1718 00a4 4900     		lsl	r1, r1, #1
 1719 00a6 8A5A     		ldrh	r2, [r1, r2]
 1720 00a8 D1B2     		uxtb	r1, r2
 1721 00aa 3E4A     		ldr	r2, .L77+4
 1722 00ac D154     		strb	r1, [r2, r3]
 391:.\Modbus.c    ****       j++;
 1723              		.loc 1 391 0
 1724 00ae 3B1C     		mov	r3, r7
 1725 00b0 1733     		add	r3, r3, #23
 1726 00b2 1A78     		ldrb	r2, [r3]
 1727 00b4 3B1C     		mov	r3, r7
 1728 00b6 1733     		add	r3, r3, #23
 1729 00b8 0132     		add	r2, r2, #1
 1730 00ba 1A70     		strb	r2, [r3]
 1731 00bc 1DE0     		b	.L73
 1732              	.L72:
 392:.\Modbus.c    ****     }
 393:.\Modbus.c    ****     else{
 394:.\Modbus.c    ****       response[j] = 0x00;
 1733              		.loc 1 394 0
 1734 00be 3B1C     		mov	r3, r7
 1735 00c0 1733     		add	r3, r3, #23
 1736 00c2 1B78     		ldrb	r3, [r3]
 1737 00c4 374A     		ldr	r2, .L77+4
 1738 00c6 0021     		mov	r1, #0
 1739 00c8 D154     		strb	r1, [r2, r3]
 395:.\Modbus.c    ****       j++;
 1740              		.loc 1 395 0
 1741 00ca 3B1C     		mov	r3, r7
 1742 00cc 1733     		add	r3, r3, #23
 1743 00ce 1A78     		ldrb	r2, [r3]
 1744 00d0 3B1C     		mov	r3, r7
 1745 00d2 1733     		add	r3, r3, #23
 1746 00d4 0132     		add	r2, r2, #1
 1747 00d6 1A70     		strb	r2, [r3]
 396:.\Modbus.c    ****       response[j] = holdingReg[i];
 1748              		.loc 1 396 0
 1749 00d8 3B1C     		mov	r3, r7
 1750 00da 1733     		add	r3, r3, #23
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 39


 1751 00dc 1B78     		ldrb	r3, [r3]
 1752 00de 324A     		ldr	r2, .L77+8
 1753 00e0 3969     		ldr	r1, [r7, #16]
 1754 00e2 4900     		lsl	r1, r1, #1
 1755 00e4 8A5A     		ldrh	r2, [r1, r2]
 1756 00e6 D1B2     		uxtb	r1, r2
 1757 00e8 2E4A     		ldr	r2, .L77+4
 1758 00ea D154     		strb	r1, [r2, r3]
 397:.\Modbus.c    ****       j++;
 1759              		.loc 1 397 0
 1760 00ec 3B1C     		mov	r3, r7
 1761 00ee 1733     		add	r3, r3, #23
 1762 00f0 1A78     		ldrb	r2, [r3]
 1763 00f2 3B1C     		mov	r3, r7
 1764 00f4 1733     		add	r3, r3, #23
 1765 00f6 0132     		add	r2, r2, #1
 1766 00f8 1A70     		strb	r2, [r3]
 1767              	.L73:
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1768              		.loc 1 385 0
 1769 00fa 3B69     		ldr	r3, [r7, #16]
 1770 00fc 0133     		add	r3, r3, #1
 1771 00fe 3B61     		str	r3, [r7, #16]
 1772              	.L71:
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1773              		.loc 1 385 0 is_stmt 0 discriminator 1
 1774 0100 FA68     		ldr	r2, [r7, #12]
 1775 0102 BB68     		ldr	r3, [r7, #8]
 1776 0104 D218     		add	r2, r2, r3
 1777 0106 3B69     		ldr	r3, [r7, #16]
 1778 0108 9A42     		cmp	r2, r3
 1779 010a ADD8     		bhi	.L74
 398:.\Modbus.c    ****     }
 399:.\Modbus.c    ****   }
 400:.\Modbus.c    ****   crc = generateCRC(j+2);
 1780              		.loc 1 400 0 is_stmt 1
 1781 010c 3B1C     		mov	r3, r7
 1782 010e 1733     		add	r3, r3, #23
 1783 0110 1B78     		ldrb	r3, [r3]
 1784 0112 0233     		add	r3, r3, #2
 1785 0114 DBB2     		uxtb	r3, r3
 1786 0116 181C     		mov	r0, r3
 1787 0118 FFF7FEFF 		bl	generateCRC
 1788 011c 031C     		mov	r3, r0
 1789 011e 7B60     		str	r3, [r7, #4]
 401:.\Modbus.c    ****   response[j] = crc >> 8;
 1790              		.loc 1 401 0
 1791 0120 3B1C     		mov	r3, r7
 1792 0122 1733     		add	r3, r3, #23
 1793 0124 1B78     		ldrb	r3, [r3]
 1794 0126 7A68     		ldr	r2, [r7, #4]
 1795 0128 120A     		lsr	r2, r2, #8
 1796 012a D1B2     		uxtb	r1, r2
 1797 012c 1D4A     		ldr	r2, .L77+4
 1798 012e D154     		strb	r1, [r2, r3]
 402:.\Modbus.c    ****   j++;
 1799              		.loc 1 402 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 40


 1800 0130 3B1C     		mov	r3, r7
 1801 0132 1733     		add	r3, r3, #23
 1802 0134 1A78     		ldrb	r2, [r3]
 1803 0136 3B1C     		mov	r3, r7
 1804 0138 1733     		add	r3, r3, #23
 1805 013a 0132     		add	r2, r2, #1
 1806 013c 1A70     		strb	r2, [r3]
 403:.\Modbus.c    ****   response[j] = crc;
 1807              		.loc 1 403 0
 1808 013e 3B1C     		mov	r3, r7
 1809 0140 1733     		add	r3, r3, #23
 1810 0142 1B78     		ldrb	r3, [r3]
 1811 0144 7A68     		ldr	r2, [r7, #4]
 1812 0146 D1B2     		uxtb	r1, r2
 1813 0148 164A     		ldr	r2, .L77+4
 1814 014a D154     		strb	r1, [r2, r3]
 404:.\Modbus.c    ****   j+=2;
 1815              		.loc 1 404 0
 1816 014c 3B1C     		mov	r3, r7
 1817 014e 1733     		add	r3, r3, #23
 1818 0150 3A1C     		mov	r2, r7
 1819 0152 1732     		add	r2, r2, #23
 1820 0154 1278     		ldrb	r2, [r2]
 1821 0156 0232     		add	r2, r2, #2
 1822 0158 1A70     		strb	r2, [r3]
 405:.\Modbus.c    **** 
 406:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1823              		.loc 1 406 0
 1824 015a 0120     		mov	r0, #1
 1825 015c FFF7FEFF 		bl	writeEnable_Write
 407:.\Modbus.c    **** 
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1826              		.loc 1 408 0
 1827 0160 0023     		mov	r3, #0
 1828 0162 3B61     		str	r3, [r7, #16]
 1829 0164 09E0     		b	.L75
 1830              	.L76:
 409:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1831              		.loc 1 409 0 discriminator 2
 1832 0166 0F4A     		ldr	r2, .L77+4
 1833 0168 3B69     		ldr	r3, [r7, #16]
 1834 016a D318     		add	r3, r2, r3
 1835 016c 1B78     		ldrb	r3, [r3]
 1836 016e 181C     		mov	r0, r3
 1837 0170 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1838              		.loc 1 408 0 discriminator 2
 1839 0174 3B69     		ldr	r3, [r7, #16]
 1840 0176 0133     		add	r3, r3, #1
 1841 0178 3B61     		str	r3, [r7, #16]
 1842              	.L75:
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1843              		.loc 1 408 0 is_stmt 0 discriminator 1
 1844 017a 3B1C     		mov	r3, r7
 1845 017c 1733     		add	r3, r3, #23
 1846 017e 1A78     		ldrb	r2, [r3]
 1847 0180 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 41


 1848 0182 9A42     		cmp	r2, r3
 1849 0184 EFD1     		bne	.L76
 410:.\Modbus.c    ****   }
 411:.\Modbus.c    ****   responseFinished(j);
 1850              		.loc 1 411 0 is_stmt 1
 1851 0186 3B1C     		mov	r3, r7
 1852 0188 1733     		add	r3, r3, #23
 1853 018a 1B78     		ldrb	r3, [r3]
 1854 018c 181C     		mov	r0, r3
 1855 018e FFF7FEFF 		bl	responseFinished
 412:.\Modbus.c    ****   j=0;  
 1856              		.loc 1 412 0
 1857 0192 3B1C     		mov	r3, r7
 1858 0194 1733     		add	r3, r3, #23
 1859 0196 0022     		mov	r2, #0
 1860 0198 1A70     		strb	r2, [r3]
 413:.\Modbus.c    **** }
 1861              		.loc 1 413 0
 1862 019a BD46     		mov	sp, r7
 1863 019c 06B0     		add	sp, sp, #24
 1864              		@ sp needed
 1865 019e 80BD     		pop	{r7, pc}
 1866              	.L78:
 1867              		.align	2
 1868              	.L77:
 1869 01a0 00000000 		.word	received
 1870 01a4 00000000 		.word	response
 1871 01a8 00000000 		.word	holdingReg
 1872              		.cfi_endproc
 1873              	.LFE39:
 1874              		.size	readReg, .-readReg
 1875              		.section	.text.writeReg,"ax",%progbits
 1876              		.align	2
 1877              		.global	writeReg
 1878              		.code	16
 1879              		.thumb_func
 1880              		.type	writeReg, %function
 1881              	writeReg:
 1882              	.LFB40:
 414:.\Modbus.c    **** 
 415:.\Modbus.c    **** void writeReg(void)
 416:.\Modbus.c    **** {
 1883              		.loc 1 416 0
 1884              		.cfi_startproc
 1885 0000 80B5     		push	{r7, lr}
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 7, -8
 1888              		.cfi_offset 14, -4
 1889 0002 88B0     		sub	sp, sp, #32
 1890              		.cfi_def_cfa_offset 40
 1891 0004 00AF     		add	r7, sp, #0
 1892              		.cfi_def_cfa_register 7
 417:.\Modbus.c    **** /******************************************************************************/
 418:.\Modbus.c    **** /* Works out which reg to write and then responds                             */
 419:.\Modbus.c    **** /******************************************************************************/
 420:.\Modbus.c    ****   unsigned int wr_AddressLow = 0;
 1893              		.loc 1 420 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 42


 1894 0006 0023     		mov	r3, #0
 1895 0008 BB61     		str	r3, [r7, #24]
 421:.\Modbus.c    ****   unsigned int wr_AddressHigh = 0;
 1896              		.loc 1 421 0
 1897 000a 0023     		mov	r3, #0
 1898 000c 7B61     		str	r3, [r7, #20]
 422:.\Modbus.c    ****   unsigned int wr_Address = 0;
 1899              		.loc 1 422 0
 1900 000e 0023     		mov	r3, #0
 1901 0010 3B61     		str	r3, [r7, #16]
 423:.\Modbus.c    **** 
 424:.\Modbus.c    ****   unsigned int wr_valToWrite = 0;
 1902              		.loc 1 424 0
 1903 0012 0023     		mov	r3, #0
 1904 0014 FB60     		str	r3, [r7, #12]
 425:.\Modbus.c    ****   unsigned int wr_valToWriteLow = 0;
 1905              		.loc 1 425 0
 1906 0016 0023     		mov	r3, #0
 1907 0018 BB60     		str	r3, [r7, #8]
 426:.\Modbus.c    ****   unsigned int wr_valToWriteHigh = 0;
 1908              		.loc 1 426 0
 1909 001a 0023     		mov	r3, #0
 1910 001c 7B60     		str	r3, [r7, #4]
 427:.\Modbus.c    **** 
 428:.\Modbus.c    ****   unsigned int crc = 0;
 1911              		.loc 1 428 0
 1912 001e 0023     		mov	r3, #0
 1913 0020 3B60     		str	r3, [r7]
 429:.\Modbus.c    ****   unsigned int i = 0;
 1914              		.loc 1 429 0
 1915 0022 0023     		mov	r3, #0
 1916 0024 FB61     		str	r3, [r7, #28]
 430:.\Modbus.c    **** 
 431:.\Modbus.c    ****   //Combine address bytes
 432:.\Modbus.c    ****   wr_Address = received[2];
 1917              		.loc 1 432 0
 1918 0026 334B     		ldr	r3, .L82
 1919 0028 9B78     		ldrb	r3, [r3, #2]
 1920 002a 3B61     		str	r3, [r7, #16]
 433:.\Modbus.c    ****   wr_Address <<= 8;
 1921              		.loc 1 433 0
 1922 002c 3B69     		ldr	r3, [r7, #16]
 1923 002e 1B02     		lsl	r3, r3, #8
 1924 0030 3B61     		str	r3, [r7, #16]
 434:.\Modbus.c    ****   wr_Address |= received[3];
 1925              		.loc 1 434 0
 1926 0032 304B     		ldr	r3, .L82
 1927 0034 DB78     		ldrb	r3, [r3, #3]
 1928 0036 3A69     		ldr	r2, [r7, #16]
 1929 0038 1343     		orr	r3, r2
 1930 003a 3B61     		str	r3, [r7, #16]
 435:.\Modbus.c    **** 
 436:.\Modbus.c    ****   wr_AddressLow = received[3]; //useful to store
 1931              		.loc 1 436 0
 1932 003c 2D4B     		ldr	r3, .L82
 1933 003e DB78     		ldrb	r3, [r3, #3]
 1934 0040 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 43


 437:.\Modbus.c    ****   wr_AddressHigh = received[2];
 1935              		.loc 1 437 0
 1936 0042 2C4B     		ldr	r3, .L82
 1937 0044 9B78     		ldrb	r3, [r3, #2]
 1938 0046 7B61     		str	r3, [r7, #20]
 438:.\Modbus.c    **** 
 439:.\Modbus.c    ****   //Combine value to write regs
 440:.\Modbus.c    ****   wr_valToWrite = received[4];
 1939              		.loc 1 440 0
 1940 0048 2A4B     		ldr	r3, .L82
 1941 004a 1B79     		ldrb	r3, [r3, #4]
 1942 004c FB60     		str	r3, [r7, #12]
 441:.\Modbus.c    ****   wr_valToWrite <<= 8;
 1943              		.loc 1 441 0
 1944 004e FB68     		ldr	r3, [r7, #12]
 1945 0050 1B02     		lsl	r3, r3, #8
 1946 0052 FB60     		str	r3, [r7, #12]
 442:.\Modbus.c    ****   wr_valToWrite |= received[5];
 1947              		.loc 1 442 0
 1948 0054 274B     		ldr	r3, .L82
 1949 0056 5B79     		ldrb	r3, [r3, #5]
 1950 0058 FA68     		ldr	r2, [r7, #12]
 1951 005a 1343     		orr	r3, r2
 1952 005c FB60     		str	r3, [r7, #12]
 443:.\Modbus.c    **** 
 444:.\Modbus.c    ****   wr_valToWriteLow = received[5];
 1953              		.loc 1 444 0
 1954 005e 254B     		ldr	r3, .L82
 1955 0060 5B79     		ldrb	r3, [r3, #5]
 1956 0062 BB60     		str	r3, [r7, #8]
 445:.\Modbus.c    ****   wr_valToWriteHigh = received[4];
 1957              		.loc 1 445 0
 1958 0064 234B     		ldr	r3, .L82
 1959 0066 1B79     		ldrb	r3, [r3, #4]
 1960 0068 7B60     		str	r3, [r7, #4]
 446:.\Modbus.c    **** 
 447:.\Modbus.c    ****   holdingReg[wr_Address] = wr_valToWrite;
 1961              		.loc 1 447 0
 1962 006a FB68     		ldr	r3, [r7, #12]
 1963 006c 99B2     		uxth	r1, r3
 1964 006e 224B     		ldr	r3, .L82+4
 1965 0070 3A69     		ldr	r2, [r7, #16]
 1966 0072 5200     		lsl	r2, r2, #1
 1967 0074 D152     		strh	r1, [r2, r3]
 448:.\Modbus.c    **** 
 449:.\Modbus.c    ****   response[0] = SlaveAddress;
 1968              		.loc 1 449 0
 1969 0076 214B     		ldr	r3, .L82+8
 1970 0078 0522     		mov	r2, #5
 1971 007a 1A70     		strb	r2, [r3]
 450:.\Modbus.c    ****   response[1] = 0x06;
 1972              		.loc 1 450 0
 1973 007c 1F4B     		ldr	r3, .L82+8
 1974 007e 0622     		mov	r2, #6
 1975 0080 5A70     		strb	r2, [r3, #1]
 451:.\Modbus.c    ****   response[3] = wr_AddressLow; //2 bytes per reg
 1976              		.loc 1 451 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 44


 1977 0082 BB69     		ldr	r3, [r7, #24]
 1978 0084 DAB2     		uxtb	r2, r3
 1979 0086 1D4B     		ldr	r3, .L82+8
 1980 0088 DA70     		strb	r2, [r3, #3]
 452:.\Modbus.c    ****   response[2] = wr_AddressHigh;
 1981              		.loc 1 452 0
 1982 008a 7B69     		ldr	r3, [r7, #20]
 1983 008c DAB2     		uxtb	r2, r3
 1984 008e 1B4B     		ldr	r3, .L82+8
 1985 0090 9A70     		strb	r2, [r3, #2]
 453:.\Modbus.c    **** 
 454:.\Modbus.c    **** //TO DO CHECK VALUE IS ACTUALLY WRITTEN//
 455:.\Modbus.c    ****   response[4] = wr_valToWriteHigh;
 1986              		.loc 1 455 0
 1987 0092 7B68     		ldr	r3, [r7, #4]
 1988 0094 DAB2     		uxtb	r2, r3
 1989 0096 194B     		ldr	r3, .L82+8
 1990 0098 1A71     		strb	r2, [r3, #4]
 456:.\Modbus.c    ****   response[5] = wr_valToWriteLow;
 1991              		.loc 1 456 0
 1992 009a BB68     		ldr	r3, [r7, #8]
 1993 009c DAB2     		uxtb	r2, r3
 1994 009e 174B     		ldr	r3, .L82+8
 1995 00a0 5A71     		strb	r2, [r3, #5]
 457:.\Modbus.c    **** 
 458:.\Modbus.c    ****   crc = generateCRC(8);
 1996              		.loc 1 458 0
 1997 00a2 0820     		mov	r0, #8
 1998 00a4 FFF7FEFF 		bl	generateCRC
 1999 00a8 031C     		mov	r3, r0
 2000 00aa 3B60     		str	r3, [r7]
 459:.\Modbus.c    **** 
 460:.\Modbus.c    ****   response[6] = crc >> 8;
 2001              		.loc 1 460 0
 2002 00ac 3B68     		ldr	r3, [r7]
 2003 00ae 1B0A     		lsr	r3, r3, #8
 2004 00b0 DAB2     		uxtb	r2, r3
 2005 00b2 124B     		ldr	r3, .L82+8
 2006 00b4 9A71     		strb	r2, [r3, #6]
 461:.\Modbus.c    ****   response[7] = crc;
 2007              		.loc 1 461 0
 2008 00b6 3B68     		ldr	r3, [r7]
 2009 00b8 DAB2     		uxtb	r2, r3
 2010 00ba 104B     		ldr	r3, .L82+8
 2011 00bc DA71     		strb	r2, [r3, #7]
 462:.\Modbus.c    **** 
 463:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2012              		.loc 1 463 0
 2013 00be 0120     		mov	r0, #1
 2014 00c0 FFF7FEFF 		bl	writeEnable_Write
 464:.\Modbus.c    **** 
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2015              		.loc 1 465 0
 2016 00c4 0023     		mov	r3, #0
 2017 00c6 FB61     		str	r3, [r7, #28]
 2018 00c8 09E0     		b	.L80
 2019              	.L81:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 45


 466:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2020              		.loc 1 466 0 discriminator 2
 2021 00ca 0C4A     		ldr	r2, .L82+8
 2022 00cc FB69     		ldr	r3, [r7, #28]
 2023 00ce D318     		add	r3, r2, r3
 2024 00d0 1B78     		ldrb	r3, [r3]
 2025 00d2 181C     		mov	r0, r3
 2026 00d4 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2027              		.loc 1 465 0 discriminator 2
 2028 00d8 FB69     		ldr	r3, [r7, #28]
 2029 00da 0133     		add	r3, r3, #1
 2030 00dc FB61     		str	r3, [r7, #28]
 2031              	.L80:
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2032              		.loc 1 465 0 is_stmt 0 discriminator 1
 2033 00de FB69     		ldr	r3, [r7, #28]
 2034 00e0 092B     		cmp	r3, #9
 2035 00e2 F2D1     		bne	.L81
 467:.\Modbus.c    ****   }
 468:.\Modbus.c    ****   responseFinished(9);
 2036              		.loc 1 468 0 is_stmt 1
 2037 00e4 0920     		mov	r0, #9
 2038 00e6 FFF7FEFF 		bl	responseFinished
 469:.\Modbus.c    ****   i=0;  
 2039              		.loc 1 469 0
 2040 00ea 0023     		mov	r3, #0
 2041 00ec FB61     		str	r3, [r7, #28]
 470:.\Modbus.c    **** }
 2042              		.loc 1 470 0
 2043 00ee BD46     		mov	sp, r7
 2044 00f0 08B0     		add	sp, sp, #32
 2045              		@ sp needed
 2046 00f2 80BD     		pop	{r7, pc}
 2047              	.L83:
 2048              		.align	2
 2049              	.L82:
 2050 00f4 00000000 		.word	received
 2051 00f8 00000000 		.word	holdingReg
 2052 00fc 00000000 		.word	response
 2053              		.cfi_endproc
 2054              	.LFE40:
 2055              		.size	writeReg, .-writeReg
 2056              		.section	.text.writeMultipleRegs,"ax",%progbits
 2057              		.align	2
 2058              		.global	writeMultipleRegs
 2059              		.code	16
 2060              		.thumb_func
 2061              		.type	writeMultipleRegs, %function
 2062              	writeMultipleRegs:
 2063              	.LFB41:
 471:.\Modbus.c    **** 
 472:.\Modbus.c    **** void writeMultipleRegs(void)
 473:.\Modbus.c    **** {
 2064              		.loc 1 473 0
 2065              		.cfi_startproc
 2066 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 46


 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 7, -8
 2069              		.cfi_offset 14, -4
 2070 0002 8CB0     		sub	sp, sp, #48
 2071              		.cfi_def_cfa_offset 56
 2072 0004 00AF     		add	r7, sp, #0
 2073              		.cfi_def_cfa_register 7
 474:.\Modbus.c    **** /******************************************************************************/
 475:.\Modbus.c    **** /* Works out which reg to write and then responds                             */
 476:.\Modbus.c    **** /******************************************************************************/
 477:.\Modbus.c    ****   unsigned int wmr_Address = 0;
 2074              		.loc 1 477 0
 2075 0006 0023     		mov	r3, #0
 2076 0008 7B62     		str	r3, [r7, #36]
 478:.\Modbus.c    ****   unsigned int wmr_AddressHigh = 0;
 2077              		.loc 1 478 0
 2078 000a 0023     		mov	r3, #0
 2079 000c 3B62     		str	r3, [r7, #32]
 479:.\Modbus.c    ****   unsigned int wmr_AddressLow = 0;
 2080              		.loc 1 479 0
 2081 000e 0023     		mov	r3, #0
 2082 0010 FB61     		str	r3, [r7, #28]
 480:.\Modbus.c    ****   unsigned int wmr_numRegs = 0;
 2083              		.loc 1 480 0
 2084 0012 0023     		mov	r3, #0
 2085 0014 BB61     		str	r3, [r7, #24]
 481:.\Modbus.c    ****   unsigned int wmr_numRegsHigh = 0;
 2086              		.loc 1 481 0
 2087 0016 0023     		mov	r3, #0
 2088 0018 7B61     		str	r3, [r7, #20]
 482:.\Modbus.c    ****   unsigned int wmr_numRegsLow = 0;
 2089              		.loc 1 482 0
 2090 001a 0023     		mov	r3, #0
 2091 001c 3B61     		str	r3, [r7, #16]
 483:.\Modbus.c    ****   unsigned int wmr_numBytes = 0;
 2092              		.loc 1 483 0
 2093 001e 0023     		mov	r3, #0
 2094 0020 FB60     		str	r3, [r7, #12]
 484:.\Modbus.c    ****   unsigned int wmr_numBytesTST = 0;
 2095              		.loc 1 484 0
 2096 0022 0023     		mov	r3, #0
 2097 0024 BB60     		str	r3, [r7, #8]
 485:.\Modbus.c    ****   unsigned int valToWrite = 0;
 2098              		.loc 1 485 0
 2099 0026 0023     		mov	r3, #0
 2100 0028 7B60     		str	r3, [r7, #4]
 486:.\Modbus.c    **** //  unsigned int valToWriteHigh = 0;
 487:.\Modbus.c    **** //  unsigned int valToWriteLow = 0;
 488:.\Modbus.c    **** 
 489:.\Modbus.c    ****   unsigned char j = 0;
 2101              		.loc 1 489 0
 2102 002a 3B1C     		mov	r3, r7
 2103 002c 2F33     		add	r3, r3, #47
 2104 002e 0022     		mov	r2, #0
 2105 0030 1A70     		strb	r2, [r3]
 490:.\Modbus.c    ****   unsigned int crc = 0;
 2106              		.loc 1 490 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 47


 2107 0032 0023     		mov	r3, #0
 2108 0034 3B60     		str	r3, [r7]
 491:.\Modbus.c    ****   unsigned int i = 0;
 2109              		.loc 1 491 0
 2110 0036 0023     		mov	r3, #0
 2111 0038 BB62     		str	r3, [r7, #40]
 492:.\Modbus.c    **** 
 493:.\Modbus.c    ****   //Combine address bytes
 494:.\Modbus.c    ****   wmr_Address = received[2];
 2112              		.loc 1 494 0
 2113 003a 504B     		ldr	r3, .L89
 2114 003c 9B78     		ldrb	r3, [r3, #2]
 2115 003e 7B62     		str	r3, [r7, #36]
 495:.\Modbus.c    ****   wmr_Address <<= 8;
 2116              		.loc 1 495 0
 2117 0040 7B6A     		ldr	r3, [r7, #36]
 2118 0042 1B02     		lsl	r3, r3, #8
 2119 0044 7B62     		str	r3, [r7, #36]
 496:.\Modbus.c    ****   //add address high and low bits
 497:.\Modbus.c    ****   wmr_Address |= received[3];
 2120              		.loc 1 497 0
 2121 0046 4D4B     		ldr	r3, .L89
 2122 0048 DB78     		ldrb	r3, [r3, #3]
 2123 004a 7A6A     		ldr	r2, [r7, #36]
 2124 004c 1343     		orr	r3, r2
 2125 004e 7B62     		str	r3, [r7, #36]
 498:.\Modbus.c    ****   wmr_AddressHigh = received[2];
 2126              		.loc 1 498 0
 2127 0050 4A4B     		ldr	r3, .L89
 2128 0052 9B78     		ldrb	r3, [r3, #2]
 2129 0054 3B62     		str	r3, [r7, #32]
 499:.\Modbus.c    ****   wmr_AddressLow = received[3];
 2130              		.loc 1 499 0
 2131 0056 494B     		ldr	r3, .L89
 2132 0058 DB78     		ldrb	r3, [r3, #3]
 2133 005a FB61     		str	r3, [r7, #28]
 500:.\Modbus.c    **** 
 501:.\Modbus.c    **** 
 502:.\Modbus.c    ****   //Combine number of regs bytes
 503:.\Modbus.c    ****   wmr_numRegs = received[4];
 2134              		.loc 1 503 0
 2135 005c 474B     		ldr	r3, .L89
 2136 005e 1B79     		ldrb	r3, [r3, #4]
 2137 0060 BB61     		str	r3, [r7, #24]
 504:.\Modbus.c    ****   wmr_numRegs <<= 8;
 2138              		.loc 1 504 0
 2139 0062 BB69     		ldr	r3, [r7, #24]
 2140 0064 1B02     		lsl	r3, r3, #8
 2141 0066 BB61     		str	r3, [r7, #24]
 505:.\Modbus.c    ****   wmr_numRegs |= received[5];
 2142              		.loc 1 505 0
 2143 0068 444B     		ldr	r3, .L89
 2144 006a 5B79     		ldrb	r3, [r3, #5]
 2145 006c BA69     		ldr	r2, [r7, #24]
 2146 006e 1343     		orr	r3, r2
 2147 0070 BB61     		str	r3, [r7, #24]
 506:.\Modbus.c    ****   wmr_numRegsHigh = received[4];
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 48


 2148              		.loc 1 506 0
 2149 0072 424B     		ldr	r3, .L89
 2150 0074 1B79     		ldrb	r3, [r3, #4]
 2151 0076 7B61     		str	r3, [r7, #20]
 507:.\Modbus.c    ****   wmr_numRegsLow = received[5];
 2152              		.loc 1 507 0
 2153 0078 404B     		ldr	r3, .L89
 2154 007a 5B79     		ldrb	r3, [r3, #5]
 2155 007c 3B61     		str	r3, [r7, #16]
 508:.\Modbus.c    **** 
 509:.\Modbus.c    ****   wmr_numBytes = received[6];
 2156              		.loc 1 509 0
 2157 007e 3F4B     		ldr	r3, .L89
 2158 0080 9B79     		ldrb	r3, [r3, #6]
 2159 0082 FB60     		str	r3, [r7, #12]
 510:.\Modbus.c    **** 
 511:.\Modbus.c    ****   j = 7;
 2160              		.loc 1 511 0
 2161 0084 3B1C     		mov	r3, r7
 2162 0086 2F33     		add	r3, r3, #47
 2163 0088 0722     		mov	r2, #7
 2164 008a 1A70     		strb	r2, [r3]
 512:.\Modbus.c    **** 
 513:.\Modbus.c    ****   //the following lines haven't been tested yet but were suggested
 514:.\Modbus.c    ****   //in a pull request, If you have any problems revert back to wmr_numBytes 
 515:.\Modbus.c    ****   //in the for loop from TST (the lines commented below)
 516:.\Modbus.c    **** 
 517:.\Modbus.c    ****   wmr_numBytesTST = wmr_numBytes /2;   
 2165              		.loc 1 517 0
 2166 008c FB68     		ldr	r3, [r7, #12]
 2167 008e 5B08     		lsr	r3, r3, #1
 2168 0090 BB60     		str	r3, [r7, #8]
 518:.\Modbus.c    **** 
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2169              		.loc 1 519 0
 2170 0092 0023     		mov	r3, #0
 2171 0094 BB62     		str	r3, [r7, #40]
 2172 0096 29E0     		b	.L85
 2173              	.L86:
 520:.\Modbus.c    ****   {
 521:.\Modbus.c    ****     valToWrite = received[j];
 2174              		.loc 1 521 0 discriminator 2
 2175 0098 3B1C     		mov	r3, r7
 2176 009a 2F33     		add	r3, r3, #47
 2177 009c 1B78     		ldrb	r3, [r3]
 2178 009e 374A     		ldr	r2, .L89
 2179 00a0 D35C     		ldrb	r3, [r2, r3]
 2180 00a2 7B60     		str	r3, [r7, #4]
 522:.\Modbus.c    ****     valToWrite <<= 8;
 2181              		.loc 1 522 0 discriminator 2
 2182 00a4 7B68     		ldr	r3, [r7, #4]
 2183 00a6 1B02     		lsl	r3, r3, #8
 2184 00a8 7B60     		str	r3, [r7, #4]
 523:.\Modbus.c    ****     j++;
 2185              		.loc 1 523 0 discriminator 2
 2186 00aa 3B1C     		mov	r3, r7
 2187 00ac 2F33     		add	r3, r3, #47
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 49


 2188 00ae 1A78     		ldrb	r2, [r3]
 2189 00b0 3B1C     		mov	r3, r7
 2190 00b2 2F33     		add	r3, r3, #47
 2191 00b4 0132     		add	r2, r2, #1
 2192 00b6 1A70     		strb	r2, [r3]
 524:.\Modbus.c    ****     valToWrite |= received[j];
 2193              		.loc 1 524 0 discriminator 2
 2194 00b8 3B1C     		mov	r3, r7
 2195 00ba 2F33     		add	r3, r3, #47
 2196 00bc 1B78     		ldrb	r3, [r3]
 2197 00be 2F4A     		ldr	r2, .L89
 2198 00c0 D35C     		ldrb	r3, [r2, r3]
 2199 00c2 7A68     		ldr	r2, [r7, #4]
 2200 00c4 1343     		orr	r3, r2
 2201 00c6 7B60     		str	r3, [r7, #4]
 525:.\Modbus.c    ****     j++;
 2202              		.loc 1 525 0 discriminator 2
 2203 00c8 3B1C     		mov	r3, r7
 2204 00ca 2F33     		add	r3, r3, #47
 2205 00cc 1A78     		ldrb	r2, [r3]
 2206 00ce 3B1C     		mov	r3, r7
 2207 00d0 2F33     		add	r3, r3, #47
 2208 00d2 0132     		add	r2, r2, #1
 2209 00d4 1A70     		strb	r2, [r3]
 526:.\Modbus.c    **** 
 527:.\Modbus.c    ****     holdingReg[wmr_Address + i] = valToWrite;
 2210              		.loc 1 527 0 discriminator 2
 2211 00d6 7A6A     		ldr	r2, [r7, #36]
 2212 00d8 BB6A     		ldr	r3, [r7, #40]
 2213 00da D218     		add	r2, r2, r3
 2214 00dc 7B68     		ldr	r3, [r7, #4]
 2215 00de 99B2     		uxth	r1, r3
 2216 00e0 274B     		ldr	r3, .L89+4
 2217 00e2 5200     		lsl	r2, r2, #1
 2218 00e4 D152     		strh	r1, [r2, r3]
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2219              		.loc 1 519 0 discriminator 2
 2220 00e6 BB6A     		ldr	r3, [r7, #40]
 2221 00e8 0133     		add	r3, r3, #1
 2222 00ea BB62     		str	r3, [r7, #40]
 2223              	.L85:
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2224              		.loc 1 519 0 is_stmt 0 discriminator 1
 2225 00ec BA6A     		ldr	r2, [r7, #40]
 2226 00ee BB68     		ldr	r3, [r7, #8]
 2227 00f0 9A42     		cmp	r2, r3
 2228 00f2 D1D3     		bcc	.L86
 528:.\Modbus.c    ****   }
 529:.\Modbus.c    **** 
 530:.\Modbus.c    ****   //for(i=0;i<wmr_numBytes;i++)
 531:.\Modbus.c    ****   //{
 532:.\Modbus.c    ****   // valToWrite = received[j];
 533:.\Modbus.c    ****   //  valToWrite <<= 8;
 534:.\Modbus.c    ****   //  j++;
 535:.\Modbus.c    ****   //  valToWrite |= received[j];
 536:.\Modbus.c    ****   //  j++;
 537:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 50


 538:.\Modbus.c    ****   //  holdingReg[wmr_Address + i] = valToWrite;
 539:.\Modbus.c    ****   //}
 540:.\Modbus.c    **** 
 541:.\Modbus.c    **** 
 542:.\Modbus.c    ****   response[0] = SlaveAddress;
 2229              		.loc 1 542 0 is_stmt 1
 2230 00f4 234B     		ldr	r3, .L89+8
 2231 00f6 0522     		mov	r2, #5
 2232 00f8 1A70     		strb	r2, [r3]
 543:.\Modbus.c    ****   response[1] = 0x10;
 2233              		.loc 1 543 0
 2234 00fa 224B     		ldr	r3, .L89+8
 2235 00fc 1022     		mov	r2, #16
 2236 00fe 5A70     		strb	r2, [r3, #1]
 544:.\Modbus.c    ****   response[2] = wmr_AddressHigh;
 2237              		.loc 1 544 0
 2238 0100 3B6A     		ldr	r3, [r7, #32]
 2239 0102 DAB2     		uxtb	r2, r3
 2240 0104 1F4B     		ldr	r3, .L89+8
 2241 0106 9A70     		strb	r2, [r3, #2]
 545:.\Modbus.c    ****   response[3] = wmr_AddressLow;
 2242              		.loc 1 545 0
 2243 0108 FB69     		ldr	r3, [r7, #28]
 2244 010a DAB2     		uxtb	r2, r3
 2245 010c 1D4B     		ldr	r3, .L89+8
 2246 010e DA70     		strb	r2, [r3, #3]
 546:.\Modbus.c    ****   response[4] = wmr_numRegsHigh;
 2247              		.loc 1 546 0
 2248 0110 7B69     		ldr	r3, [r7, #20]
 2249 0112 DAB2     		uxtb	r2, r3
 2250 0114 1B4B     		ldr	r3, .L89+8
 2251 0116 1A71     		strb	r2, [r3, #4]
 547:.\Modbus.c    ****   response[5] = wmr_numRegsLow;
 2252              		.loc 1 547 0
 2253 0118 3B69     		ldr	r3, [r7, #16]
 2254 011a DAB2     		uxtb	r2, r3
 2255 011c 194B     		ldr	r3, .L89+8
 2256 011e 5A71     		strb	r2, [r3, #5]
 548:.\Modbus.c    **** 
 549:.\Modbus.c    ****   crc = generateCRC(8);
 2257              		.loc 1 549 0
 2258 0120 0820     		mov	r0, #8
 2259 0122 FFF7FEFF 		bl	generateCRC
 2260 0126 031C     		mov	r3, r0
 2261 0128 3B60     		str	r3, [r7]
 550:.\Modbus.c    **** 
 551:.\Modbus.c    ****   response[6] = crc >> 8;
 2262              		.loc 1 551 0
 2263 012a 3B68     		ldr	r3, [r7]
 2264 012c 1B0A     		lsr	r3, r3, #8
 2265 012e DAB2     		uxtb	r2, r3
 2266 0130 144B     		ldr	r3, .L89+8
 2267 0132 9A71     		strb	r2, [r3, #6]
 552:.\Modbus.c    ****   response[7] = crc;
 2268              		.loc 1 552 0
 2269 0134 3B68     		ldr	r3, [r7]
 2270 0136 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 51


 2271 0138 124B     		ldr	r3, .L89+8
 2272 013a DA71     		strb	r2, [r3, #7]
 553:.\Modbus.c    **** 
 554:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2273              		.loc 1 554 0
 2274 013c 0120     		mov	r0, #1
 2275 013e FFF7FEFF 		bl	writeEnable_Write
 555:.\Modbus.c    **** 
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2276              		.loc 1 556 0
 2277 0142 0023     		mov	r3, #0
 2278 0144 BB62     		str	r3, [r7, #40]
 2279 0146 09E0     		b	.L87
 2280              	.L88:
 557:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2281              		.loc 1 557 0 discriminator 2
 2282 0148 0E4A     		ldr	r2, .L89+8
 2283 014a BB6A     		ldr	r3, [r7, #40]
 2284 014c D318     		add	r3, r2, r3
 2285 014e 1B78     		ldrb	r3, [r3]
 2286 0150 181C     		mov	r0, r3
 2287 0152 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2288              		.loc 1 556 0 discriminator 2
 2289 0156 BB6A     		ldr	r3, [r7, #40]
 2290 0158 0133     		add	r3, r3, #1
 2291 015a BB62     		str	r3, [r7, #40]
 2292              	.L87:
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2293              		.loc 1 556 0 is_stmt 0 discriminator 1
 2294 015c BB6A     		ldr	r3, [r7, #40]
 2295 015e 092B     		cmp	r3, #9
 2296 0160 F2D1     		bne	.L88
 558:.\Modbus.c    ****   }
 559:.\Modbus.c    ****   responseFinished(9);
 2297              		.loc 1 559 0 is_stmt 1
 2298 0162 0920     		mov	r0, #9
 2299 0164 FFF7FEFF 		bl	responseFinished
 560:.\Modbus.c    ****   i=0;  
 2300              		.loc 1 560 0
 2301 0168 0023     		mov	r3, #0
 2302 016a BB62     		str	r3, [r7, #40]
 561:.\Modbus.c    **** 
 562:.\Modbus.c    ****   j=0;
 2303              		.loc 1 562 0
 2304 016c 3B1C     		mov	r3, r7
 2305 016e 2F33     		add	r3, r3, #47
 2306 0170 0022     		mov	r2, #0
 2307 0172 1A70     		strb	r2, [r3]
 563:.\Modbus.c    ****   
 564:.\Modbus.c    **** }
 2308              		.loc 1 564 0
 2309 0174 BD46     		mov	sp, r7
 2310 0176 0CB0     		add	sp, sp, #48
 2311              		@ sp needed
 2312 0178 80BD     		pop	{r7, pc}
 2313              	.L90:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 52


 2314 017a C046     		.align	2
 2315              	.L89:
 2316 017c 00000000 		.word	received
 2317 0180 00000000 		.word	holdingReg
 2318 0184 00000000 		.word	response
 2319              		.cfi_endproc
 2320              	.LFE41:
 2321              		.size	writeMultipleRegs, .-writeMultipleRegs
 2322              		.section	.text.writeCoil,"ax",%progbits
 2323              		.align	2
 2324              		.global	writeCoil
 2325              		.code	16
 2326              		.thumb_func
 2327              		.type	writeCoil, %function
 2328              	writeCoil:
 2329              	.LFB42:
 565:.\Modbus.c    **** 
 566:.\Modbus.c    **** 
 567:.\Modbus.c    **** void writeCoil(void)
 568:.\Modbus.c    **** {
 2330              		.loc 1 568 0
 2331              		.cfi_startproc
 2332 0000 80B5     		push	{r7, lr}
 2333              		.cfi_def_cfa_offset 8
 2334              		.cfi_offset 7, -8
 2335              		.cfi_offset 14, -4
 2336 0002 88B0     		sub	sp, sp, #32
 2337              		.cfi_def_cfa_offset 40
 2338 0004 00AF     		add	r7, sp, #0
 2339              		.cfi_def_cfa_register 7
 569:.\Modbus.c    **** /******************************************************************************/
 570:.\Modbus.c    **** /* Writes to a coil and then responds                                         */
 571:.\Modbus.c    **** /******************************************************************************/
 572:.\Modbus.c    ****   unsigned int wc_AddressLow = 0;
 2340              		.loc 1 572 0
 2341 0006 0023     		mov	r3, #0
 2342 0008 BB61     		str	r3, [r7, #24]
 573:.\Modbus.c    ****   unsigned int wc_AddressHigh = 0;
 2343              		.loc 1 573 0
 2344 000a 0023     		mov	r3, #0
 2345 000c 7B61     		str	r3, [r7, #20]
 574:.\Modbus.c    ****   unsigned int wc_Address = 0;
 2346              		.loc 1 574 0
 2347 000e 0023     		mov	r3, #0
 2348 0010 3B61     		str	r3, [r7, #16]
 575:.\Modbus.c    **** 
 576:.\Modbus.c    ****   unsigned int wc_valToWrite = 0;
 2349              		.loc 1 576 0
 2350 0012 0023     		mov	r3, #0
 2351 0014 FB60     		str	r3, [r7, #12]
 577:.\Modbus.c    ****   unsigned int wc_valToWriteLow = 0;
 2352              		.loc 1 577 0
 2353 0016 0023     		mov	r3, #0
 2354 0018 BB60     		str	r3, [r7, #8]
 578:.\Modbus.c    ****   unsigned int wc_valToWriteHigh = 0;
 2355              		.loc 1 578 0
 2356 001a 0023     		mov	r3, #0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 53


 2357 001c 7B60     		str	r3, [r7, #4]
 579:.\Modbus.c    ****   int i = 0;
 2358              		.loc 1 579 0
 2359 001e 0023     		mov	r3, #0
 2360 0020 FB61     		str	r3, [r7, #28]
 580:.\Modbus.c    ****   unsigned int crc = 0;
 2361              		.loc 1 580 0
 2362 0022 0023     		mov	r3, #0
 2363 0024 3B60     		str	r3, [r7]
 581:.\Modbus.c    **** 
 582:.\Modbus.c    ****   //Combine address bytes
 583:.\Modbus.c    ****   wc_Address = received[2];
 2364              		.loc 1 583 0
 2365 0026 374B     		ldr	r3, .L96
 2366 0028 9B78     		ldrb	r3, [r3, #2]
 2367 002a 3B61     		str	r3, [r7, #16]
 584:.\Modbus.c    ****   wc_Address <<= 8;
 2368              		.loc 1 584 0
 2369 002c 3B69     		ldr	r3, [r7, #16]
 2370 002e 1B02     		lsl	r3, r3, #8
 2371 0030 3B61     		str	r3, [r7, #16]
 585:.\Modbus.c    ****   wc_Address |= received[3];
 2372              		.loc 1 585 0
 2373 0032 344B     		ldr	r3, .L96
 2374 0034 DB78     		ldrb	r3, [r3, #3]
 2375 0036 3A69     		ldr	r2, [r7, #16]
 2376 0038 1343     		orr	r3, r2
 2377 003a 3B61     		str	r3, [r7, #16]
 586:.\Modbus.c    **** 
 587:.\Modbus.c    ****   wc_AddressLow = received[3]; //useful to store
 2378              		.loc 1 587 0
 2379 003c 314B     		ldr	r3, .L96
 2380 003e DB78     		ldrb	r3, [r3, #3]
 2381 0040 BB61     		str	r3, [r7, #24]
 588:.\Modbus.c    ****   wc_AddressHigh = received[2];
 2382              		.loc 1 588 0
 2383 0042 304B     		ldr	r3, .L96
 2384 0044 9B78     		ldrb	r3, [r3, #2]
 2385 0046 7B61     		str	r3, [r7, #20]
 589:.\Modbus.c    **** 
 590:.\Modbus.c    ****   //Combine value to write regs
 591:.\Modbus.c    ****   wc_valToWrite = received[4];
 2386              		.loc 1 591 0
 2387 0048 2E4B     		ldr	r3, .L96
 2388 004a 1B79     		ldrb	r3, [r3, #4]
 2389 004c FB60     		str	r3, [r7, #12]
 592:.\Modbus.c    ****   wc_valToWrite <<= 8;
 2390              		.loc 1 592 0
 2391 004e FB68     		ldr	r3, [r7, #12]
 2392 0050 1B02     		lsl	r3, r3, #8
 2393 0052 FB60     		str	r3, [r7, #12]
 593:.\Modbus.c    ****   wc_valToWrite |= received[5];
 2394              		.loc 1 593 0
 2395 0054 2B4B     		ldr	r3, .L96
 2396 0056 5B79     		ldrb	r3, [r3, #5]
 2397 0058 FA68     		ldr	r2, [r7, #12]
 2398 005a 1343     		orr	r3, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 54


 2399 005c FB60     		str	r3, [r7, #12]
 594:.\Modbus.c    **** 
 595:.\Modbus.c    ****   wc_valToWriteLow = received[5];
 2400              		.loc 1 595 0
 2401 005e 294B     		ldr	r3, .L96
 2402 0060 5B79     		ldrb	r3, [r3, #5]
 2403 0062 BB60     		str	r3, [r7, #8]
 596:.\Modbus.c    ****   wc_valToWriteHigh = received[4];
 2404              		.loc 1 596 0
 2405 0064 274B     		ldr	r3, .L96
 2406 0066 1B79     		ldrb	r3, [r3, #4]
 2407 0068 7B60     		str	r3, [r7, #4]
 597:.\Modbus.c    **** 
 598:.\Modbus.c    ****   if(wc_valToWrite){
 2408              		.loc 1 598 0
 2409 006a FB68     		ldr	r3, [r7, #12]
 2410 006c 002B     		cmp	r3, #0
 2411 006e 05D0     		beq	.L92
 599:.\Modbus.c    ****     coils[wc_Address] = 0xFF;
 2412              		.loc 1 599 0
 2413 0070 254A     		ldr	r2, .L96+4
 2414 0072 3B69     		ldr	r3, [r7, #16]
 2415 0074 D318     		add	r3, r2, r3
 2416 0076 FF22     		mov	r2, #255
 2417 0078 1A70     		strb	r2, [r3]
 2418 007a 04E0     		b	.L93
 2419              	.L92:
 600:.\Modbus.c    ****   }
 601:.\Modbus.c    ****   else{
 602:.\Modbus.c    ****     coils[wc_Address] = 0x00;
 2420              		.loc 1 602 0
 2421 007c 224A     		ldr	r2, .L96+4
 2422 007e 3B69     		ldr	r3, [r7, #16]
 2423 0080 D318     		add	r3, r2, r3
 2424 0082 0022     		mov	r2, #0
 2425 0084 1A70     		strb	r2, [r3]
 2426              	.L93:
 603:.\Modbus.c    ****   }
 604:.\Modbus.c    **** 
 605:.\Modbus.c    ****   response[0] = SlaveAddress;
 2427              		.loc 1 605 0
 2428 0086 214B     		ldr	r3, .L96+8
 2429 0088 0522     		mov	r2, #5
 2430 008a 1A70     		strb	r2, [r3]
 606:.\Modbus.c    ****   response[1] = 0x05;
 2431              		.loc 1 606 0
 2432 008c 1F4B     		ldr	r3, .L96+8
 2433 008e 0522     		mov	r2, #5
 2434 0090 5A70     		strb	r2, [r3, #1]
 607:.\Modbus.c    ****   response[3] = wc_AddressLow; //2 bytes per reg
 2435              		.loc 1 607 0
 2436 0092 BB69     		ldr	r3, [r7, #24]
 2437 0094 DAB2     		uxtb	r2, r3
 2438 0096 1D4B     		ldr	r3, .L96+8
 2439 0098 DA70     		strb	r2, [r3, #3]
 608:.\Modbus.c    ****   response[2] = wc_AddressHigh;
 2440              		.loc 1 608 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 55


 2441 009a 7B69     		ldr	r3, [r7, #20]
 2442 009c DAB2     		uxtb	r2, r3
 2443 009e 1B4B     		ldr	r3, .L96+8
 2444 00a0 9A70     		strb	r2, [r3, #2]
 609:.\Modbus.c    **** 
 610:.\Modbus.c    **** //TO DO CHECK VALUE IS ACTUALLY WRITTEN//
 611:.\Modbus.c    ****   response[4] = wc_valToWriteHigh;
 2445              		.loc 1 611 0
 2446 00a2 7B68     		ldr	r3, [r7, #4]
 2447 00a4 DAB2     		uxtb	r2, r3
 2448 00a6 194B     		ldr	r3, .L96+8
 2449 00a8 1A71     		strb	r2, [r3, #4]
 612:.\Modbus.c    ****   response[5] = wc_valToWriteLow;
 2450              		.loc 1 612 0
 2451 00aa BB68     		ldr	r3, [r7, #8]
 2452 00ac DAB2     		uxtb	r2, r3
 2453 00ae 174B     		ldr	r3, .L96+8
 2454 00b0 5A71     		strb	r2, [r3, #5]
 613:.\Modbus.c    **** 
 614:.\Modbus.c    ****   crc = generateCRC(8);
 2455              		.loc 1 614 0
 2456 00b2 0820     		mov	r0, #8
 2457 00b4 FFF7FEFF 		bl	generateCRC
 2458 00b8 031C     		mov	r3, r0
 2459 00ba 3B60     		str	r3, [r7]
 615:.\Modbus.c    **** 
 616:.\Modbus.c    ****   response[6] = crc >> 8;
 2460              		.loc 1 616 0
 2461 00bc 3B68     		ldr	r3, [r7]
 2462 00be 1B0A     		lsr	r3, r3, #8
 2463 00c0 DAB2     		uxtb	r2, r3
 2464 00c2 124B     		ldr	r3, .L96+8
 2465 00c4 9A71     		strb	r2, [r3, #6]
 617:.\Modbus.c    ****   response[7] = crc;
 2466              		.loc 1 617 0
 2467 00c6 3B68     		ldr	r3, [r7]
 2468 00c8 DAB2     		uxtb	r2, r3
 2469 00ca 104B     		ldr	r3, .L96+8
 2470 00cc DA71     		strb	r2, [r3, #7]
 618:.\Modbus.c    **** 
 619:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2471              		.loc 1 619 0
 2472 00ce 0120     		mov	r0, #1
 2473 00d0 FFF7FEFF 		bl	writeEnable_Write
 620:.\Modbus.c    **** 
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2474              		.loc 1 621 0
 2475 00d4 0023     		mov	r3, #0
 2476 00d6 FB61     		str	r3, [r7, #28]
 2477 00d8 09E0     		b	.L94
 2478              	.L95:
 622:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2479              		.loc 1 622 0 discriminator 2
 2480 00da 0C4A     		ldr	r2, .L96+8
 2481 00dc FB69     		ldr	r3, [r7, #28]
 2482 00de D318     		add	r3, r2, r3
 2483 00e0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 56


 2484 00e2 181C     		mov	r0, r3
 2485 00e4 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2486              		.loc 1 621 0 discriminator 2
 2487 00e8 FB69     		ldr	r3, [r7, #28]
 2488 00ea 0133     		add	r3, r3, #1
 2489 00ec FB61     		str	r3, [r7, #28]
 2490              	.L94:
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2491              		.loc 1 621 0 is_stmt 0 discriminator 1
 2492 00ee FB69     		ldr	r3, [r7, #28]
 2493 00f0 092B     		cmp	r3, #9
 2494 00f2 F2D1     		bne	.L95
 623:.\Modbus.c    ****   }
 624:.\Modbus.c    ****   responseFinished(10);
 2495              		.loc 1 624 0 is_stmt 1
 2496 00f4 0A20     		mov	r0, #10
 2497 00f6 FFF7FEFF 		bl	responseFinished
 625:.\Modbus.c    ****   i=0;  
 2498              		.loc 1 625 0
 2499 00fa 0023     		mov	r3, #0
 2500 00fc FB61     		str	r3, [r7, #28]
 626:.\Modbus.c    **** }
 2501              		.loc 1 626 0
 2502 00fe BD46     		mov	sp, r7
 2503 0100 08B0     		add	sp, sp, #32
 2504              		@ sp needed
 2505 0102 80BD     		pop	{r7, pc}
 2506              	.L97:
 2507              		.align	2
 2508              	.L96:
 2509 0104 00000000 		.word	received
 2510 0108 00000000 		.word	coils
 2511 010c 00000000 		.word	response
 2512              		.cfi_endproc
 2513              	.LFE42:
 2514              		.size	writeCoil, .-writeCoil
 2515              		.section	.text.writeMultipleCoils,"ax",%progbits
 2516              		.align	2
 2517              		.global	writeMultipleCoils
 2518              		.code	16
 2519              		.thumb_func
 2520              		.type	writeMultipleCoils, %function
 2521              	writeMultipleCoils:
 2522              	.LFB43:
 627:.\Modbus.c    **** 
 628:.\Modbus.c    **** void writeMultipleCoils(void)
 629:.\Modbus.c    **** {
 2523              		.loc 1 629 0
 2524              		.cfi_startproc
 2525 0000 80B5     		push	{r7, lr}
 2526              		.cfi_def_cfa_offset 8
 2527              		.cfi_offset 7, -8
 2528              		.cfi_offset 14, -4
 2529 0002 8AB0     		sub	sp, sp, #40
 2530              		.cfi_def_cfa_offset 48
 2531 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 57


 2532              		.cfi_def_cfa_register 7
 630:.\Modbus.c    **** /******************************************************************************/
 631:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 632:.\Modbus.c    **** /******************************************************************************/
 633:.\Modbus.c    ****   unsigned int wmc_Address = 0;
 2533              		.loc 1 633 0
 2534 0006 0023     		mov	r3, #0
 2535 0008 FB61     		str	r3, [r7, #28]
 634:.\Modbus.c    ****   unsigned int wmc_AddressHigh = 0;
 2536              		.loc 1 634 0
 2537 000a 0023     		mov	r3, #0
 2538 000c BB61     		str	r3, [r7, #24]
 635:.\Modbus.c    ****   unsigned int wmc_AddressLow = 0;
 2539              		.loc 1 635 0
 2540 000e 0023     		mov	r3, #0
 2541 0010 7B61     		str	r3, [r7, #20]
 636:.\Modbus.c    ****   unsigned int wmc_numCoils = 0;
 2542              		.loc 1 636 0
 2543 0012 0023     		mov	r3, #0
 2544 0014 3B61     		str	r3, [r7, #16]
 637:.\Modbus.c    ****   unsigned int wmc_numCoilsHigh = 0;
 2545              		.loc 1 637 0
 2546 0016 0023     		mov	r3, #0
 2547 0018 FB60     		str	r3, [r7, #12]
 638:.\Modbus.c    ****   unsigned int wmc_numCoilsLow = 0;
 2548              		.loc 1 638 0
 2549 001a 0023     		mov	r3, #0
 2550 001c BB60     		str	r3, [r7, #8]
 639:.\Modbus.c    ****  // unsigned int wmc_numBytes;
 640:.\Modbus.c    ****   unsigned int crc = 0;
 2551              		.loc 1 640 0
 2552 001e 0023     		mov	r3, #0
 2553 0020 7B60     		str	r3, [r7, #4]
 641:.\Modbus.c    **** 
 642:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 2554              		.loc 1 642 0
 2555 0022 3B1C     		mov	r3, r7
 2556 0024 2733     		add	r3, r3, #39
 2557 0026 0022     		mov	r2, #0
 2558 0028 1A70     		strb	r2, [r3]
 643:.\Modbus.c    ****   unsigned char remainder = 0;
 2559              		.loc 1 643 0
 2560 002a FB1C     		add	r3, r7, #3
 2561 002c 0022     		mov	r2, #0
 2562 002e 1A70     		strb	r2, [r3]
 644:.\Modbus.c    **** //  unsigned char lsb = 0;
 645:.\Modbus.c    ****   unsigned char i,j,l = 0;
 2563              		.loc 1 645 0
 2564 0030 3B1C     		mov	r3, r7
 2565 0032 2433     		add	r3, r3, #36
 2566 0034 0022     		mov	r2, #0
 2567 0036 1A70     		strb	r2, [r3]
 646:.\Modbus.c    ****   //unsigned char k;
 647:.\Modbus.c    **** 
 648:.\Modbus.c    ****   //Combine address bytes
 649:.\Modbus.c    ****   wmc_Address = received[2];
 2568              		.loc 1 649 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 58


 2569 0038 874B     		ldr	r3, .L114
 2570 003a 9B78     		ldrb	r3, [r3, #2]
 2571 003c FB61     		str	r3, [r7, #28]
 650:.\Modbus.c    ****   wmc_AddressHigh = received[2];
 2572              		.loc 1 650 0
 2573 003e 864B     		ldr	r3, .L114
 2574 0040 9B78     		ldrb	r3, [r3, #2]
 2575 0042 BB61     		str	r3, [r7, #24]
 651:.\Modbus.c    ****   wmc_Address <<=8;
 2576              		.loc 1 651 0
 2577 0044 FB69     		ldr	r3, [r7, #28]
 2578 0046 1B02     		lsl	r3, r3, #8
 2579 0048 FB61     		str	r3, [r7, #28]
 652:.\Modbus.c    ****   wmc_Address |= received[3];
 2580              		.loc 1 652 0
 2581 004a 834B     		ldr	r3, .L114
 2582 004c DB78     		ldrb	r3, [r3, #3]
 2583 004e FA69     		ldr	r2, [r7, #28]
 2584 0050 1343     		orr	r3, r2
 2585 0052 FB61     		str	r3, [r7, #28]
 653:.\Modbus.c    ****   wmc_AddressLow = received[3];
 2586              		.loc 1 653 0
 2587 0054 804B     		ldr	r3, .L114
 2588 0056 DB78     		ldrb	r3, [r3, #3]
 2589 0058 7B61     		str	r3, [r7, #20]
 654:.\Modbus.c    **** 
 655:.\Modbus.c    ****   //Combine number of coils bytes
 656:.\Modbus.c    ****   wmc_numCoils = received[4];
 2590              		.loc 1 656 0
 2591 005a 7F4B     		ldr	r3, .L114
 2592 005c 1B79     		ldrb	r3, [r3, #4]
 2593 005e 3B61     		str	r3, [r7, #16]
 657:.\Modbus.c    ****   wmc_numCoilsHigh = received[4];
 2594              		.loc 1 657 0
 2595 0060 7D4B     		ldr	r3, .L114
 2596 0062 1B79     		ldrb	r3, [r3, #4]
 2597 0064 FB60     		str	r3, [r7, #12]
 658:.\Modbus.c    ****   wmc_numCoils <<= 8;
 2598              		.loc 1 658 0
 2599 0066 3B69     		ldr	r3, [r7, #16]
 2600 0068 1B02     		lsl	r3, r3, #8
 2601 006a 3B61     		str	r3, [r7, #16]
 659:.\Modbus.c    ****   wmc_numCoils |= received[5];
 2602              		.loc 1 659 0
 2603 006c 7A4B     		ldr	r3, .L114
 2604 006e 5B79     		ldrb	r3, [r3, #5]
 2605 0070 3A69     		ldr	r2, [r7, #16]
 2606 0072 1343     		orr	r3, r2
 2607 0074 3B61     		str	r3, [r7, #16]
 660:.\Modbus.c    ****   wmc_numCoilsLow = received[5];
 2608              		.loc 1 660 0
 2609 0076 784B     		ldr	r3, .L114
 2610 0078 5B79     		ldrb	r3, [r3, #5]
 2611 007a BB60     		str	r3, [r7, #8]
 661:.\Modbus.c    **** 
 662:.\Modbus.c    **** //  wmc_numBytes = received[6];
 663:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 59


 664:.\Modbus.c    ****   response[0] = SlaveAddress;
 2612              		.loc 1 664 0
 2613 007c 774B     		ldr	r3, .L114+4
 2614 007e 0522     		mov	r2, #5
 2615 0080 1A70     		strb	r2, [r3]
 665:.\Modbus.c    ****   response[1] = 0x0F;
 2616              		.loc 1 665 0
 2617 0082 764B     		ldr	r3, .L114+4
 2618 0084 0F22     		mov	r2, #15
 2619 0086 5A70     		strb	r2, [r3, #1]
 666:.\Modbus.c    **** 
 667:.\Modbus.c    ****   howManyBytes = wmc_numCoils/8;
 2620              		.loc 1 667 0
 2621 0088 3B69     		ldr	r3, [r7, #16]
 2622 008a DA08     		lsr	r2, r3, #3
 2623 008c 3B1C     		mov	r3, r7
 2624 008e 2733     		add	r3, r3, #39
 2625 0090 1A70     		strb	r2, [r3]
 668:.\Modbus.c    ****   remainder = wmc_numCoils % 8;
 2626              		.loc 1 668 0
 2627 0092 3B69     		ldr	r3, [r7, #16]
 2628 0094 D9B2     		uxtb	r1, r3
 2629 0096 FB1C     		add	r3, r7, #3
 2630 0098 0722     		mov	r2, #7
 2631 009a 0A40     		and	r2, r1
 2632 009c 1A70     		strb	r2, [r3]
 669:.\Modbus.c    **** 
 670:.\Modbus.c    ****   if(remainder){
 2633              		.loc 1 670 0
 2634 009e FB1C     		add	r3, r7, #3
 2635 00a0 1B78     		ldrb	r3, [r3]
 2636 00a2 002B     		cmp	r3, #0
 2637 00a4 06D0     		beq	.L99
 671:.\Modbus.c    ****     howManyBytes += 1;
 2638              		.loc 1 671 0
 2639 00a6 3B1C     		mov	r3, r7
 2640 00a8 2733     		add	r3, r3, #39
 2641 00aa 3A1C     		mov	r2, r7
 2642 00ac 2732     		add	r2, r2, #39
 2643 00ae 1278     		ldrb	r2, [r2]
 2644 00b0 0132     		add	r2, r2, #1
 2645 00b2 1A70     		strb	r2, [r3]
 2646              	.L99:
 672:.\Modbus.c    ****   }
 673:.\Modbus.c    ****   response[2] = wmc_AddressHigh;
 2647              		.loc 1 673 0
 2648 00b4 BB69     		ldr	r3, [r7, #24]
 2649 00b6 DAB2     		uxtb	r2, r3
 2650 00b8 684B     		ldr	r3, .L114+4
 2651 00ba 9A70     		strb	r2, [r3, #2]
 674:.\Modbus.c    ****   response[3] = wmc_AddressLow;
 2652              		.loc 1 674 0
 2653 00bc 7B69     		ldr	r3, [r7, #20]
 2654 00be DAB2     		uxtb	r2, r3
 2655 00c0 664B     		ldr	r3, .L114+4
 2656 00c2 DA70     		strb	r2, [r3, #3]
 675:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 60


 676:.\Modbus.c    ****   response[4] = wmc_numCoilsHigh;
 2657              		.loc 1 676 0
 2658 00c4 FB68     		ldr	r3, [r7, #12]
 2659 00c6 DAB2     		uxtb	r2, r3
 2660 00c8 644B     		ldr	r3, .L114+4
 2661 00ca 1A71     		strb	r2, [r3, #4]
 677:.\Modbus.c    ****   response[5] = wmc_numCoilsLow;
 2662              		.loc 1 677 0
 2663 00cc BB68     		ldr	r3, [r7, #8]
 2664 00ce DAB2     		uxtb	r2, r3
 2665 00d0 624B     		ldr	r3, .L114+4
 2666 00d2 5A71     		strb	r2, [r3, #5]
 678:.\Modbus.c    **** 
 679:.\Modbus.c    ****   l = wmc_Address;
 2667              		.loc 1 679 0
 2668 00d4 3B1C     		mov	r3, r7
 2669 00d6 2433     		add	r3, r3, #36
 2670 00d8 FA69     		ldr	r2, [r7, #28]
 2671 00da 1A70     		strb	r2, [r3]
 680:.\Modbus.c    ****   //k = 3; //start at response 3
 681:.\Modbus.c    **** 
 682:.\Modbus.c    **** //  unsigned char bitSet;
 683:.\Modbus.c    ****   unsigned char valToWrite;
 684:.\Modbus.c    ****   unsigned char q = 7; //count through vals to write
 2672              		.loc 1 684 0
 2673 00dc 3B1C     		mov	r3, r7
 2674 00de 2333     		add	r3, r3, #35
 2675 00e0 0722     		mov	r2, #7
 2676 00e2 1A70     		strb	r2, [r3]
 685:.\Modbus.c    ****   
 686:.\Modbus.c    **** 
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2677              		.loc 1 687 0
 2678 00e4 3B1C     		mov	r3, r7
 2679 00e6 2633     		add	r3, r3, #38
 2680 00e8 3A1C     		mov	r2, r7
 2681 00ea 2732     		add	r2, r2, #39
 2682 00ec 1278     		ldrb	r2, [r2]
 2683 00ee 1A70     		strb	r2, [r3]
 2684 00f0 78E0     		b	.L100
 2685              	.L111:
 688:.\Modbus.c    ****     valToWrite = received[q];
 2686              		.loc 1 688 0
 2687 00f2 3B1C     		mov	r3, r7
 2688 00f4 2333     		add	r3, r3, #35
 2689 00f6 1A78     		ldrb	r2, [r3]
 2690 00f8 BB1C     		add	r3, r7, #2
 2691 00fa 5749     		ldr	r1, .L114
 2692 00fc 8A5C     		ldrb	r2, [r1, r2]
 2693 00fe 1A70     		strb	r2, [r3]
 689:.\Modbus.c    ****     q++;
 2694              		.loc 1 689 0
 2695 0100 3B1C     		mov	r3, r7
 2696 0102 2333     		add	r3, r3, #35
 2697 0104 1A78     		ldrb	r2, [r3]
 2698 0106 3B1C     		mov	r3, r7
 2699 0108 2333     		add	r3, r3, #35
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 61


 2700 010a 0132     		add	r2, r2, #1
 2701 010c 1A70     		strb	r2, [r3]
 690:.\Modbus.c    ****     if(i>1){
 2702              		.loc 1 690 0
 2703 010e 3B1C     		mov	r3, r7
 2704 0110 2633     		add	r3, r3, #38
 2705 0112 1B78     		ldrb	r3, [r3]
 2706 0114 012B     		cmp	r3, #1
 2707 0116 2ED9     		bls	.L101
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2708              		.loc 1 691 0
 2709 0118 3B1C     		mov	r3, r7
 2710 011a 2533     		add	r3, r3, #37
 2711 011c 0022     		mov	r2, #0
 2712 011e 1A70     		strb	r2, [r3]
 2713 0120 23E0     		b	.L102
 2714              	.L105:
 692:.\Modbus.c    **** 	if(CHECK_BIT(valToWrite, j)){
 2715              		.loc 1 692 0
 2716 0122 BB1C     		add	r3, r7, #2
 2717 0124 1A78     		ldrb	r2, [r3]
 2718 0126 3B1C     		mov	r3, r7
 2719 0128 2533     		add	r3, r3, #37
 2720 012a 1B78     		ldrb	r3, [r3]
 2721 012c 1A41     		asr	r2, r2, r3
 2722 012e 0123     		mov	r3, #1
 2723 0130 1340     		and	r3, r2
 2724 0132 06D0     		beq	.L103
 693:.\Modbus.c    ****           coils[l] = 1;
 2725              		.loc 1 693 0
 2726 0134 3B1C     		mov	r3, r7
 2727 0136 2433     		add	r3, r3, #36
 2728 0138 1B78     		ldrb	r3, [r3]
 2729 013a 494A     		ldr	r2, .L114+8
 2730 013c 0121     		mov	r1, #1
 2731 013e D154     		strb	r1, [r2, r3]
 2732 0140 05E0     		b	.L104
 2733              	.L103:
 694:.\Modbus.c    **** 	}
 695:.\Modbus.c    **** 	else{
 696:.\Modbus.c    ****           coils[l] = 0; //need to sort out remainder stuff
 2734              		.loc 1 696 0
 2735 0142 3B1C     		mov	r3, r7
 2736 0144 2433     		add	r3, r3, #36
 2737 0146 1B78     		ldrb	r3, [r3]
 2738 0148 454A     		ldr	r2, .L114+8
 2739 014a 0021     		mov	r1, #0
 2740 014c D154     		strb	r1, [r2, r3]
 2741              	.L104:
 697:.\Modbus.c    **** 
 698:.\Modbus.c    **** 	}
 699:.\Modbus.c    **** 	l++;
 2742              		.loc 1 699 0
 2743 014e 3B1C     		mov	r3, r7
 2744 0150 2433     		add	r3, r3, #36
 2745 0152 1A78     		ldrb	r2, [r3]
 2746 0154 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 62


 2747 0156 2433     		add	r3, r3, #36
 2748 0158 0132     		add	r2, r2, #1
 2749 015a 1A70     		strb	r2, [r3]
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2750              		.loc 1 691 0
 2751 015c 3B1C     		mov	r3, r7
 2752 015e 2533     		add	r3, r3, #37
 2753 0160 1A78     		ldrb	r2, [r3]
 2754 0162 3B1C     		mov	r3, r7
 2755 0164 2533     		add	r3, r3, #37
 2756 0166 0132     		add	r2, r2, #1
 2757 0168 1A70     		strb	r2, [r3]
 2758              	.L102:
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2759              		.loc 1 691 0 is_stmt 0 discriminator 1
 2760 016a 3B1C     		mov	r3, r7
 2761 016c 2533     		add	r3, r3, #37
 2762 016e 1B78     		ldrb	r3, [r3]
 2763 0170 082B     		cmp	r3, #8
 2764 0172 D6D1     		bne	.L105
 2765 0174 2FE0     		b	.L106
 2766              	.L101:
 700:.\Modbus.c    ****       }
 701:.\Modbus.c    ****     }
 702:.\Modbus.c    ****     else{
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2767              		.loc 1 703 0 is_stmt 1
 2768 0176 3B1C     		mov	r3, r7
 2769 0178 2533     		add	r3, r3, #37
 2770 017a 0022     		mov	r2, #0
 2771 017c 1A70     		strb	r2, [r3]
 2772 017e 23E0     		b	.L107
 2773              	.L110:
 704:.\Modbus.c    ****       if(CHECK_BIT(valToWrite, j)){
 2774              		.loc 1 704 0
 2775 0180 BB1C     		add	r3, r7, #2
 2776 0182 1A78     		ldrb	r2, [r3]
 2777 0184 3B1C     		mov	r3, r7
 2778 0186 2533     		add	r3, r3, #37
 2779 0188 1B78     		ldrb	r3, [r3]
 2780 018a 1A41     		asr	r2, r2, r3
 2781 018c 0123     		mov	r3, #1
 2782 018e 1340     		and	r3, r2
 2783 0190 06D0     		beq	.L108
 705:.\Modbus.c    ****           coils[l] = 1;
 2784              		.loc 1 705 0
 2785 0192 3B1C     		mov	r3, r7
 2786 0194 2433     		add	r3, r3, #36
 2787 0196 1B78     		ldrb	r3, [r3]
 2788 0198 314A     		ldr	r2, .L114+8
 2789 019a 0121     		mov	r1, #1
 2790 019c D154     		strb	r1, [r2, r3]
 2791 019e 05E0     		b	.L109
 2792              	.L108:
 706:.\Modbus.c    ****       }
 707:.\Modbus.c    ****       else{
 708:.\Modbus.c    ****         coils[l] = 0;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 63


 2793              		.loc 1 708 0
 2794 01a0 3B1C     		mov	r3, r7
 2795 01a2 2433     		add	r3, r3, #36
 2796 01a4 1B78     		ldrb	r3, [r3]
 2797 01a6 2E4A     		ldr	r2, .L114+8
 2798 01a8 0021     		mov	r1, #0
 2799 01aa D154     		strb	r1, [r2, r3]
 2800              	.L109:
 709:.\Modbus.c    ****       }
 710:.\Modbus.c    ****       l++;
 2801              		.loc 1 710 0
 2802 01ac 3B1C     		mov	r3, r7
 2803 01ae 2433     		add	r3, r3, #36
 2804 01b0 1A78     		ldrb	r2, [r3]
 2805 01b2 3B1C     		mov	r3, r7
 2806 01b4 2433     		add	r3, r3, #36
 2807 01b6 0132     		add	r2, r2, #1
 2808 01b8 1A70     		strb	r2, [r3]
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2809              		.loc 1 703 0
 2810 01ba 3B1C     		mov	r3, r7
 2811 01bc 2533     		add	r3, r3, #37
 2812 01be 1A78     		ldrb	r2, [r3]
 2813 01c0 3B1C     		mov	r3, r7
 2814 01c2 2533     		add	r3, r3, #37
 2815 01c4 0132     		add	r2, r2, #1
 2816 01c6 1A70     		strb	r2, [r3]
 2817              	.L107:
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2818              		.loc 1 703 0 is_stmt 0 discriminator 1
 2819 01c8 3A1C     		mov	r2, r7
 2820 01ca 2532     		add	r2, r2, #37
 2821 01cc FB1C     		add	r3, r7, #3
 2822 01ce 1278     		ldrb	r2, [r2]
 2823 01d0 1B78     		ldrb	r3, [r3]
 2824 01d2 9A42     		cmp	r2, r3
 2825 01d4 D4D1     		bne	.L110
 2826              	.L106:
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2827              		.loc 1 687 0 is_stmt 1
 2828 01d6 3B1C     		mov	r3, r7
 2829 01d8 2633     		add	r3, r3, #38
 2830 01da 1A78     		ldrb	r2, [r3]
 2831 01dc 3B1C     		mov	r3, r7
 2832 01de 2633     		add	r3, r3, #38
 2833 01e0 013A     		sub	r2, r2, #1
 2834 01e2 1A70     		strb	r2, [r3]
 2835              	.L100:
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2836              		.loc 1 687 0 is_stmt 0 discriminator 1
 2837 01e4 3B1C     		mov	r3, r7
 2838 01e6 2633     		add	r3, r3, #38
 2839 01e8 1B78     		ldrb	r3, [r3]
 2840 01ea 002B     		cmp	r3, #0
 2841 01ec 00D0     		beq	.LCB2420
 2842 01ee 80E7     		b	.L111	@long jump
 2843              	.LCB2420:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 64


 711:.\Modbus.c    ****       }
 712:.\Modbus.c    ****     }
 713:.\Modbus.c    ****   }
 714:.\Modbus.c    ****   crc = generateCRC(8);
 2844              		.loc 1 714 0 is_stmt 1
 2845 01f0 0820     		mov	r0, #8
 2846 01f2 FFF7FEFF 		bl	generateCRC
 2847 01f6 031C     		mov	r3, r0
 2848 01f8 7B60     		str	r3, [r7, #4]
 715:.\Modbus.c    **** 
 716:.\Modbus.c    ****   response[6] = crc >> 8;
 2849              		.loc 1 716 0
 2850 01fa 7B68     		ldr	r3, [r7, #4]
 2851 01fc 1B0A     		lsr	r3, r3, #8
 2852 01fe DAB2     		uxtb	r2, r3
 2853 0200 164B     		ldr	r3, .L114+4
 2854 0202 9A71     		strb	r2, [r3, #6]
 717:.\Modbus.c    ****   response[7] = crc;
 2855              		.loc 1 717 0
 2856 0204 7B68     		ldr	r3, [r7, #4]
 2857 0206 DAB2     		uxtb	r2, r3
 2858 0208 144B     		ldr	r3, .L114+4
 2859 020a DA71     		strb	r2, [r3, #7]
 718:.\Modbus.c    **** 
 719:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2860              		.loc 1 719 0
 2861 020c 0120     		mov	r0, #1
 2862 020e FFF7FEFF 		bl	writeEnable_Write
 720:.\Modbus.c    **** 
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2863              		.loc 1 721 0
 2864 0212 3B1C     		mov	r3, r7
 2865 0214 2633     		add	r3, r3, #38
 2866 0216 0022     		mov	r2, #0
 2867 0218 1A70     		strb	r2, [r3]
 2868 021a 0EE0     		b	.L112
 2869              	.L113:
 722:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2870              		.loc 1 722 0 discriminator 2
 2871 021c 3B1C     		mov	r3, r7
 2872 021e 2633     		add	r3, r3, #38
 2873 0220 1B78     		ldrb	r3, [r3]
 2874 0222 0E4A     		ldr	r2, .L114+4
 2875 0224 D35C     		ldrb	r3, [r2, r3]
 2876 0226 181C     		mov	r0, r3
 2877 0228 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2878              		.loc 1 721 0 discriminator 2
 2879 022c 3B1C     		mov	r3, r7
 2880 022e 2633     		add	r3, r3, #38
 2881 0230 1A78     		ldrb	r2, [r3]
 2882 0232 3B1C     		mov	r3, r7
 2883 0234 2633     		add	r3, r3, #38
 2884 0236 0132     		add	r2, r2, #1
 2885 0238 1A70     		strb	r2, [r3]
 2886              	.L112:
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 65


 2887              		.loc 1 721 0 is_stmt 0 discriminator 1
 2888 023a 3B1C     		mov	r3, r7
 2889 023c 2633     		add	r3, r3, #38
 2890 023e 1B78     		ldrb	r3, [r3]
 2891 0240 092B     		cmp	r3, #9
 2892 0242 EBD1     		bne	.L113
 723:.\Modbus.c    ****   }
 724:.\Modbus.c    ****   responseFinished(10);
 2893              		.loc 1 724 0 is_stmt 1
 2894 0244 0A20     		mov	r0, #10
 2895 0246 FFF7FEFF 		bl	responseFinished
 725:.\Modbus.c    ****   i=0;  
 2896              		.loc 1 725 0
 2897 024a 3B1C     		mov	r3, r7
 2898 024c 2633     		add	r3, r3, #38
 2899 024e 0022     		mov	r2, #0
 2900 0250 1A70     		strb	r2, [r3]
 726:.\Modbus.c    **** }
 2901              		.loc 1 726 0
 2902 0252 BD46     		mov	sp, r7
 2903 0254 0AB0     		add	sp, sp, #40
 2904              		@ sp needed
 2905 0256 80BD     		pop	{r7, pc}
 2906              	.L115:
 2907              		.align	2
 2908              	.L114:
 2909 0258 00000000 		.word	received
 2910 025c 00000000 		.word	response
 2911 0260 00000000 		.word	coils
 2912              		.cfi_endproc
 2913              	.LFE43:
 2914              		.size	writeMultipleCoils, .-writeMultipleCoils
 2915              		.section	.text.generateCRC,"ax",%progbits
 2916              		.align	2
 2917              		.global	generateCRC
 2918              		.code	16
 2919              		.thumb_func
 2920              		.type	generateCRC, %function
 2921              	generateCRC:
 2922              	.LFB44:
 727:.\Modbus.c    **** 
 728:.\Modbus.c    **** unsigned int generateCRC(unsigned char messageLength)
 729:.\Modbus.c    **** {
 2923              		.loc 1 729 0
 2924              		.cfi_startproc
 2925 0000 80B5     		push	{r7, lr}
 2926              		.cfi_def_cfa_offset 8
 2927              		.cfi_offset 7, -8
 2928              		.cfi_offset 14, -4
 2929 0002 88B0     		sub	sp, sp, #32
 2930              		.cfi_def_cfa_offset 40
 2931 0004 00AF     		add	r7, sp, #0
 2932              		.cfi_def_cfa_register 7
 2933 0006 021C     		mov	r2, r0
 2934 0008 FB1D     		add	r3, r7, #7
 2935 000a 1A70     		strb	r2, [r3]
 730:.\Modbus.c    **** unsigned int crc = 0xFFFF;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 66


 2936              		.loc 1 730 0
 2937 000c 244B     		ldr	r3, .L124
 2938 000e FB61     		str	r3, [r7, #28]
 731:.\Modbus.c    **** unsigned int crcHigh = 0;
 2939              		.loc 1 731 0
 2940 0010 0023     		mov	r3, #0
 2941 0012 3B61     		str	r3, [r7, #16]
 732:.\Modbus.c    **** unsigned int crcLow = 0;
 2942              		.loc 1 732 0
 2943 0014 0023     		mov	r3, #0
 2944 0016 FB60     		str	r3, [r7, #12]
 733:.\Modbus.c    **** int i,j = 0;
 2945              		.loc 1 733 0
 2946 0018 0023     		mov	r3, #0
 2947 001a 7B61     		str	r3, [r7, #20]
 734:.\Modbus.c    **** 
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 2948              		.loc 1 735 0
 2949 001c 0023     		mov	r3, #0
 2950 001e BB61     		str	r3, [r7, #24]
 2951 0020 21E0     		b	.L117
 2952              	.L122:
 736:.\Modbus.c    ****     crc ^= response[i];
 2953              		.loc 1 736 0
 2954 0022 204A     		ldr	r2, .L124+4
 2955 0024 BB69     		ldr	r3, [r7, #24]
 2956 0026 D318     		add	r3, r2, r3
 2957 0028 1B78     		ldrb	r3, [r3]
 2958 002a FA69     		ldr	r2, [r7, #28]
 2959 002c 5340     		eor	r3, r2
 2960 002e FB61     		str	r3, [r7, #28]
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2961              		.loc 1 737 0
 2962 0030 0823     		mov	r3, #8
 2963 0032 7B61     		str	r3, [r7, #20]
 2964 0034 11E0     		b	.L118
 2965              	.L121:
 738:.\Modbus.c    ****       if((crc & 0x0001) != 0){
 2966              		.loc 1 738 0
 2967 0036 FA69     		ldr	r2, [r7, #28]
 2968 0038 0123     		mov	r3, #1
 2969 003a 1340     		and	r3, r2
 2970 003c 07D0     		beq	.L119
 739:.\Modbus.c    ****         crc >>= 1;
 2971              		.loc 1 739 0
 2972 003e FB69     		ldr	r3, [r7, #28]
 2973 0040 5B08     		lsr	r3, r3, #1
 2974 0042 FB61     		str	r3, [r7, #28]
 740:.\Modbus.c    ****         crc ^= 0xA001;
 2975              		.loc 1 740 0
 2976 0044 FB69     		ldr	r3, [r7, #28]
 2977 0046 184A     		ldr	r2, .L124+8
 2978 0048 5340     		eor	r3, r2
 2979 004a FB61     		str	r3, [r7, #28]
 2980 004c 02E0     		b	.L120
 2981              	.L119:
 741:.\Modbus.c    ****       }
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 67


 742:.\Modbus.c    ****       else{
 743:.\Modbus.c    ****         crc >>= 1;
 2982              		.loc 1 743 0
 2983 004e FB69     		ldr	r3, [r7, #28]
 2984 0050 5B08     		lsr	r3, r3, #1
 2985 0052 FB61     		str	r3, [r7, #28]
 2986              	.L120:
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2987              		.loc 1 737 0
 2988 0054 7B69     		ldr	r3, [r7, #20]
 2989 0056 013B     		sub	r3, r3, #1
 2990 0058 7B61     		str	r3, [r7, #20]
 2991              	.L118:
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2992              		.loc 1 737 0 is_stmt 0 discriminator 1
 2993 005a 7B69     		ldr	r3, [r7, #20]
 2994 005c 002B     		cmp	r3, #0
 2995 005e EAD1     		bne	.L121
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 2996              		.loc 1 735 0 is_stmt 1
 2997 0060 BB69     		ldr	r3, [r7, #24]
 2998 0062 0133     		add	r3, r3, #1
 2999 0064 BB61     		str	r3, [r7, #24]
 3000              	.L117:
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 3001              		.loc 1 735 0 is_stmt 0 discriminator 1
 3002 0066 FB1D     		add	r3, r7, #7
 3003 0068 1B78     		ldrb	r3, [r3]
 3004 006a 9A1E     		sub	r2, r3, #2
 3005 006c BB69     		ldr	r3, [r7, #24]
 3006 006e 9A42     		cmp	r2, r3
 3007 0070 D7DC     		bgt	.L122
 744:.\Modbus.c    ****       }
 745:.\Modbus.c    ****     }
 746:.\Modbus.c    ****   }
 747:.\Modbus.c    **** //bytes are wrong way round so doing a swap here..
 748:.\Modbus.c    **** crcHigh = (crc & 0x00FF) <<8;
 3008              		.loc 1 748 0 is_stmt 1
 3009 0072 FB69     		ldr	r3, [r7, #28]
 3010 0074 1B02     		lsl	r3, r3, #8
 3011 0076 1B04     		lsl	r3, r3, #16
 3012 0078 1B0C     		lsr	r3, r3, #16
 3013 007a 3B61     		str	r3, [r7, #16]
 749:.\Modbus.c    **** crcLow = (crc & 0xFF00) >>8;
 3014              		.loc 1 749 0
 3015 007c FA69     		ldr	r2, [r7, #28]
 3016 007e FF23     		mov	r3, #255
 3017 0080 1B02     		lsl	r3, r3, #8
 3018 0082 1340     		and	r3, r2
 3019 0084 1B0A     		lsr	r3, r3, #8
 3020 0086 FB60     		str	r3, [r7, #12]
 750:.\Modbus.c    **** crcHigh |= crcLow;
 3021              		.loc 1 750 0
 3022 0088 3A69     		ldr	r2, [r7, #16]
 3023 008a FB68     		ldr	r3, [r7, #12]
 3024 008c 1343     		orr	r3, r2
 3025 008e 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 68


 751:.\Modbus.c    **** crc = crcHigh;
 3026              		.loc 1 751 0
 3027 0090 3B69     		ldr	r3, [r7, #16]
 3028 0092 FB61     		str	r3, [r7, #28]
 752:.\Modbus.c    **** return crc;
 3029              		.loc 1 752 0
 3030 0094 FB69     		ldr	r3, [r7, #28]
 753:.\Modbus.c    **** }
 3031              		.loc 1 753 0
 3032 0096 181C     		mov	r0, r3
 3033 0098 BD46     		mov	sp, r7
 3034 009a 08B0     		add	sp, sp, #32
 3035              		@ sp needed
 3036 009c 80BD     		pop	{r7, pc}
 3037              	.L125:
 3038 009e C046     		.align	2
 3039              	.L124:
 3040 00a0 FFFF0000 		.word	65535
 3041 00a4 00000000 		.word	response
 3042 00a8 01A00000 		.word	40961
 3043              		.cfi_endproc
 3044              	.LFE44:
 3045              		.size	generateCRC, .-generateCRC
 3046              		.section	.text.checkCRC,"ax",%progbits
 3047              		.align	2
 3048              		.global	checkCRC
 3049              		.code	16
 3050              		.thumb_func
 3051              		.type	checkCRC, %function
 3052              	checkCRC:
 3053              	.LFB45:
 754:.\Modbus.c    **** 
 755:.\Modbus.c    **** unsigned char checkCRC(void)
 756:.\Modbus.c    **** {
 3054              		.loc 1 756 0
 3055              		.cfi_startproc
 3056 0000 80B5     		push	{r7, lr}
 3057              		.cfi_def_cfa_offset 8
 3058              		.cfi_offset 7, -8
 3059              		.cfi_offset 14, -4
 3060 0002 86B0     		sub	sp, sp, #24
 3061              		.cfi_def_cfa_offset 32
 3062 0004 00AF     		add	r7, sp, #0
 3063              		.cfi_def_cfa_register 7
 757:.\Modbus.c    ****   unsigned int crc = 0xFFFF;
 3064              		.loc 1 757 0
 3065 0006 2A4B     		ldr	r3, .L135
 3066 0008 7B61     		str	r3, [r7, #20]
 758:.\Modbus.c    ****   unsigned int crcHigh = 0;
 3067              		.loc 1 758 0
 3068 000a 0023     		mov	r3, #0
 3069 000c BB60     		str	r3, [r7, #8]
 759:.\Modbus.c    ****   unsigned int crcLow = 0;
 3070              		.loc 1 759 0
 3071 000e 0023     		mov	r3, #0
 3072 0010 7B60     		str	r3, [r7, #4]
 760:.\Modbus.c    ****   int i,j = 0;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 69


 3073              		.loc 1 760 0
 3074 0012 0023     		mov	r3, #0
 3075 0014 FB60     		str	r3, [r7, #12]
 761:.\Modbus.c    **** 
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3076              		.loc 1 762 0
 3077 0016 0023     		mov	r3, #0
 3078 0018 3B61     		str	r3, [r7, #16]
 3079 001a 21E0     		b	.L127
 3080              	.L132:
 763:.\Modbus.c    ****       crc ^= received[i];
 3081              		.loc 1 763 0
 3082 001c 254A     		ldr	r2, .L135+4
 3083 001e 3B69     		ldr	r3, [r7, #16]
 3084 0020 D318     		add	r3, r2, r3
 3085 0022 1B78     		ldrb	r3, [r3]
 3086 0024 7A69     		ldr	r2, [r7, #20]
 3087 0026 5340     		eor	r3, r2
 3088 0028 7B61     		str	r3, [r7, #20]
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3089              		.loc 1 764 0
 3090 002a 0823     		mov	r3, #8
 3091 002c FB60     		str	r3, [r7, #12]
 3092 002e 11E0     		b	.L128
 3093              	.L131:
 765:.\Modbus.c    ****         if((crc & 0x0001) != 0){
 3094              		.loc 1 765 0
 3095 0030 7A69     		ldr	r2, [r7, #20]
 3096 0032 0123     		mov	r3, #1
 3097 0034 1340     		and	r3, r2
 3098 0036 07D0     		beq	.L129
 766:.\Modbus.c    ****           crc >>= 1;
 3099              		.loc 1 766 0
 3100 0038 7B69     		ldr	r3, [r7, #20]
 3101 003a 5B08     		lsr	r3, r3, #1
 3102 003c 7B61     		str	r3, [r7, #20]
 767:.\Modbus.c    ****           crc ^= 0xA001;
 3103              		.loc 1 767 0
 3104 003e 7B69     		ldr	r3, [r7, #20]
 3105 0040 1D4A     		ldr	r2, .L135+8
 3106 0042 5340     		eor	r3, r2
 3107 0044 7B61     		str	r3, [r7, #20]
 3108 0046 02E0     		b	.L130
 3109              	.L129:
 768:.\Modbus.c    ****         }
 769:.\Modbus.c    ****         else{
 770:.\Modbus.c    ****           crc >>= 1;
 3110              		.loc 1 770 0
 3111 0048 7B69     		ldr	r3, [r7, #20]
 3112 004a 5B08     		lsr	r3, r3, #1
 3113 004c 7B61     		str	r3, [r7, #20]
 3114              	.L130:
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3115              		.loc 1 764 0
 3116 004e FB68     		ldr	r3, [r7, #12]
 3117 0050 013B     		sub	r3, r3, #1
 3118 0052 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 70


 3119              	.L128:
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3120              		.loc 1 764 0 is_stmt 0 discriminator 1
 3121 0054 FB68     		ldr	r3, [r7, #12]
 3122 0056 002B     		cmp	r3, #0
 3123 0058 EAD1     		bne	.L131
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3124              		.loc 1 762 0 is_stmt 1
 3125 005a 3B69     		ldr	r3, [r7, #16]
 3126 005c 0133     		add	r3, r3, #1
 3127 005e 3B61     		str	r3, [r7, #16]
 3128              	.L127:
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3129              		.loc 1 762 0 is_stmt 0 discriminator 1
 3130 0060 164B     		ldr	r3, .L135+12
 3131 0062 1B78     		ldrb	r3, [r3]
 3132 0064 DBB2     		uxtb	r3, r3
 3133 0066 9A1E     		sub	r2, r3, #2
 3134 0068 3B69     		ldr	r3, [r7, #16]
 3135 006a 9A42     		cmp	r2, r3
 3136 006c D6DC     		bgt	.L132
 771:.\Modbus.c    ****         }
 772:.\Modbus.c    ****       }
 773:.\Modbus.c    ****     }
 774:.\Modbus.c    ****   //bytes are wrong way round so doing a swap here..
 775:.\Modbus.c    ****   crcHigh = (crc & 0x00FF);
 3137              		.loc 1 775 0 is_stmt 1
 3138 006e 7A69     		ldr	r2, [r7, #20]
 3139 0070 FF23     		mov	r3, #255
 3140 0072 1340     		and	r3, r2
 3141 0074 BB60     		str	r3, [r7, #8]
 776:.\Modbus.c    ****   crcLow = (crc & 0xFF00) >>8;
 3142              		.loc 1 776 0
 3143 0076 7A69     		ldr	r2, [r7, #20]
 3144 0078 FF23     		mov	r3, #255
 3145 007a 1B02     		lsl	r3, r3, #8
 3146 007c 1340     		and	r3, r2
 3147 007e 1B0A     		lsr	r3, r3, #8
 3148 0080 7B60     		str	r3, [r7, #4]
 777:.\Modbus.c    ****   if((crcHigh == received[i])&&(crcLow == received[i+1]))
 3149              		.loc 1 777 0
 3150 0082 0C4A     		ldr	r2, .L135+4
 3151 0084 3B69     		ldr	r3, [r7, #16]
 3152 0086 D318     		add	r3, r2, r3
 3153 0088 1B78     		ldrb	r3, [r3]
 3154 008a 1A1C     		mov	r2, r3
 3155 008c BB68     		ldr	r3, [r7, #8]
 3156 008e 9A42     		cmp	r2, r3
 3157 0090 09D1     		bne	.L133
 3158              		.loc 1 777 0 is_stmt 0 discriminator 1
 3159 0092 3B69     		ldr	r3, [r7, #16]
 3160 0094 0133     		add	r3, r3, #1
 3161 0096 074A     		ldr	r2, .L135+4
 3162 0098 D35C     		ldrb	r3, [r2, r3]
 3163 009a 1A1C     		mov	r2, r3
 3164 009c 7B68     		ldr	r3, [r7, #4]
 3165 009e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 71


 3166 00a0 01D1     		bne	.L133
 778:.\Modbus.c    ****   {
 779:.\Modbus.c    ****     return 1;
 3167              		.loc 1 779 0 is_stmt 1
 3168 00a2 0123     		mov	r3, #1
 3169 00a4 00E0     		b	.L134
 3170              	.L133:
 780:.\Modbus.c    ****   }
 781:.\Modbus.c    ****   else{
 782:.\Modbus.c    ****     return 0;
 3171              		.loc 1 782 0
 3172 00a6 0023     		mov	r3, #0
 3173              	.L134:
 783:.\Modbus.c    ****   }
 784:.\Modbus.c    **** 
 785:.\Modbus.c    **** 
 786:.\Modbus.c    **** }
 3174              		.loc 1 786 0
 3175 00a8 181C     		mov	r0, r3
 3176 00aa BD46     		mov	sp, r7
 3177 00ac 06B0     		add	sp, sp, #24
 3178              		@ sp needed
 3179 00ae 80BD     		pop	{r7, pc}
 3180              	.L136:
 3181              		.align	2
 3182              	.L135:
 3183 00b0 FFFF0000 		.word	65535
 3184 00b4 00000000 		.word	received
 3185 00b8 01A00000 		.word	40961
 3186 00bc 00000000 		.word	messageLength
 3187              		.cfi_endproc
 3188              	.LFE45:
 3189              		.size	checkCRC, .-checkCRC
 3190              		.section	.text.responseFinished,"ax",%progbits
 3191              		.align	2
 3192              		.global	responseFinished
 3193              		.code	16
 3194              		.thumb_func
 3195              		.type	responseFinished, %function
 3196              	responseFinished:
 3197              	.LFB46:
 787:.\Modbus.c    **** 
 788:.\Modbus.c    **** void responseFinished(int delay)
 789:.\Modbus.c    **** {
 3198              		.loc 1 789 0
 3199              		.cfi_startproc
 3200 0000 80B5     		push	{r7, lr}
 3201              		.cfi_def_cfa_offset 8
 3202              		.cfi_offset 7, -8
 3203              		.cfi_offset 14, -4
 3204 0002 82B0     		sub	sp, sp, #8
 3205              		.cfi_def_cfa_offset 16
 3206 0004 00AF     		add	r7, sp, #0
 3207              		.cfi_def_cfa_register 7
 3208 0006 7860     		str	r0, [r7, #4]
 790:.\Modbus.c    ****     //delay = 833*delay;
 791:.\Modbus.c    ****     //CyDelayUs(delay);
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 72


 792:.\Modbus.c    ****     //writeEnable_Write(0); //turn line back to normal
 793:.\Modbus.c    ****     //delay = delay;
 794:.\Modbus.c    ****     memset(&response[0], 0, sizeof(response)); //clear response
 3209              		.loc 1 794 0
 3210 0008 0A4B     		ldr	r3, .L138
 3211 000a 181C     		mov	r0, r3
 3212 000c 0021     		mov	r1, #0
 3213 000e 7D22     		mov	r2, #125
 3214 0010 FFF7FEFF 		bl	memset
 795:.\Modbus.c    ****     turnLineAround = delay+11;
 3215              		.loc 1 795 0
 3216 0014 7B68     		ldr	r3, [r7, #4]
 3217 0016 DBB2     		uxtb	r3, r3
 3218 0018 0B33     		add	r3, r3, #11
 3219 001a DAB2     		uxtb	r2, r3
 3220 001c 064B     		ldr	r3, .L138+4
 3221 001e 1A70     		strb	r2, [r3]
 796:.\Modbus.c    ****     MessageTimer_Start(); //start timer to go off, 833uS * amount of bytes and turn line back aroun
 3222              		.loc 1 796 0
 3223 0020 FFF7FEFF 		bl	MessageTimer_Start
 797:.\Modbus.c    ****     //the timer shouldn't be needed but the UART seems to not be operating synchronously.
 798:.\Modbus.c    ****     EndOfMessage_StartEx(endOfMessage_isr); 
 3224              		.loc 1 798 0
 3225 0024 054B     		ldr	r3, .L138+8
 3226 0026 181C     		mov	r0, r3
 3227 0028 FFF7FEFF 		bl	EndOfMessage_StartEx
 799:.\Modbus.c    **** }...
 3228              		.loc 1 799 0
 3229 002c BD46     		mov	sp, r7
 3230 002e 02B0     		add	sp, sp, #8
 3231              		@ sp needed
 3232 0030 80BD     		pop	{r7, pc}
 3233              	.L139:
 3234 0032 C046     		.align	2
 3235              	.L138:
 3236 0034 00000000 		.word	response
 3237 0038 00000000 		.word	turnLineAround
 3238 003c 00000000 		.word	endOfMessage_isr
 3239              		.cfi_endproc
 3240              	.LFE46:
 3241              		.size	responseFinished, .-responseFinished
 3242              		.text
 3243              	.Letext0:
 3244              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 3245              		.section	.debug_info,"",%progbits
 3246              	.Ldebug_info0:
 3247 0000 C6070000 		.4byte	0x7c6
 3248 0004 0400     		.2byte	0x4
 3249 0006 00000000 		.4byte	.Ldebug_abbrev0
 3250 000a 04       		.byte	0x4
 3251 000b 01       		.uleb128 0x1
 3252 000c 6D010000 		.4byte	.LASF81
 3253 0010 01       		.byte	0x1
 3254 0011 EF020000 		.4byte	.LASF82
 3255 0015 20000000 		.4byte	.LASF83
 3256 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3257 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 73


 3258 0021 00000000 		.4byte	.Ldebug_line0
 3259 0025 02       		.uleb128 0x2
 3260 0026 01       		.byte	0x1
 3261 0027 06       		.byte	0x6
 3262 0028 AC020000 		.4byte	.LASF0
 3263 002c 02       		.uleb128 0x2
 3264 002d 01       		.byte	0x1
 3265 002e 08       		.byte	0x8
 3266 002f 9E020000 		.4byte	.LASF1
 3267 0033 02       		.uleb128 0x2
 3268 0034 02       		.byte	0x2
 3269 0035 05       		.byte	0x5
 3270 0036 A2000000 		.4byte	.LASF2
 3271 003a 02       		.uleb128 0x2
 3272 003b 02       		.byte	0x2
 3273 003c 07       		.byte	0x7
 3274 003d 06030000 		.4byte	.LASF3
 3275 0041 02       		.uleb128 0x2
 3276 0042 04       		.byte	0x4
 3277 0043 05       		.byte	0x5
 3278 0044 48020000 		.4byte	.LASF4
 3279 0048 02       		.uleb128 0x2
 3280 0049 04       		.byte	0x4
 3281 004a 07       		.byte	0x7
 3282 004b 80030000 		.4byte	.LASF5
 3283 004f 02       		.uleb128 0x2
 3284 0050 08       		.byte	0x8
 3285 0051 05       		.byte	0x5
 3286 0052 0C020000 		.4byte	.LASF6
 3287 0056 02       		.uleb128 0x2
 3288 0057 08       		.byte	0x8
 3289 0058 07       		.byte	0x7
 3290 0059 B8020000 		.4byte	.LASF7
 3291 005d 03       		.uleb128 0x3
 3292 005e 04       		.byte	0x4
 3293 005f 05       		.byte	0x5
 3294 0060 696E7400 		.ascii	"int\000"
 3295 0064 02       		.uleb128 0x2
 3296 0065 04       		.byte	0x4
 3297 0066 07       		.byte	0x7
 3298 0067 E2020000 		.4byte	.LASF8
 3299 006b 04       		.uleb128 0x4
 3300 006c 37010000 		.4byte	.LASF9
 3301 0070 02       		.byte	0x2
 3302 0071 A1       		.byte	0xa1
 3303 0072 2C000000 		.4byte	0x2c
 3304 0076 04       		.uleb128 0x4
 3305 0077 15010000 		.4byte	.LASF10
 3306 007b 02       		.byte	0x2
 3307 007c A2       		.byte	0xa2
 3308 007d 3A000000 		.4byte	0x3a
 3309 0081 04       		.uleb128 0x4
 3310 0082 79030000 		.4byte	.LASF11
 3311 0086 02       		.byte	0x2
 3312 0087 A3       		.byte	0xa3
 3313 0088 48000000 		.4byte	0x48
 3314 008c 02       		.uleb128 0x2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 74


 3315 008d 04       		.byte	0x4
 3316 008e 04       		.byte	0x4
 3317 008f F5010000 		.4byte	.LASF12
 3318 0093 02       		.uleb128 0x2
 3319 0094 08       		.byte	0x8
 3320 0095 04       		.byte	0x4
 3321 0096 92030000 		.4byte	.LASF13
 3322 009a 02       		.uleb128 0x2
 3323 009b 01       		.byte	0x1
 3324 009c 08       		.byte	0x8
 3325 009d 3C030000 		.4byte	.LASF14
 3326 00a1 05       		.uleb128 0x5
 3327 00a2 6B000000 		.4byte	0x6b
 3328 00a6 02       		.uleb128 0x2
 3329 00a7 04       		.byte	0x4
 3330 00a8 07       		.byte	0x7
 3331 00a9 BB000000 		.4byte	.LASF15
 3332 00ad 06       		.uleb128 0x6
 3333 00ae E5040000 		.4byte	.LASF16
 3334 00b2 01       		.byte	0x1
 3335 00b3 28       		.byte	0x28
 3336 00b4 00000000 		.4byte	.LFB33
 3337 00b8 D8000000 		.4byte	.LFE33-.LFB33
 3338 00bc 01       		.uleb128 0x1
 3339 00bd 9C       		.byte	0x9c
 3340 00be 06       		.uleb128 0x6
 3341 00bf A5040000 		.4byte	.LASF17
 3342 00c3 01       		.byte	0x1
 3343 00c4 42       		.byte	0x42
 3344 00c5 00000000 		.4byte	.LFB34
 3345 00c9 FC000000 		.4byte	.LFE34-.LFB34
 3346 00cd 01       		.uleb128 0x1
 3347 00ce 9C       		.byte	0x9c
 3348 00cf 06       		.uleb128 0x6
 3349 00d0 11000000 		.4byte	.LASF18
 3350 00d4 01       		.byte	0x1
 3351 00d5 72       		.byte	0x72
 3352 00d6 00000000 		.4byte	.LFB35
 3353 00da 98000000 		.4byte	.LFE35-.LFB35
 3354 00de 01       		.uleb128 0x1
 3355 00df 9C       		.byte	0x9c
 3356 00e0 07       		.uleb128 0x7
 3357 00e1 D9020000 		.4byte	.LASF23
 3358 00e5 01       		.byte	0x1
 3359 00e6 96       		.byte	0x96
 3360 00e7 00000000 		.4byte	.LFB36
 3361 00eb 98020000 		.4byte	.LFE36-.LFB36
 3362 00ef 01       		.uleb128 0x1
 3363 00f0 9C       		.byte	0x9c
 3364 00f1 7A010000 		.4byte	0x17a
 3365 00f5 08       		.uleb128 0x8
 3366 00f6 4C040000 		.4byte	.LASF19
 3367 00fa 01       		.byte	0x1
 3368 00fb 9B       		.byte	0x9b
 3369 00fc 64000000 		.4byte	0x64
 3370 0100 02       		.uleb128 0x2
 3371 0101 91       		.byte	0x91
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 75


 3372 0102 64       		.sleb128 -28
 3373 0103 08       		.uleb128 0x8
 3374 0104 2B010000 		.4byte	.LASF20
 3375 0108 01       		.byte	0x1
 3376 0109 9C       		.byte	0x9c
 3377 010a 64000000 		.4byte	0x64
 3378 010e 02       		.uleb128 0x2
 3379 010f 91       		.byte	0x91
 3380 0110 60       		.sleb128 -32
 3381 0111 09       		.uleb128 0x9
 3382 0112 63726300 		.ascii	"crc\000"
 3383 0116 01       		.byte	0x1
 3384 0117 9D       		.byte	0x9d
 3385 0118 64000000 		.4byte	0x64
 3386 011c 02       		.uleb128 0x2
 3387 011d 91       		.byte	0x91
 3388 011e 5C       		.sleb128 -36
 3389 011f 08       		.uleb128 0x8
 3390 0120 34040000 		.4byte	.LASF21
 3391 0124 01       		.byte	0x1
 3392 0125 9F       		.byte	0x9f
 3393 0126 2C000000 		.4byte	0x2c
 3394 012a 02       		.uleb128 0x2
 3395 012b 91       		.byte	0x91
 3396 012c 6F       		.sleb128 -17
 3397 012d 08       		.uleb128 0x8
 3398 012e 89000000 		.4byte	.LASF22
 3399 0132 01       		.byte	0x1
 3400 0133 A0       		.byte	0xa0
 3401 0134 2C000000 		.4byte	0x2c
 3402 0138 02       		.uleb128 0x2
 3403 0139 91       		.byte	0x91
 3404 013a 5B       		.sleb128 -37
 3405 013b 09       		.uleb128 0x9
 3406 013c 6C736200 		.ascii	"lsb\000"
 3407 0140 01       		.byte	0x1
 3408 0141 A1       		.byte	0xa1
 3409 0142 2C000000 		.4byte	0x2c
 3410 0146 02       		.uleb128 0x2
 3411 0147 91       		.byte	0x91
 3412 0148 6E       		.sleb128 -18
 3413 0149 09       		.uleb128 0x9
 3414 014a 6900     		.ascii	"i\000"
 3415 014c 01       		.byte	0x1
 3416 014d A2       		.byte	0xa2
 3417 014e 2C000000 		.4byte	0x2c
 3418 0152 02       		.uleb128 0x2
 3419 0153 91       		.byte	0x91
 3420 0154 6D       		.sleb128 -19
 3421 0155 09       		.uleb128 0x9
 3422 0156 6A00     		.ascii	"j\000"
 3423 0158 01       		.byte	0x1
 3424 0159 A2       		.byte	0xa2
 3425 015a 2C000000 		.4byte	0x2c
 3426 015e 02       		.uleb128 0x2
 3427 015f 91       		.byte	0x91
 3428 0160 6C       		.sleb128 -20
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 76


 3429 0161 09       		.uleb128 0x9
 3430 0162 6B00     		.ascii	"k\000"
 3431 0164 01       		.byte	0x1
 3432 0165 A2       		.byte	0xa2
 3433 0166 2C000000 		.4byte	0x2c
 3434 016a 02       		.uleb128 0x2
 3435 016b 91       		.byte	0x91
 3436 016c 6B       		.sleb128 -21
 3437 016d 09       		.uleb128 0x9
 3438 016e 6C00     		.ascii	"l\000"
 3439 0170 01       		.byte	0x1
 3440 0171 A2       		.byte	0xa2
 3441 0172 2C000000 		.4byte	0x2c
 3442 0176 02       		.uleb128 0x2
 3443 0177 91       		.byte	0x91
 3444 0178 6A       		.sleb128 -22
 3445 0179 00       		.byte	0
 3446 017a 07       		.uleb128 0x7
 3447 017b 1A040000 		.4byte	.LASF24
 3448 017f 01       		.byte	0x1
 3449 0180 E5       		.byte	0xe5
 3450 0181 00000000 		.4byte	.LFB37
 3451 0185 98020000 		.4byte	.LFE37-.LFB37
 3452 0189 01       		.uleb128 0x1
 3453 018a 9C       		.byte	0x9c
 3454 018b 14020000 		.4byte	0x214
 3455 018f 08       		.uleb128 0x8
 3456 0190 4C040000 		.4byte	.LASF19
 3457 0194 01       		.byte	0x1
 3458 0195 EA       		.byte	0xea
 3459 0196 64000000 		.4byte	0x64
 3460 019a 02       		.uleb128 0x2
 3461 019b 91       		.byte	0x91
 3462 019c 64       		.sleb128 -28
 3463 019d 08       		.uleb128 0x8
 3464 019e 2B010000 		.4byte	.LASF20
 3465 01a2 01       		.byte	0x1
 3466 01a3 EB       		.byte	0xeb
 3467 01a4 64000000 		.4byte	0x64
 3468 01a8 02       		.uleb128 0x2
 3469 01a9 91       		.byte	0x91
 3470 01aa 60       		.sleb128 -32
 3471 01ab 09       		.uleb128 0x9
 3472 01ac 63726300 		.ascii	"crc\000"
 3473 01b0 01       		.byte	0x1
 3474 01b1 EC       		.byte	0xec
 3475 01b2 64000000 		.4byte	0x64
 3476 01b6 02       		.uleb128 0x2
 3477 01b7 91       		.byte	0x91
 3478 01b8 5C       		.sleb128 -36
 3479 01b9 08       		.uleb128 0x8
 3480 01ba 34040000 		.4byte	.LASF21
 3481 01be 01       		.byte	0x1
 3482 01bf EE       		.byte	0xee
 3483 01c0 2C000000 		.4byte	0x2c
 3484 01c4 02       		.uleb128 0x2
 3485 01c5 91       		.byte	0x91
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 77


 3486 01c6 6F       		.sleb128 -17
 3487 01c7 08       		.uleb128 0x8
 3488 01c8 89000000 		.4byte	.LASF22
 3489 01cc 01       		.byte	0x1
 3490 01cd EF       		.byte	0xef
 3491 01ce 2C000000 		.4byte	0x2c
 3492 01d2 02       		.uleb128 0x2
 3493 01d3 91       		.byte	0x91
 3494 01d4 5B       		.sleb128 -37
 3495 01d5 09       		.uleb128 0x9
 3496 01d6 6C736200 		.ascii	"lsb\000"
 3497 01da 01       		.byte	0x1
 3498 01db F0       		.byte	0xf0
 3499 01dc 2C000000 		.4byte	0x2c
 3500 01e0 02       		.uleb128 0x2
 3501 01e1 91       		.byte	0x91
 3502 01e2 6E       		.sleb128 -18
 3503 01e3 09       		.uleb128 0x9
 3504 01e4 6900     		.ascii	"i\000"
 3505 01e6 01       		.byte	0x1
 3506 01e7 F1       		.byte	0xf1
 3507 01e8 2C000000 		.4byte	0x2c
 3508 01ec 02       		.uleb128 0x2
 3509 01ed 91       		.byte	0x91
 3510 01ee 6D       		.sleb128 -19
 3511 01ef 09       		.uleb128 0x9
 3512 01f0 6A00     		.ascii	"j\000"
 3513 01f2 01       		.byte	0x1
 3514 01f3 F1       		.byte	0xf1
 3515 01f4 2C000000 		.4byte	0x2c
 3516 01f8 02       		.uleb128 0x2
 3517 01f9 91       		.byte	0x91
 3518 01fa 6C       		.sleb128 -20
 3519 01fb 09       		.uleb128 0x9
 3520 01fc 6B00     		.ascii	"k\000"
 3521 01fe 01       		.byte	0x1
 3522 01ff F1       		.byte	0xf1
 3523 0200 2C000000 		.4byte	0x2c
 3524 0204 02       		.uleb128 0x2
 3525 0205 91       		.byte	0x91
 3526 0206 6B       		.sleb128 -21
 3527 0207 09       		.uleb128 0x9
 3528 0208 6C00     		.ascii	"l\000"
 3529 020a 01       		.byte	0x1
 3530 020b F1       		.byte	0xf1
 3531 020c 2C000000 		.4byte	0x2c
 3532 0210 02       		.uleb128 0x2
 3533 0211 91       		.byte	0x91
 3534 0212 6A       		.sleb128 -22
 3535 0213 00       		.byte	0
 3536 0214 0A       		.uleb128 0xa
 3537 0215 98040000 		.4byte	.LASF25
 3538 0219 01       		.byte	0x1
 3539 021a 3501     		.2byte	0x135
 3540 021c 00000000 		.4byte	.LFB38
 3541 0220 AC010000 		.4byte	.LFE38-.LFB38
 3542 0224 01       		.uleb128 0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 78


 3543 0225 9C       		.byte	0x9c
 3544 0226 72020000 		.4byte	0x272
 3545 022a 0B       		.uleb128 0xb
 3546 022b 63020000 		.4byte	.LASF26
 3547 022f 01       		.byte	0x1
 3548 0230 3701     		.2byte	0x137
 3549 0232 64000000 		.4byte	0x64
 3550 0236 02       		.uleb128 0x2
 3551 0237 91       		.byte	0x91
 3552 0238 6C       		.sleb128 -20
 3553 0239 0B       		.uleb128 0xb
 3554 023a 41040000 		.4byte	.LASF27
 3555 023e 01       		.byte	0x1
 3556 023f 3801     		.2byte	0x138
 3557 0241 64000000 		.4byte	0x64
 3558 0245 02       		.uleb128 0x2
 3559 0246 91       		.byte	0x91
 3560 0247 68       		.sleb128 -24
 3561 0248 0C       		.uleb128 0xc
 3562 0249 6A00     		.ascii	"j\000"
 3563 024b 01       		.byte	0x1
 3564 024c 3901     		.2byte	0x139
 3565 024e 2C000000 		.4byte	0x2c
 3566 0252 02       		.uleb128 0x2
 3567 0253 91       		.byte	0x91
 3568 0254 77       		.sleb128 -9
 3569 0255 0C       		.uleb128 0xc
 3570 0256 63726300 		.ascii	"crc\000"
 3571 025a 01       		.byte	0x1
 3572 025b 3A01     		.2byte	0x13a
 3573 025d 64000000 		.4byte	0x64
 3574 0261 02       		.uleb128 0x2
 3575 0262 91       		.byte	0x91
 3576 0263 64       		.sleb128 -28
 3577 0264 0C       		.uleb128 0xc
 3578 0265 6900     		.ascii	"i\000"
 3579 0267 01       		.byte	0x1
 3580 0268 3B01     		.2byte	0x13b
 3581 026a 64000000 		.4byte	0x64
 3582 026e 02       		.uleb128 0x2
 3583 026f 91       		.byte	0x91
 3584 0270 70       		.sleb128 -16
 3585 0271 00       		.byte	0
 3586 0272 0A       		.uleb128 0xa
 3587 0273 DD040000 		.4byte	.LASF28
 3588 0277 01       		.byte	0x1
 3589 0278 6B01     		.2byte	0x16b
 3590 027a 00000000 		.4byte	.LFB39
 3591 027e AC010000 		.4byte	.LFE39-.LFB39
 3592 0282 01       		.uleb128 0x1
 3593 0283 9C       		.byte	0x9c
 3594 0284 D0020000 		.4byte	0x2d0
 3595 0288 0B       		.uleb128 0xb
 3596 0289 63020000 		.4byte	.LASF26
 3597 028d 01       		.byte	0x1
 3598 028e 6D01     		.2byte	0x16d
 3599 0290 64000000 		.4byte	0x64
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 79


 3600 0294 02       		.uleb128 0x2
 3601 0295 91       		.byte	0x91
 3602 0296 6C       		.sleb128 -20
 3603 0297 0B       		.uleb128 0xb
 3604 0298 41040000 		.4byte	.LASF27
 3605 029c 01       		.byte	0x1
 3606 029d 6E01     		.2byte	0x16e
 3607 029f 64000000 		.4byte	0x64
 3608 02a3 02       		.uleb128 0x2
 3609 02a4 91       		.byte	0x91
 3610 02a5 68       		.sleb128 -24
 3611 02a6 0C       		.uleb128 0xc
 3612 02a7 6A00     		.ascii	"j\000"
 3613 02a9 01       		.byte	0x1
 3614 02aa 6F01     		.2byte	0x16f
 3615 02ac 2C000000 		.4byte	0x2c
 3616 02b0 02       		.uleb128 0x2
 3617 02b1 91       		.byte	0x91
 3618 02b2 77       		.sleb128 -9
 3619 02b3 0C       		.uleb128 0xc
 3620 02b4 63726300 		.ascii	"crc\000"
 3621 02b8 01       		.byte	0x1
 3622 02b9 7001     		.2byte	0x170
 3623 02bb 64000000 		.4byte	0x64
 3624 02bf 02       		.uleb128 0x2
 3625 02c0 91       		.byte	0x91
 3626 02c1 64       		.sleb128 -28
 3627 02c2 0C       		.uleb128 0xc
 3628 02c3 6900     		.ascii	"i\000"
 3629 02c5 01       		.byte	0x1
 3630 02c6 7101     		.2byte	0x171
 3631 02c8 64000000 		.4byte	0x64
 3632 02cc 02       		.uleb128 0x2
 3633 02cd 91       		.byte	0x91
 3634 02ce 70       		.sleb128 -16
 3635 02cf 00       		.byte	0
 3636 02d0 0A       		.uleb128 0xa
 3637 02d1 8F040000 		.4byte	.LASF29
 3638 02d5 01       		.byte	0x1
 3639 02d6 9F01     		.2byte	0x19f
 3640 02d8 00000000 		.4byte	.LFB40
 3641 02dc 00010000 		.4byte	.LFE40-.LFB40
 3642 02e0 01       		.uleb128 0x1
 3643 02e1 9C       		.byte	0x9c
 3644 02e2 5D030000 		.4byte	0x35d
 3645 02e6 0B       		.uleb128 0xb
 3646 02e7 4B010000 		.4byte	.LASF30
 3647 02eb 01       		.byte	0x1
 3648 02ec A401     		.2byte	0x1a4
 3649 02ee 64000000 		.4byte	0x64
 3650 02f2 02       		.uleb128 0x2
 3651 02f3 91       		.byte	0x91
 3652 02f4 70       		.sleb128 -16
 3653 02f5 0B       		.uleb128 0xb
 3654 02f6 39020000 		.4byte	.LASF31
 3655 02fa 01       		.byte	0x1
 3656 02fb A501     		.2byte	0x1a5
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 80


 3657 02fd 64000000 		.4byte	0x64
 3658 0301 02       		.uleb128 0x2
 3659 0302 91       		.byte	0x91
 3660 0303 6C       		.sleb128 -20
 3661 0304 0B       		.uleb128 0xb
 3662 0305 80020000 		.4byte	.LASF32
 3663 0309 01       		.byte	0x1
 3664 030a A601     		.2byte	0x1a6
 3665 030c 64000000 		.4byte	0x64
 3666 0310 02       		.uleb128 0x2
 3667 0311 91       		.byte	0x91
 3668 0312 68       		.sleb128 -24
 3669 0313 0B       		.uleb128 0xb
 3670 0314 D8000000 		.4byte	.LASF33
 3671 0318 01       		.byte	0x1
 3672 0319 A801     		.2byte	0x1a8
 3673 031b 64000000 		.4byte	0x64
 3674 031f 02       		.uleb128 0x2
 3675 0320 91       		.byte	0x91
 3676 0321 64       		.sleb128 -28
 3677 0322 0B       		.uleb128 0xb
 3678 0323 F9030000 		.4byte	.LASF34
 3679 0327 01       		.byte	0x1
 3680 0328 A901     		.2byte	0x1a9
 3681 032a 64000000 		.4byte	0x64
 3682 032e 02       		.uleb128 0x2
 3683 032f 91       		.byte	0x91
 3684 0330 60       		.sleb128 -32
 3685 0331 0B       		.uleb128 0xb
 3686 0332 6E020000 		.4byte	.LASF35
 3687 0336 01       		.byte	0x1
 3688 0337 AA01     		.2byte	0x1aa
 3689 0339 64000000 		.4byte	0x64
 3690 033d 02       		.uleb128 0x2
 3691 033e 91       		.byte	0x91
 3692 033f 5C       		.sleb128 -36
 3693 0340 0C       		.uleb128 0xc
 3694 0341 63726300 		.ascii	"crc\000"
 3695 0345 01       		.byte	0x1
 3696 0346 AC01     		.2byte	0x1ac
 3697 0348 64000000 		.4byte	0x64
 3698 034c 02       		.uleb128 0x2
 3699 034d 91       		.byte	0x91
 3700 034e 58       		.sleb128 -40
 3701 034f 0C       		.uleb128 0xc
 3702 0350 6900     		.ascii	"i\000"
 3703 0352 01       		.byte	0x1
 3704 0353 AD01     		.2byte	0x1ad
 3705 0355 64000000 		.4byte	0x64
 3706 0359 02       		.uleb128 0x2
 3707 035a 91       		.byte	0x91
 3708 035b 74       		.sleb128 -12
 3709 035c 00       		.byte	0
 3710 035d 0A       		.uleb128 0xa
 3711 035e 51020000 		.4byte	.LASF36
 3712 0362 01       		.byte	0x1
 3713 0363 D801     		.2byte	0x1d8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 81


 3714 0365 00000000 		.4byte	.LFB41
 3715 0369 88010000 		.4byte	.LFE41-.LFB41
 3716 036d 01       		.uleb128 0x1
 3717 036e 9C       		.byte	0x9c
 3718 036f 24040000 		.4byte	0x424
 3719 0373 0B       		.uleb128 0xb
 3720 0374 FA020000 		.4byte	.LASF37
 3721 0378 01       		.byte	0x1
 3722 0379 DD01     		.2byte	0x1dd
 3723 037b 64000000 		.4byte	0x64
 3724 037f 02       		.uleb128 0x2
 3725 0380 91       		.byte	0x91
 3726 0381 6C       		.sleb128 -20
 3727 0382 0B       		.uleb128 0xb
 3728 0383 1A020000 		.4byte	.LASF38
 3729 0387 01       		.byte	0x1
 3730 0388 DE01     		.2byte	0x1de
 3731 038a 64000000 		.4byte	0x64
 3732 038e 02       		.uleb128 0x2
 3733 038f 91       		.byte	0x91
 3734 0390 68       		.sleb128 -24
 3735 0391 0B       		.uleb128 0xb
 3736 0392 1C010000 		.4byte	.LASF39
 3737 0396 01       		.byte	0x1
 3738 0397 DF01     		.2byte	0x1df
 3739 0399 64000000 		.4byte	0x64
 3740 039d 02       		.uleb128 0x2
 3741 039e 91       		.byte	0x91
 3742 039f 64       		.sleb128 -28
 3743 03a0 0B       		.uleb128 0xb
 3744 03a1 B0030000 		.4byte	.LASF40
 3745 03a5 01       		.byte	0x1
 3746 03a6 E001     		.2byte	0x1e0
 3747 03a8 64000000 		.4byte	0x64
 3748 03ac 02       		.uleb128 0x2
 3749 03ad 91       		.byte	0x91
 3750 03ae 60       		.sleb128 -32
 3751 03af 0B       		.uleb128 0xb
 3752 03b0 69030000 		.4byte	.LASF41
 3753 03b4 01       		.byte	0x1
 3754 03b5 E101     		.2byte	0x1e1
 3755 03b7 64000000 		.4byte	0x64
 3756 03bb 02       		.uleb128 0x2
 3757 03bc 91       		.byte	0x91
 3758 03bd 5C       		.sleb128 -36
 3759 03be 0B       		.uleb128 0xb
 3760 03bf 73040000 		.4byte	.LASF42
 3761 03c3 01       		.byte	0x1
 3762 03c4 E201     		.2byte	0x1e2
 3763 03c6 64000000 		.4byte	0x64
 3764 03ca 02       		.uleb128 0x2
 3765 03cb 91       		.byte	0x91
 3766 03cc 58       		.sleb128 -40
 3767 03cd 0B       		.uleb128 0xb
 3768 03ce 75000000 		.4byte	.LASF43
 3769 03d2 01       		.byte	0x1
 3770 03d3 E301     		.2byte	0x1e3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 82


 3771 03d5 64000000 		.4byte	0x64
 3772 03d9 02       		.uleb128 0x2
 3773 03da 91       		.byte	0x91
 3774 03db 54       		.sleb128 -44
 3775 03dc 0B       		.uleb128 0xb
 3776 03dd F6000000 		.4byte	.LASF44
 3777 03e1 01       		.byte	0x1
 3778 03e2 E401     		.2byte	0x1e4
 3779 03e4 64000000 		.4byte	0x64
 3780 03e8 02       		.uleb128 0x2
 3781 03e9 91       		.byte	0x91
 3782 03ea 50       		.sleb128 -48
 3783 03eb 0B       		.uleb128 0xb
 3784 03ec D5030000 		.4byte	.LASF45
 3785 03f0 01       		.byte	0x1
 3786 03f1 E501     		.2byte	0x1e5
 3787 03f3 64000000 		.4byte	0x64
 3788 03f7 02       		.uleb128 0x2
 3789 03f8 91       		.byte	0x91
 3790 03f9 4C       		.sleb128 -52
 3791 03fa 0C       		.uleb128 0xc
 3792 03fb 6A00     		.ascii	"j\000"
 3793 03fd 01       		.byte	0x1
 3794 03fe E901     		.2byte	0x1e9
 3795 0400 2C000000 		.4byte	0x2c
 3796 0404 02       		.uleb128 0x2
 3797 0405 91       		.byte	0x91
 3798 0406 77       		.sleb128 -9
 3799 0407 0C       		.uleb128 0xc
 3800 0408 63726300 		.ascii	"crc\000"
 3801 040c 01       		.byte	0x1
 3802 040d EA01     		.2byte	0x1ea
 3803 040f 64000000 		.4byte	0x64
 3804 0413 02       		.uleb128 0x2
 3805 0414 91       		.byte	0x91
 3806 0415 48       		.sleb128 -56
 3807 0416 0C       		.uleb128 0xc
 3808 0417 6900     		.ascii	"i\000"
 3809 0419 01       		.byte	0x1
 3810 041a EB01     		.2byte	0x1eb
 3811 041c 64000000 		.4byte	0x64
 3812 0420 02       		.uleb128 0x2
 3813 0421 91       		.byte	0x91
 3814 0422 70       		.sleb128 -16
 3815 0423 00       		.byte	0
 3816 0424 0A       		.uleb128 0xa
 3817 0425 CF020000 		.4byte	.LASF46
 3818 0429 01       		.byte	0x1
 3819 042a 3702     		.2byte	0x237
 3820 042c 00000000 		.4byte	.LFB42
 3821 0430 10010000 		.4byte	.LFE42-.LFB42
 3822 0434 01       		.uleb128 0x1
 3823 0435 9C       		.byte	0x9c
 3824 0436 B1040000 		.4byte	0x4b1
 3825 043a 0B       		.uleb128 0xb
 3826 043b 3D010000 		.4byte	.LASF47
 3827 043f 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 83


 3828 0440 3C02     		.2byte	0x23c
 3829 0442 64000000 		.4byte	0x64
 3830 0446 02       		.uleb128 0x2
 3831 0447 91       		.byte	0x91
 3832 0448 70       		.sleb128 -16
 3833 0449 0B       		.uleb128 0xb
 3834 044a 2A020000 		.4byte	.LASF48
 3835 044e 01       		.byte	0x1
 3836 044f 3D02     		.2byte	0x23d
 3837 0451 64000000 		.4byte	0x64
 3838 0455 02       		.uleb128 0x2
 3839 0456 91       		.byte	0x91
 3840 0457 6C       		.sleb128 -20
 3841 0458 0B       		.uleb128 0xb
 3842 0459 57040000 		.4byte	.LASF49
 3843 045d 01       		.byte	0x1
 3844 045e 3E02     		.2byte	0x23e
 3845 0460 64000000 		.4byte	0x64
 3846 0464 02       		.uleb128 0x2
 3847 0465 91       		.byte	0x91
 3848 0466 68       		.sleb128 -24
 3849 0467 0B       		.uleb128 0xb
 3850 0468 CA000000 		.4byte	.LASF50
 3851 046c 01       		.byte	0x1
 3852 046d 4002     		.2byte	0x240
 3853 046f 64000000 		.4byte	0x64
 3854 0473 02       		.uleb128 0x2
 3855 0474 91       		.byte	0x91
 3856 0475 64       		.sleb128 -28
 3857 0476 0B       		.uleb128 0xb
 3858 0477 00000000 		.4byte	.LASF51
 3859 047b 01       		.byte	0x1
 3860 047c 4102     		.2byte	0x241
 3861 047e 64000000 		.4byte	0x64
 3862 0482 02       		.uleb128 0x2
 3863 0483 91       		.byte	0x91
 3864 0484 60       		.sleb128 -32
 3865 0485 0B       		.uleb128 0xb
 3866 0486 57030000 		.4byte	.LASF52
 3867 048a 01       		.byte	0x1
 3868 048b 4202     		.2byte	0x242
 3869 048d 64000000 		.4byte	0x64
 3870 0491 02       		.uleb128 0x2
 3871 0492 91       		.byte	0x91
 3872 0493 5C       		.sleb128 -36
 3873 0494 0C       		.uleb128 0xc
 3874 0495 6900     		.ascii	"i\000"
 3875 0497 01       		.byte	0x1
 3876 0498 4302     		.2byte	0x243
 3877 049a 5D000000 		.4byte	0x5d
 3878 049e 02       		.uleb128 0x2
 3879 049f 91       		.byte	0x91
 3880 04a0 74       		.sleb128 -12
 3881 04a1 0C       		.uleb128 0xc
 3882 04a2 63726300 		.ascii	"crc\000"
 3883 04a6 01       		.byte	0x1
 3884 04a7 4402     		.2byte	0x244
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 84


 3885 04a9 64000000 		.4byte	0x64
 3886 04ad 02       		.uleb128 0x2
 3887 04ae 91       		.byte	0x91
 3888 04af 58       		.sleb128 -40
 3889 04b0 00       		.byte	0
 3890 04b1 0A       		.uleb128 0xa
 3891 04b2 8B020000 		.4byte	.LASF53
 3892 04b6 01       		.byte	0x1
 3893 04b7 7402     		.2byte	0x274
 3894 04b9 00000000 		.4byte	.LFB43
 3895 04bd 64020000 		.4byte	.LFE43-.LFB43
 3896 04c1 01       		.uleb128 0x1
 3897 04c2 9C       		.byte	0x9c
 3898 04c3 92050000 		.4byte	0x592
 3899 04c7 0B       		.uleb128 0xb
 3900 04c8 E9010000 		.4byte	.LASF54
 3901 04cc 01       		.byte	0x1
 3902 04cd 7902     		.2byte	0x279
 3903 04cf 64000000 		.4byte	0x64
 3904 04d3 02       		.uleb128 0x2
 3905 04d4 91       		.byte	0x91
 3906 04d5 6C       		.sleb128 -20
 3907 04d6 0B       		.uleb128 0xb
 3908 04d7 0A040000 		.4byte	.LASF55
 3909 04db 01       		.byte	0x1
 3910 04dc 7A02     		.2byte	0x27a
 3911 04de 64000000 		.4byte	0x64
 3912 04e2 02       		.uleb128 0x2
 3913 04e3 91       		.byte	0x91
 3914 04e4 68       		.sleb128 -24
 3915 04e5 0B       		.uleb128 0xb
 3916 04e6 06010000 		.4byte	.LASF56
 3917 04ea 01       		.byte	0x1
 3918 04eb 7B02     		.2byte	0x27b
 3919 04ed 64000000 		.4byte	0x64
 3920 04f1 02       		.uleb128 0x2
 3921 04f2 91       		.byte	0x91
 3922 04f3 64       		.sleb128 -28
 3923 04f4 0B       		.uleb128 0xb
 3924 04f5 82040000 		.4byte	.LASF57
 3925 04f9 01       		.byte	0x1
 3926 04fa 7C02     		.2byte	0x27c
 3927 04fc 64000000 		.4byte	0x64
 3928 0500 02       		.uleb128 0x2
 3929 0501 91       		.byte	0x91
 3930 0502 60       		.sleb128 -32
 3931 0503 0B       		.uleb128 0xb
 3932 0504 FB010000 		.4byte	.LASF58
 3933 0508 01       		.byte	0x1
 3934 0509 7D02     		.2byte	0x27d
 3935 050b 64000000 		.4byte	0x64
 3936 050f 02       		.uleb128 0x2
 3937 0510 91       		.byte	0x91
 3938 0511 5C       		.sleb128 -36
 3939 0512 0B       		.uleb128 0xb
 3940 0513 E6000000 		.4byte	.LASF59
 3941 0517 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 85


 3942 0518 7E02     		.2byte	0x27e
 3943 051a 64000000 		.4byte	0x64
 3944 051e 02       		.uleb128 0x2
 3945 051f 91       		.byte	0x91
 3946 0520 58       		.sleb128 -40
 3947 0521 0C       		.uleb128 0xc
 3948 0522 63726300 		.ascii	"crc\000"
 3949 0526 01       		.byte	0x1
 3950 0527 8002     		.2byte	0x280
 3951 0529 64000000 		.4byte	0x64
 3952 052d 02       		.uleb128 0x2
 3953 052e 91       		.byte	0x91
 3954 052f 54       		.sleb128 -44
 3955 0530 0B       		.uleb128 0xb
 3956 0531 34040000 		.4byte	.LASF21
 3957 0535 01       		.byte	0x1
 3958 0536 8202     		.2byte	0x282
 3959 0538 2C000000 		.4byte	0x2c
 3960 053c 02       		.uleb128 0x2
 3961 053d 91       		.byte	0x91
 3962 053e 77       		.sleb128 -9
 3963 053f 0B       		.uleb128 0xb
 3964 0540 89000000 		.4byte	.LASF22
 3965 0544 01       		.byte	0x1
 3966 0545 8302     		.2byte	0x283
 3967 0547 2C000000 		.4byte	0x2c
 3968 054b 02       		.uleb128 0x2
 3969 054c 91       		.byte	0x91
 3970 054d 53       		.sleb128 -45
 3971 054e 0C       		.uleb128 0xc
 3972 054f 6900     		.ascii	"i\000"
 3973 0551 01       		.byte	0x1
 3974 0552 8502     		.2byte	0x285
 3975 0554 2C000000 		.4byte	0x2c
 3976 0558 02       		.uleb128 0x2
 3977 0559 91       		.byte	0x91
 3978 055a 76       		.sleb128 -10
 3979 055b 0C       		.uleb128 0xc
 3980 055c 6A00     		.ascii	"j\000"
 3981 055e 01       		.byte	0x1
 3982 055f 8502     		.2byte	0x285
 3983 0561 2C000000 		.4byte	0x2c
 3984 0565 02       		.uleb128 0x2
 3985 0566 91       		.byte	0x91
 3986 0567 75       		.sleb128 -11
 3987 0568 0C       		.uleb128 0xc
 3988 0569 6C00     		.ascii	"l\000"
 3989 056b 01       		.byte	0x1
 3990 056c 8502     		.2byte	0x285
 3991 056e 2C000000 		.4byte	0x2c
 3992 0572 02       		.uleb128 0x2
 3993 0573 91       		.byte	0x91
 3994 0574 74       		.sleb128 -12
 3995 0575 0B       		.uleb128 0xb
 3996 0576 D5030000 		.4byte	.LASF45
 3997 057a 01       		.byte	0x1
 3998 057b AB02     		.2byte	0x2ab
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 86


 3999 057d 2C000000 		.4byte	0x2c
 4000 0581 02       		.uleb128 0x2
 4001 0582 91       		.byte	0x91
 4002 0583 52       		.sleb128 -46
 4003 0584 0C       		.uleb128 0xc
 4004 0585 7100     		.ascii	"q\000"
 4005 0587 01       		.byte	0x1
 4006 0588 AC02     		.2byte	0x2ac
 4007 058a 2C000000 		.4byte	0x2c
 4008 058e 02       		.uleb128 0x2
 4009 058f 91       		.byte	0x91
 4010 0590 73       		.sleb128 -13
 4011 0591 00       		.byte	0
 4012 0592 0D       		.uleb128 0xd
 4013 0593 28040000 		.4byte	.LASF62
 4014 0597 01       		.byte	0x1
 4015 0598 D802     		.2byte	0x2d8
 4016 059a 64000000 		.4byte	0x64
 4017 059e 00000000 		.4byte	.LFB44
 4018 05a2 AC000000 		.4byte	.LFE44-.LFB44
 4019 05a6 01       		.uleb128 0x1
 4020 05a7 9C       		.byte	0x9c
 4021 05a8 03060000 		.4byte	0x603
 4022 05ac 0E       		.uleb128 0xe
 4023 05ad A2030000 		.4byte	.LASF65
 4024 05b1 01       		.byte	0x1
 4025 05b2 D802     		.2byte	0x2d8
 4026 05b4 2C000000 		.4byte	0x2c
 4027 05b8 02       		.uleb128 0x2
 4028 05b9 91       		.byte	0x91
 4029 05ba 5F       		.sleb128 -33
 4030 05bb 0C       		.uleb128 0xc
 4031 05bc 63726300 		.ascii	"crc\000"
 4032 05c0 01       		.byte	0x1
 4033 05c1 DA02     		.2byte	0x2da
 4034 05c3 64000000 		.4byte	0x64
 4035 05c7 02       		.uleb128 0x2
 4036 05c8 91       		.byte	0x91
 4037 05c9 74       		.sleb128 -12
 4038 05ca 0B       		.uleb128 0xb
 4039 05cb 9A000000 		.4byte	.LASF60
 4040 05cf 01       		.byte	0x1
 4041 05d0 DB02     		.2byte	0x2db
 4042 05d2 64000000 		.4byte	0x64
 4043 05d6 02       		.uleb128 0x2
 4044 05d7 91       		.byte	0x91
 4045 05d8 68       		.sleb128 -24
 4046 05d9 0B       		.uleb128 0xb
 4047 05da 93000000 		.4byte	.LASF61
 4048 05de 01       		.byte	0x1
 4049 05df DC02     		.2byte	0x2dc
 4050 05e1 64000000 		.4byte	0x64
 4051 05e5 02       		.uleb128 0x2
 4052 05e6 91       		.byte	0x91
 4053 05e7 64       		.sleb128 -28
 4054 05e8 0C       		.uleb128 0xc
 4055 05e9 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 87


 4056 05eb 01       		.byte	0x1
 4057 05ec DD02     		.2byte	0x2dd
 4058 05ee 5D000000 		.4byte	0x5d
 4059 05f2 02       		.uleb128 0x2
 4060 05f3 91       		.byte	0x91
 4061 05f4 70       		.sleb128 -16
 4062 05f5 0C       		.uleb128 0xc
 4063 05f6 6A00     		.ascii	"j\000"
 4064 05f8 01       		.byte	0x1
 4065 05f9 DD02     		.2byte	0x2dd
 4066 05fb 5D000000 		.4byte	0x5d
 4067 05ff 02       		.uleb128 0x2
 4068 0600 91       		.byte	0x91
 4069 0601 6C       		.sleb128 -20
 4070 0602 00       		.byte	0
 4071 0603 0D       		.uleb128 0xd
 4072 0604 59010000 		.4byte	.LASF63
 4073 0608 01       		.byte	0x1
 4074 0609 F302     		.2byte	0x2f3
 4075 060b 2C000000 		.4byte	0x2c
 4076 060f 00000000 		.4byte	.LFB45
 4077 0613 C0000000 		.4byte	.LFE45-.LFB45
 4078 0617 01       		.uleb128 0x1
 4079 0618 9C       		.byte	0x9c
 4080 0619 65060000 		.4byte	0x665
 4081 061d 0C       		.uleb128 0xc
 4082 061e 63726300 		.ascii	"crc\000"
 4083 0622 01       		.byte	0x1
 4084 0623 F502     		.2byte	0x2f5
 4085 0625 64000000 		.4byte	0x64
 4086 0629 02       		.uleb128 0x2
 4087 062a 91       		.byte	0x91
 4088 062b 74       		.sleb128 -12
 4089 062c 0B       		.uleb128 0xb
 4090 062d 9A000000 		.4byte	.LASF60
 4091 0631 01       		.byte	0x1
 4092 0632 F602     		.2byte	0x2f6
 4093 0634 64000000 		.4byte	0x64
 4094 0638 02       		.uleb128 0x2
 4095 0639 91       		.byte	0x91
 4096 063a 68       		.sleb128 -24
 4097 063b 0B       		.uleb128 0xb
 4098 063c 93000000 		.4byte	.LASF61
 4099 0640 01       		.byte	0x1
 4100 0641 F702     		.2byte	0x2f7
 4101 0643 64000000 		.4byte	0x64
 4102 0647 02       		.uleb128 0x2
 4103 0648 91       		.byte	0x91
 4104 0649 64       		.sleb128 -28
 4105 064a 0C       		.uleb128 0xc
 4106 064b 6900     		.ascii	"i\000"
 4107 064d 01       		.byte	0x1
 4108 064e F802     		.2byte	0x2f8
 4109 0650 5D000000 		.4byte	0x5d
 4110 0654 02       		.uleb128 0x2
 4111 0655 91       		.byte	0x91
 4112 0656 70       		.sleb128 -16
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 88


 4113 0657 0C       		.uleb128 0xc
 4114 0658 6A00     		.ascii	"j\000"
 4115 065a 01       		.byte	0x1
 4116 065b F802     		.2byte	0x2f8
 4117 065d 5D000000 		.4byte	0x5d
 4118 0661 02       		.uleb128 0x2
 4119 0662 91       		.byte	0x91
 4120 0663 6C       		.sleb128 -20
 4121 0664 00       		.byte	0
 4122 0665 0A       		.uleb128 0xa
 4123 0666 B9040000 		.4byte	.LASF64
 4124 066a 01       		.byte	0x1
 4125 066b 1403     		.2byte	0x314
 4126 066d 00000000 		.4byte	.LFB46
 4127 0671 40000000 		.4byte	.LFE46-.LFB46
 4128 0675 01       		.uleb128 0x1
 4129 0676 9C       		.byte	0x9c
 4130 0677 8B060000 		.4byte	0x68b
 4131 067b 0E       		.uleb128 0xe
 4132 067c C4000000 		.4byte	.LASF66
 4133 0680 01       		.byte	0x1
 4134 0681 1403     		.2byte	0x314
 4135 0683 5D000000 		.4byte	0x5d
 4136 0687 02       		.uleb128 0x2
 4137 0688 91       		.byte	0x91
 4138 0689 74       		.sleb128 -12
 4139 068a 00       		.byte	0
 4140 068b 0F       		.uleb128 0xf
 4141 068c 76000000 		.4byte	0x76
 4142 0690 9B060000 		.4byte	0x69b
 4143 0694 10       		.uleb128 0x10
 4144 0695 A6000000 		.4byte	0xa6
 4145 0699 31       		.byte	0x31
 4146 069a 00       		.byte	0
 4147 069b 11       		.uleb128 0x11
 4148 069c 62010000 		.4byte	.LASF67
 4149 06a0 01       		.byte	0x1
 4150 06a1 15       		.byte	0x15
 4151 06a2 8B060000 		.4byte	0x68b
 4152 06a6 05       		.uleb128 0x5
 4153 06a7 03       		.byte	0x3
 4154 06a8 00000000 		.4byte	holdingReg
 4155 06ac 0F       		.uleb128 0xf
 4156 06ad 2C000000 		.4byte	0x2c
 4157 06b1 BC060000 		.4byte	0x6bc
 4158 06b5 10       		.uleb128 0x10
 4159 06b6 A6000000 		.4byte	0xa6
 4160 06ba 31       		.byte	0x31
 4161 06bb 00       		.byte	0
 4162 06bc 11       		.uleb128 0x11
 4163 06bd 51030000 		.4byte	.LASF68
 4164 06c1 01       		.byte	0x1
 4165 06c2 16       		.byte	0x16
 4166 06c3 AC060000 		.4byte	0x6ac
 4167 06c7 05       		.uleb128 0x5
 4168 06c8 03       		.byte	0x3
 4169 06c9 00000000 		.4byte	coils
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 89


 4170 06cd 0F       		.uleb128 0xf
 4171 06ce 2C000000 		.4byte	0x2c
 4172 06d2 DD060000 		.4byte	0x6dd
 4173 06d6 10       		.uleb128 0x10
 4174 06d7 A6000000 		.4byte	0xa6
 4175 06db 7C       		.byte	0x7c
 4176 06dc 00       		.byte	0
 4177 06dd 11       		.uleb128 0x11
 4178 06de CC030000 		.4byte	.LASF69
 4179 06e2 01       		.byte	0x1
 4180 06e3 17       		.byte	0x17
 4181 06e4 CD060000 		.4byte	0x6cd
 4182 06e8 05       		.uleb128 0x5
 4183 06e9 03       		.byte	0x3
 4184 06ea 00000000 		.4byte	received
 4185 06ee 11       		.uleb128 0x11
 4186 06ef 99030000 		.4byte	.LASF70
 4187 06f3 01       		.byte	0x1
 4188 06f4 18       		.byte	0x18
 4189 06f5 CD060000 		.4byte	0x6cd
 4190 06f9 05       		.uleb128 0x5
 4191 06fa 03       		.byte	0x3
 4192 06fb 00000000 		.4byte	response
 4193 06ff 11       		.uleb128 0x11
 4194 0700 EE030000 		.4byte	.LASF71
 4195 0704 01       		.byte	0x1
 4196 0705 1B       		.byte	0x1b
 4197 0706 A1000000 		.4byte	0xa1
 4198 070a 05       		.uleb128 0x5
 4199 070b 03       		.byte	0x3
 4200 070c 00000000 		.4byte	newMessage
 4201 0710 11       		.uleb128 0x11
 4202 0711 BC030000 		.4byte	.LASF72
 4203 0715 01       		.byte	0x1
 4204 0716 1C       		.byte	0x1c
 4205 0717 A1000000 		.4byte	0xa1
 4206 071b 05       		.uleb128 0x5
 4207 071c 03       		.byte	0x3
 4208 071d 00000000 		.4byte	middleOfMessage
 4209 0721 12       		.uleb128 0x12
 4210 0722 7A00     		.ascii	"z\000"
 4211 0724 01       		.byte	0x1
 4212 0725 1D       		.byte	0x1d
 4213 0726 A1000000 		.4byte	0xa1
 4214 072a 05       		.uleb128 0x5
 4215 072b 03       		.byte	0x3
 4216 072c 00000000 		.4byte	z
 4217 0730 11       		.uleb128 0x11
 4218 0731 24030000 		.4byte	.LASF73
 4219 0735 01       		.byte	0x1
 4220 0736 1E       		.byte	0x1e
 4221 0737 A1000000 		.4byte	0xa1
 4222 073b 05       		.uleb128 0x5
 4223 073c 03       		.byte	0x3
 4224 073d 00000000 		.4byte	messageLengthNotChanged
 4225 0741 11       		.uleb128 0x11
 4226 0742 A2030000 		.4byte	.LASF65
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 90


 4227 0746 01       		.byte	0x1
 4228 0747 1F       		.byte	0x1f
 4229 0748 A1000000 		.4byte	0xa1
 4230 074c 05       		.uleb128 0x5
 4231 074d 03       		.byte	0x3
 4232 074e 00000000 		.4byte	messageLength
 4233 0752 11       		.uleb128 0x11
 4234 0753 62040000 		.4byte	.LASF74
 4235 0757 01       		.byte	0x1
 4236 0758 20       		.byte	0x20
 4237 0759 A1000000 		.4byte	0xa1
 4238 075d 05       		.uleb128 0x5
 4239 075e 03       		.byte	0x3
 4240 075f 00000000 		.4byte	oldMessageLength
 4241 0763 11       		.uleb128 0x11
 4242 0764 19030000 		.4byte	.LASF75
 4243 0768 01       		.byte	0x1
 4244 0769 21       		.byte	0x21
 4245 076a A1000000 		.4byte	0xa1
 4246 076e 05       		.uleb128 0x5
 4247 076f 03       		.byte	0x3
 4248 0770 00000000 		.4byte	timerCount
 4249 0774 11       		.uleb128 0x11
 4250 0775 CA040000 		.4byte	.LASF76
 4251 0779 01       		.byte	0x1
 4252 077a 22       		.byte	0x22
 4253 077b A1000000 		.4byte	0xa1
 4254 077f 05       		.uleb128 0x5
 4255 0780 03       		.byte	0x3
 4256 0781 00000000 		.4byte	middleMessageCount
 4257 0785 11       		.uleb128 0x11
 4258 0786 41030000 		.4byte	.LASF77
 4259 078a 01       		.byte	0x1
 4260 078b 23       		.byte	0x23
 4261 078c A1000000 		.4byte	0xa1
 4262 0790 05       		.uleb128 0x5
 4263 0791 03       		.byte	0x3
 4264 0792 00000000 		.4byte	newMessageCount
 4265 0796 11       		.uleb128 0x11
 4266 0797 82000000 		.4byte	.LASF78
 4267 079b 01       		.byte	0x1
 4268 079c 24       		.byte	0x24
 4269 079d A1000000 		.4byte	0xa1
 4270 07a1 05       		.uleb128 0x5
 4271 07a2 03       		.byte	0x3
 4272 07a3 00000000 		.4byte	oldPin
 4273 07a7 11       		.uleb128 0x11
 4274 07a8 E0030000 		.4byte	.LASF79
 4275 07ac 01       		.byte	0x1
 4276 07ad 25       		.byte	0x25
 4277 07ae A1000000 		.4byte	0xa1
 4278 07b2 05       		.uleb128 0x5
 4279 07b3 03       		.byte	0x3
 4280 07b4 00000000 		.4byte	modbusMessage
 4281 07b8 11       		.uleb128 0x11
 4282 07b9 AC000000 		.4byte	.LASF80
 4283 07bd 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 91


 4284 07be 26       		.byte	0x26
 4285 07bf A1000000 		.4byte	0xa1
 4286 07c3 05       		.uleb128 0x5
 4287 07c4 03       		.byte	0x3
 4288 07c5 00000000 		.4byte	turnLineAround
 4289 07c9 00       		.byte	0
 4290              		.section	.debug_abbrev,"",%progbits
 4291              	.Ldebug_abbrev0:
 4292 0000 01       		.uleb128 0x1
 4293 0001 11       		.uleb128 0x11
 4294 0002 01       		.byte	0x1
 4295 0003 25       		.uleb128 0x25
 4296 0004 0E       		.uleb128 0xe
 4297 0005 13       		.uleb128 0x13
 4298 0006 0B       		.uleb128 0xb
 4299 0007 03       		.uleb128 0x3
 4300 0008 0E       		.uleb128 0xe
 4301 0009 1B       		.uleb128 0x1b
 4302 000a 0E       		.uleb128 0xe
 4303 000b 55       		.uleb128 0x55
 4304 000c 17       		.uleb128 0x17
 4305 000d 11       		.uleb128 0x11
 4306 000e 01       		.uleb128 0x1
 4307 000f 10       		.uleb128 0x10
 4308 0010 17       		.uleb128 0x17
 4309 0011 00       		.byte	0
 4310 0012 00       		.byte	0
 4311 0013 02       		.uleb128 0x2
 4312 0014 24       		.uleb128 0x24
 4313 0015 00       		.byte	0
 4314 0016 0B       		.uleb128 0xb
 4315 0017 0B       		.uleb128 0xb
 4316 0018 3E       		.uleb128 0x3e
 4317 0019 0B       		.uleb128 0xb
 4318 001a 03       		.uleb128 0x3
 4319 001b 0E       		.uleb128 0xe
 4320 001c 00       		.byte	0
 4321 001d 00       		.byte	0
 4322 001e 03       		.uleb128 0x3
 4323 001f 24       		.uleb128 0x24
 4324 0020 00       		.byte	0
 4325 0021 0B       		.uleb128 0xb
 4326 0022 0B       		.uleb128 0xb
 4327 0023 3E       		.uleb128 0x3e
 4328 0024 0B       		.uleb128 0xb
 4329 0025 03       		.uleb128 0x3
 4330 0026 08       		.uleb128 0x8
 4331 0027 00       		.byte	0
 4332 0028 00       		.byte	0
 4333 0029 04       		.uleb128 0x4
 4334 002a 16       		.uleb128 0x16
 4335 002b 00       		.byte	0
 4336 002c 03       		.uleb128 0x3
 4337 002d 0E       		.uleb128 0xe
 4338 002e 3A       		.uleb128 0x3a
 4339 002f 0B       		.uleb128 0xb
 4340 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 92


 4341 0031 0B       		.uleb128 0xb
 4342 0032 49       		.uleb128 0x49
 4343 0033 13       		.uleb128 0x13
 4344 0034 00       		.byte	0
 4345 0035 00       		.byte	0
 4346 0036 05       		.uleb128 0x5
 4347 0037 35       		.uleb128 0x35
 4348 0038 00       		.byte	0
 4349 0039 49       		.uleb128 0x49
 4350 003a 13       		.uleb128 0x13
 4351 003b 00       		.byte	0
 4352 003c 00       		.byte	0
 4353 003d 06       		.uleb128 0x6
 4354 003e 2E       		.uleb128 0x2e
 4355 003f 00       		.byte	0
 4356 0040 3F       		.uleb128 0x3f
 4357 0041 19       		.uleb128 0x19
 4358 0042 03       		.uleb128 0x3
 4359 0043 0E       		.uleb128 0xe
 4360 0044 3A       		.uleb128 0x3a
 4361 0045 0B       		.uleb128 0xb
 4362 0046 3B       		.uleb128 0x3b
 4363 0047 0B       		.uleb128 0xb
 4364 0048 27       		.uleb128 0x27
 4365 0049 19       		.uleb128 0x19
 4366 004a 11       		.uleb128 0x11
 4367 004b 01       		.uleb128 0x1
 4368 004c 12       		.uleb128 0x12
 4369 004d 06       		.uleb128 0x6
 4370 004e 40       		.uleb128 0x40
 4371 004f 18       		.uleb128 0x18
 4372 0050 9642     		.uleb128 0x2116
 4373 0052 19       		.uleb128 0x19
 4374 0053 00       		.byte	0
 4375 0054 00       		.byte	0
 4376 0055 07       		.uleb128 0x7
 4377 0056 2E       		.uleb128 0x2e
 4378 0057 01       		.byte	0x1
 4379 0058 3F       		.uleb128 0x3f
 4380 0059 19       		.uleb128 0x19
 4381 005a 03       		.uleb128 0x3
 4382 005b 0E       		.uleb128 0xe
 4383 005c 3A       		.uleb128 0x3a
 4384 005d 0B       		.uleb128 0xb
 4385 005e 3B       		.uleb128 0x3b
 4386 005f 0B       		.uleb128 0xb
 4387 0060 27       		.uleb128 0x27
 4388 0061 19       		.uleb128 0x19
 4389 0062 11       		.uleb128 0x11
 4390 0063 01       		.uleb128 0x1
 4391 0064 12       		.uleb128 0x12
 4392 0065 06       		.uleb128 0x6
 4393 0066 40       		.uleb128 0x40
 4394 0067 18       		.uleb128 0x18
 4395 0068 9642     		.uleb128 0x2116
 4396 006a 19       		.uleb128 0x19
 4397 006b 01       		.uleb128 0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 93


 4398 006c 13       		.uleb128 0x13
 4399 006d 00       		.byte	0
 4400 006e 00       		.byte	0
 4401 006f 08       		.uleb128 0x8
 4402 0070 34       		.uleb128 0x34
 4403 0071 00       		.byte	0
 4404 0072 03       		.uleb128 0x3
 4405 0073 0E       		.uleb128 0xe
 4406 0074 3A       		.uleb128 0x3a
 4407 0075 0B       		.uleb128 0xb
 4408 0076 3B       		.uleb128 0x3b
 4409 0077 0B       		.uleb128 0xb
 4410 0078 49       		.uleb128 0x49
 4411 0079 13       		.uleb128 0x13
 4412 007a 02       		.uleb128 0x2
 4413 007b 18       		.uleb128 0x18
 4414 007c 00       		.byte	0
 4415 007d 00       		.byte	0
 4416 007e 09       		.uleb128 0x9
 4417 007f 34       		.uleb128 0x34
 4418 0080 00       		.byte	0
 4419 0081 03       		.uleb128 0x3
 4420 0082 08       		.uleb128 0x8
 4421 0083 3A       		.uleb128 0x3a
 4422 0084 0B       		.uleb128 0xb
 4423 0085 3B       		.uleb128 0x3b
 4424 0086 0B       		.uleb128 0xb
 4425 0087 49       		.uleb128 0x49
 4426 0088 13       		.uleb128 0x13
 4427 0089 02       		.uleb128 0x2
 4428 008a 18       		.uleb128 0x18
 4429 008b 00       		.byte	0
 4430 008c 00       		.byte	0
 4431 008d 0A       		.uleb128 0xa
 4432 008e 2E       		.uleb128 0x2e
 4433 008f 01       		.byte	0x1
 4434 0090 3F       		.uleb128 0x3f
 4435 0091 19       		.uleb128 0x19
 4436 0092 03       		.uleb128 0x3
 4437 0093 0E       		.uleb128 0xe
 4438 0094 3A       		.uleb128 0x3a
 4439 0095 0B       		.uleb128 0xb
 4440 0096 3B       		.uleb128 0x3b
 4441 0097 05       		.uleb128 0x5
 4442 0098 27       		.uleb128 0x27
 4443 0099 19       		.uleb128 0x19
 4444 009a 11       		.uleb128 0x11
 4445 009b 01       		.uleb128 0x1
 4446 009c 12       		.uleb128 0x12
 4447 009d 06       		.uleb128 0x6
 4448 009e 40       		.uleb128 0x40
 4449 009f 18       		.uleb128 0x18
 4450 00a0 9642     		.uleb128 0x2116
 4451 00a2 19       		.uleb128 0x19
 4452 00a3 01       		.uleb128 0x1
 4453 00a4 13       		.uleb128 0x13
 4454 00a5 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 94


 4455 00a6 00       		.byte	0
 4456 00a7 0B       		.uleb128 0xb
 4457 00a8 34       		.uleb128 0x34
 4458 00a9 00       		.byte	0
 4459 00aa 03       		.uleb128 0x3
 4460 00ab 0E       		.uleb128 0xe
 4461 00ac 3A       		.uleb128 0x3a
 4462 00ad 0B       		.uleb128 0xb
 4463 00ae 3B       		.uleb128 0x3b
 4464 00af 05       		.uleb128 0x5
 4465 00b0 49       		.uleb128 0x49
 4466 00b1 13       		.uleb128 0x13
 4467 00b2 02       		.uleb128 0x2
 4468 00b3 18       		.uleb128 0x18
 4469 00b4 00       		.byte	0
 4470 00b5 00       		.byte	0
 4471 00b6 0C       		.uleb128 0xc
 4472 00b7 34       		.uleb128 0x34
 4473 00b8 00       		.byte	0
 4474 00b9 03       		.uleb128 0x3
 4475 00ba 08       		.uleb128 0x8
 4476 00bb 3A       		.uleb128 0x3a
 4477 00bc 0B       		.uleb128 0xb
 4478 00bd 3B       		.uleb128 0x3b
 4479 00be 05       		.uleb128 0x5
 4480 00bf 49       		.uleb128 0x49
 4481 00c0 13       		.uleb128 0x13
 4482 00c1 02       		.uleb128 0x2
 4483 00c2 18       		.uleb128 0x18
 4484 00c3 00       		.byte	0
 4485 00c4 00       		.byte	0
 4486 00c5 0D       		.uleb128 0xd
 4487 00c6 2E       		.uleb128 0x2e
 4488 00c7 01       		.byte	0x1
 4489 00c8 3F       		.uleb128 0x3f
 4490 00c9 19       		.uleb128 0x19
 4491 00ca 03       		.uleb128 0x3
 4492 00cb 0E       		.uleb128 0xe
 4493 00cc 3A       		.uleb128 0x3a
 4494 00cd 0B       		.uleb128 0xb
 4495 00ce 3B       		.uleb128 0x3b
 4496 00cf 05       		.uleb128 0x5
 4497 00d0 27       		.uleb128 0x27
 4498 00d1 19       		.uleb128 0x19
 4499 00d2 49       		.uleb128 0x49
 4500 00d3 13       		.uleb128 0x13
 4501 00d4 11       		.uleb128 0x11
 4502 00d5 01       		.uleb128 0x1
 4503 00d6 12       		.uleb128 0x12
 4504 00d7 06       		.uleb128 0x6
 4505 00d8 40       		.uleb128 0x40
 4506 00d9 18       		.uleb128 0x18
 4507 00da 9742     		.uleb128 0x2117
 4508 00dc 19       		.uleb128 0x19
 4509 00dd 01       		.uleb128 0x1
 4510 00de 13       		.uleb128 0x13
 4511 00df 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 95


 4512 00e0 00       		.byte	0
 4513 00e1 0E       		.uleb128 0xe
 4514 00e2 05       		.uleb128 0x5
 4515 00e3 00       		.byte	0
 4516 00e4 03       		.uleb128 0x3
 4517 00e5 0E       		.uleb128 0xe
 4518 00e6 3A       		.uleb128 0x3a
 4519 00e7 0B       		.uleb128 0xb
 4520 00e8 3B       		.uleb128 0x3b
 4521 00e9 05       		.uleb128 0x5
 4522 00ea 49       		.uleb128 0x49
 4523 00eb 13       		.uleb128 0x13
 4524 00ec 02       		.uleb128 0x2
 4525 00ed 18       		.uleb128 0x18
 4526 00ee 00       		.byte	0
 4527 00ef 00       		.byte	0
 4528 00f0 0F       		.uleb128 0xf
 4529 00f1 01       		.uleb128 0x1
 4530 00f2 01       		.byte	0x1
 4531 00f3 49       		.uleb128 0x49
 4532 00f4 13       		.uleb128 0x13
 4533 00f5 01       		.uleb128 0x1
 4534 00f6 13       		.uleb128 0x13
 4535 00f7 00       		.byte	0
 4536 00f8 00       		.byte	0
 4537 00f9 10       		.uleb128 0x10
 4538 00fa 21       		.uleb128 0x21
 4539 00fb 00       		.byte	0
 4540 00fc 49       		.uleb128 0x49
 4541 00fd 13       		.uleb128 0x13
 4542 00fe 2F       		.uleb128 0x2f
 4543 00ff 0B       		.uleb128 0xb
 4544 0100 00       		.byte	0
 4545 0101 00       		.byte	0
 4546 0102 11       		.uleb128 0x11
 4547 0103 34       		.uleb128 0x34
 4548 0104 00       		.byte	0
 4549 0105 03       		.uleb128 0x3
 4550 0106 0E       		.uleb128 0xe
 4551 0107 3A       		.uleb128 0x3a
 4552 0108 0B       		.uleb128 0xb
 4553 0109 3B       		.uleb128 0x3b
 4554 010a 0B       		.uleb128 0xb
 4555 010b 49       		.uleb128 0x49
 4556 010c 13       		.uleb128 0x13
 4557 010d 3F       		.uleb128 0x3f
 4558 010e 19       		.uleb128 0x19
 4559 010f 02       		.uleb128 0x2
 4560 0110 18       		.uleb128 0x18
 4561 0111 00       		.byte	0
 4562 0112 00       		.byte	0
 4563 0113 12       		.uleb128 0x12
 4564 0114 34       		.uleb128 0x34
 4565 0115 00       		.byte	0
 4566 0116 03       		.uleb128 0x3
 4567 0117 08       		.uleb128 0x8
 4568 0118 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 96


 4569 0119 0B       		.uleb128 0xb
 4570 011a 3B       		.uleb128 0x3b
 4571 011b 0B       		.uleb128 0xb
 4572 011c 49       		.uleb128 0x49
 4573 011d 13       		.uleb128 0x13
 4574 011e 3F       		.uleb128 0x3f
 4575 011f 19       		.uleb128 0x19
 4576 0120 02       		.uleb128 0x2
 4577 0121 18       		.uleb128 0x18
 4578 0122 00       		.byte	0
 4579 0123 00       		.byte	0
 4580 0124 00       		.byte	0
 4581              		.section	.debug_aranges,"",%progbits
 4582 0000 84000000 		.4byte	0x84
 4583 0004 0200     		.2byte	0x2
 4584 0006 00000000 		.4byte	.Ldebug_info0
 4585 000a 04       		.byte	0x4
 4586 000b 00       		.byte	0
 4587 000c 0000     		.2byte	0
 4588 000e 0000     		.2byte	0
 4589 0010 00000000 		.4byte	.LFB33
 4590 0014 D8000000 		.4byte	.LFE33-.LFB33
 4591 0018 00000000 		.4byte	.LFB34
 4592 001c FC000000 		.4byte	.LFE34-.LFB34
 4593 0020 00000000 		.4byte	.LFB35
 4594 0024 98000000 		.4byte	.LFE35-.LFB35
 4595 0028 00000000 		.4byte	.LFB36
 4596 002c 98020000 		.4byte	.LFE36-.LFB36
 4597 0030 00000000 		.4byte	.LFB37
 4598 0034 98020000 		.4byte	.LFE37-.LFB37
 4599 0038 00000000 		.4byte	.LFB38
 4600 003c AC010000 		.4byte	.LFE38-.LFB38
 4601 0040 00000000 		.4byte	.LFB39
 4602 0044 AC010000 		.4byte	.LFE39-.LFB39
 4603 0048 00000000 		.4byte	.LFB40
 4604 004c 00010000 		.4byte	.LFE40-.LFB40
 4605 0050 00000000 		.4byte	.LFB41
 4606 0054 88010000 		.4byte	.LFE41-.LFB41
 4607 0058 00000000 		.4byte	.LFB42
 4608 005c 10010000 		.4byte	.LFE42-.LFB42
 4609 0060 00000000 		.4byte	.LFB43
 4610 0064 64020000 		.4byte	.LFE43-.LFB43
 4611 0068 00000000 		.4byte	.LFB44
 4612 006c AC000000 		.4byte	.LFE44-.LFB44
 4613 0070 00000000 		.4byte	.LFB45
 4614 0074 C0000000 		.4byte	.LFE45-.LFB45
 4615 0078 00000000 		.4byte	.LFB46
 4616 007c 40000000 		.4byte	.LFE46-.LFB46
 4617 0080 00000000 		.4byte	0
 4618 0084 00000000 		.4byte	0
 4619              		.section	.debug_ranges,"",%progbits
 4620              	.Ldebug_ranges0:
 4621 0000 00000000 		.4byte	.LFB33
 4622 0004 D8000000 		.4byte	.LFE33
 4623 0008 00000000 		.4byte	.LFB34
 4624 000c FC000000 		.4byte	.LFE34
 4625 0010 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 97


 4626 0014 98000000 		.4byte	.LFE35
 4627 0018 00000000 		.4byte	.LFB36
 4628 001c 98020000 		.4byte	.LFE36
 4629 0020 00000000 		.4byte	.LFB37
 4630 0024 98020000 		.4byte	.LFE37
 4631 0028 00000000 		.4byte	.LFB38
 4632 002c AC010000 		.4byte	.LFE38
 4633 0030 00000000 		.4byte	.LFB39
 4634 0034 AC010000 		.4byte	.LFE39
 4635 0038 00000000 		.4byte	.LFB40
 4636 003c 00010000 		.4byte	.LFE40
 4637 0040 00000000 		.4byte	.LFB41
 4638 0044 88010000 		.4byte	.LFE41
 4639 0048 00000000 		.4byte	.LFB42
 4640 004c 10010000 		.4byte	.LFE42
 4641 0050 00000000 		.4byte	.LFB43
 4642 0054 64020000 		.4byte	.LFE43
 4643 0058 00000000 		.4byte	.LFB44
 4644 005c AC000000 		.4byte	.LFE44
 4645 0060 00000000 		.4byte	.LFB45
 4646 0064 C0000000 		.4byte	.LFE45
 4647 0068 00000000 		.4byte	.LFB46
 4648 006c 40000000 		.4byte	.LFE46
 4649 0070 00000000 		.4byte	0
 4650 0074 00000000 		.4byte	0
 4651              		.section	.debug_line,"",%progbits
 4652              	.Ldebug_line0:
 4653 0000 3F040000 		.section	.debug_str,"MS",%progbits,1
 4653      02004700 
 4653      00000201 
 4653      FB0E0D00 
 4653      01010101 
 4654              	.LASF51:
 4655 0000 77635F76 		.ascii	"wc_valToWriteLow\000"
 4655      616C546F 
 4655      57726974 
 4655      654C6F77 
 4655      00
 4656              	.LASF18:
 4657 0011 70726F63 		.ascii	"processMessage\000"
 4657      6573734D 
 4657      65737361 
 4657      676500
 4658              	.LASF83:
 4659 0020 433A5C55 		.ascii	"C:\\Users\\Sam\\OneDrive\\Github\\PSoC-4-Compass-Se"
 4659      73657273 
 4659      5C53616D 
 4659      5C4F6E65 
 4659      44726976 
 4660 004e 6E736F72 		.ascii	"nsor\\PSoC 4 Compass Modbus Slave.cydsn\000"
 4660      5C50536F 
 4660      43203420 
 4660      436F6D70 
 4660      61737320 
 4661              	.LASF43:
 4662 0075 776D725F 		.ascii	"wmr_numBytes\000"
 4662      6E756D42 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 98


 4662      79746573 
 4662      00
 4663              	.LASF78:
 4664 0082 6F6C6450 		.ascii	"oldPin\000"
 4664      696E00
 4665              	.LASF22:
 4666 0089 72656D61 		.ascii	"remainder\000"
 4666      696E6465 
 4666      7200
 4667              	.LASF61:
 4668 0093 6372634C 		.ascii	"crcLow\000"
 4668      6F7700
 4669              	.LASF60:
 4670 009a 63726348 		.ascii	"crcHigh\000"
 4670      69676800 
 4671              	.LASF2:
 4672 00a2 73686F72 		.ascii	"short int\000"
 4672      7420696E 
 4672      7400
 4673              	.LASF80:
 4674 00ac 7475726E 		.ascii	"turnLineAround\000"
 4674      4C696E65 
 4674      41726F75 
 4674      6E6400
 4675              	.LASF15:
 4676 00bb 73697A65 		.ascii	"sizetype\000"
 4676      74797065 
 4676      00
 4677              	.LASF66:
 4678 00c4 64656C61 		.ascii	"delay\000"
 4678      7900
 4679              	.LASF50:
 4680 00ca 77635F76 		.ascii	"wc_valToWrite\000"
 4680      616C546F 
 4680      57726974 
 4680      6500
 4681              	.LASF33:
 4682 00d8 77725F76 		.ascii	"wr_valToWrite\000"
 4682      616C546F 
 4682      57726974 
 4682      6500
 4683              	.LASF59:
 4684 00e6 776D635F 		.ascii	"wmc_numCoilsLow\000"
 4684      6E756D43 
 4684      6F696C73 
 4684      4C6F7700 
 4685              	.LASF44:
 4686 00f6 776D725F 		.ascii	"wmr_numBytesTST\000"
 4686      6E756D42 
 4686      79746573 
 4686      54535400 
 4687              	.LASF56:
 4688 0106 776D635F 		.ascii	"wmc_AddressLow\000"
 4688      41646472 
 4688      6573734C 
 4688      6F7700
 4689              	.LASF10:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 99


 4690 0115 75696E74 		.ascii	"uint16\000"
 4690      313600
 4691              	.LASF39:
 4692 011c 776D725F 		.ascii	"wmr_AddressLow\000"
 4692      41646472 
 4692      6573734C 
 4692      6F7700
 4693              	.LASF20:
 4694 012b 72635F6E 		.ascii	"rc_numCoils\000"
 4694      756D436F 
 4694      696C7300 
 4695              	.LASF9:
 4696 0137 75696E74 		.ascii	"uint8\000"
 4696      3800
 4697              	.LASF47:
 4698 013d 77635F41 		.ascii	"wc_AddressLow\000"
 4698      64647265 
 4698      73734C6F 
 4698      7700
 4699              	.LASF30:
 4700 014b 77725F41 		.ascii	"wr_AddressLow\000"
 4700      64647265 
 4700      73734C6F 
 4700      7700
 4701              	.LASF63:
 4702 0159 63686563 		.ascii	"checkCRC\000"
 4702      6B435243 
 4702      00
 4703              	.LASF67:
 4704 0162 686F6C64 		.ascii	"holdingReg\000"
 4704      696E6752 
 4704      656700
 4705              	.LASF81:
 4706 016d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4706      4320342E 
 4706      382E3420 
 4706      32303134 
 4706      30353236 
 4707 01a0 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4707      20726576 
 4707      6973696F 
 4707      6E203231 
 4707      31333538 
 4708 01d3 30202D66 		.ascii	"0 -ffunction-sections\000"
 4708      66756E63 
 4708      74696F6E 
 4708      2D736563 
 4708      74696F6E 
 4709              	.LASF54:
 4710 01e9 776D635F 		.ascii	"wmc_Address\000"
 4710      41646472 
 4710      65737300 
 4711              	.LASF12:
 4712 01f5 666C6F61 		.ascii	"float\000"
 4712      7400
 4713              	.LASF58:
 4714 01fb 776D635F 		.ascii	"wmc_numCoilsHigh\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 100


 4714      6E756D43 
 4714      6F696C73 
 4714      48696768 
 4714      00
 4715              	.LASF6:
 4716 020c 6C6F6E67 		.ascii	"long long int\000"
 4716      206C6F6E 
 4716      6720696E 
 4716      7400
 4717              	.LASF38:
 4718 021a 776D725F 		.ascii	"wmr_AddressHigh\000"
 4718      41646472 
 4718      65737348 
 4718      69676800 
 4719              	.LASF48:
 4720 022a 77635F41 		.ascii	"wc_AddressHigh\000"
 4720      64647265 
 4720      73734869 
 4720      676800
 4721              	.LASF31:
 4722 0239 77725F41 		.ascii	"wr_AddressHigh\000"
 4722      64647265 
 4722      73734869 
 4722      676800
 4723              	.LASF4:
 4724 0248 6C6F6E67 		.ascii	"long int\000"
 4724      20696E74 
 4724      00
 4725              	.LASF36:
 4726 0251 77726974 		.ascii	"writeMultipleRegs\000"
 4726      654D756C 
 4726      7469706C 
 4726      65526567 
 4726      7300
 4727              	.LASF26:
 4728 0263 72725F41 		.ascii	"rr_Address\000"
 4728      64647265 
 4728      737300
 4729              	.LASF35:
 4730 026e 77725F76 		.ascii	"wr_valToWriteHigh\000"
 4730      616C546F 
 4730      57726974 
 4730      65486967 
 4730      6800
 4731              	.LASF32:
 4732 0280 77725F41 		.ascii	"wr_Address\000"
 4732      64647265 
 4732      737300
 4733              	.LASF53:
 4734 028b 77726974 		.ascii	"writeMultipleCoils\000"
 4734      654D756C 
 4734      7469706C 
 4734      65436F69 
 4734      6C7300
 4735              	.LASF1:
 4736 029e 756E7369 		.ascii	"unsigned char\000"
 4736      676E6564 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 101


 4736      20636861 
 4736      7200
 4737              	.LASF0:
 4738 02ac 7369676E 		.ascii	"signed char\000"
 4738      65642063 
 4738      68617200 
 4739              	.LASF7:
 4740 02b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4740      206C6F6E 
 4740      6720756E 
 4740      7369676E 
 4740      65642069 
 4741              	.LASF46:
 4742 02cf 77726974 		.ascii	"writeCoil\000"
 4742      65436F69 
 4742      6C00
 4743              	.LASF23:
 4744 02d9 72656164 		.ascii	"readCoil\000"
 4744      436F696C 
 4744      00
 4745              	.LASF8:
 4746 02e2 756E7369 		.ascii	"unsigned int\000"
 4746      676E6564 
 4746      20696E74 
 4746      00
 4747              	.LASF82:
 4748 02ef 2E5C4D6F 		.ascii	".\\Modbus.c\000"
 4748      64627573 
 4748      2E6300
 4749              	.LASF37:
 4750 02fa 776D725F 		.ascii	"wmr_Address\000"
 4750      41646472 
 4750      65737300 
 4751              	.LASF3:
 4752 0306 73686F72 		.ascii	"short unsigned int\000"
 4752      7420756E 
 4752      7369676E 
 4752      65642069 
 4752      6E7400
 4753              	.LASF75:
 4754 0319 74696D65 		.ascii	"timerCount\000"
 4754      72436F75 
 4754      6E7400
 4755              	.LASF73:
 4756 0324 6D657373 		.ascii	"messageLengthNotChanged\000"
 4756      6167654C 
 4756      656E6774 
 4756      684E6F74 
 4756      4368616E 
 4757              	.LASF14:
 4758 033c 63686172 		.ascii	"char\000"
 4758      00
 4759              	.LASF77:
 4760 0341 6E65774D 		.ascii	"newMessageCount\000"
 4760      65737361 
 4760      6765436F 
 4760      756E7400 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 102


 4761              	.LASF68:
 4762 0351 636F696C 		.ascii	"coils\000"
 4762      7300
 4763              	.LASF52:
 4764 0357 77635F76 		.ascii	"wc_valToWriteHigh\000"
 4764      616C546F 
 4764      57726974 
 4764      65486967 
 4764      6800
 4765              	.LASF41:
 4766 0369 776D725F 		.ascii	"wmr_numRegsHigh\000"
 4766      6E756D52 
 4766      65677348 
 4766      69676800 
 4767              	.LASF11:
 4768 0379 75696E74 		.ascii	"uint32\000"
 4768      333200
 4769              	.LASF5:
 4770 0380 6C6F6E67 		.ascii	"long unsigned int\000"
 4770      20756E73 
 4770      69676E65 
 4770      6420696E 
 4770      7400
 4771              	.LASF13:
 4772 0392 646F7562 		.ascii	"double\000"
 4772      6C6500
 4773              	.LASF70:
 4774 0399 72657370 		.ascii	"response\000"
 4774      6F6E7365 
 4774      00
 4775              	.LASF65:
 4776 03a2 6D657373 		.ascii	"messageLength\000"
 4776      6167654C 
 4776      656E6774 
 4776      6800
 4777              	.LASF40:
 4778 03b0 776D725F 		.ascii	"wmr_numRegs\000"
 4778      6E756D52 
 4778      65677300 
 4779              	.LASF72:
 4780 03bc 6D696464 		.ascii	"middleOfMessage\000"
 4780      6C654F66 
 4780      4D657373 
 4780      61676500 
 4781              	.LASF69:
 4782 03cc 72656365 		.ascii	"received\000"
 4782      69766564 
 4782      00
 4783              	.LASF45:
 4784 03d5 76616C54 		.ascii	"valToWrite\000"
 4784      6F577269 
 4784      746500
 4785              	.LASF79:
 4786 03e0 6D6F6462 		.ascii	"modbusMessage\000"
 4786      75734D65 
 4786      73736167 
 4786      6500
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 103


 4787              	.LASF71:
 4788 03ee 6E65774D 		.ascii	"newMessage\000"
 4788      65737361 
 4788      676500
 4789              	.LASF34:
 4790 03f9 77725F76 		.ascii	"wr_valToWriteLow\000"
 4790      616C546F 
 4790      57726974 
 4790      654C6F77 
 4790      00
 4791              	.LASF55:
 4792 040a 776D635F 		.ascii	"wmc_AddressHigh\000"
 4792      41646472 
 4792      65737348 
 4792      69676800 
 4793              	.LASF24:
 4794 041a 72656164 		.ascii	"readInputCoil\000"
 4794      496E7075 
 4794      74436F69 
 4794      6C00
 4795              	.LASF62:
 4796 0428 67656E65 		.ascii	"generateCRC\000"
 4796      72617465 
 4796      43524300 
 4797              	.LASF21:
 4798 0434 686F774D 		.ascii	"howManyBytes\000"
 4798      616E7942 
 4798      79746573 
 4798      00
 4799              	.LASF27:
 4800 0441 72725F6E 		.ascii	"rr_numRegs\000"
 4800      756D5265 
 4800      677300
 4801              	.LASF19:
 4802 044c 72635F41 		.ascii	"rc_Address\000"
 4802      64647265 
 4802      737300
 4803              	.LASF49:
 4804 0457 77635F41 		.ascii	"wc_Address\000"
 4804      64647265 
 4804      737300
 4805              	.LASF74:
 4806 0462 6F6C644D 		.ascii	"oldMessageLength\000"
 4806      65737361 
 4806      67654C65 
 4806      6E677468 
 4806      00
 4807              	.LASF42:
 4808 0473 776D725F 		.ascii	"wmr_numRegsLow\000"
 4808      6E756D52 
 4808      6567734C 
 4808      6F7700
 4809              	.LASF57:
 4810 0482 776D635F 		.ascii	"wmc_numCoils\000"
 4810      6E756D43 
 4810      6F696C73 
 4810      00
ARM GAS  C:\Users\Sam\AppData\Local\Temp\cclbBQe0.s 			page 104


 4811              	.LASF29:
 4812 048f 77726974 		.ascii	"writeReg\000"
 4812      65526567 
 4812      00
 4813              	.LASF25:
 4814 0498 72656164 		.ascii	"readInputReg\000"
 4814      496E7075 
 4814      74526567 
 4814      00
 4815              	.LASF17:
 4816 04a5 63686563 		.ascii	"checkIfEndOfMessage\000"
 4816      6B496645 
 4816      6E644F66 
 4816      4D657373 
 4816      61676500 
 4817              	.LASF64:
 4818 04b9 72657370 		.ascii	"responseFinished\000"
 4818      6F6E7365 
 4818      46696E69 
 4818      73686564 
 4818      00
 4819              	.LASF76:
 4820 04ca 6D696464 		.ascii	"middleMessageCount\000"
 4820      6C654D65 
 4820      73736167 
 4820      65436F75 
 4820      6E7400
 4821              	.LASF28:
 4822 04dd 72656164 		.ascii	"readReg\000"
 4822      52656700 
 4823              	.LASF16:
 4824 04e5 6465636F 		.ascii	"decodeMessage\000"
 4824      64654D65 
 4824      73736167 
 4824      6500
 4825              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
